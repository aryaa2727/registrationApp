{"_id":"connect-mongo","_rev":"229-abc3b1ea7d2822d77bdbb47c78de0d8d","name":"connect-mongo","description":"MongoDB session store for Express and Connect","dist-tags":{"latest":"4.4.1","beta":"3.0.0-rc.2","next":"4.4.0-rc1"},"versions":{"0.1.0":{"name":"connect-mongo","version":"0.1.0","description":"MongoDB session store for Connect","keywords":["connect","mongo","mongodb","session","express"],"author":{"name":"Casey Banner","email":"kcbanner@gmail.com"},"dependencies":{"connect":">=1.0.3","mongodb":">=0.8.0"},"main":"index","engines":{"node":"0.4.x"},"_id":"connect-mongo@0.1.0","_engineSupported":true,"_npmVersion":"0.3.14","_nodeVersion":"v0.4.2","directories":{"lib":"./lib"},"files":[""],"_defaultsLoaded":true,"dist":{"shasum":"01624c23c53dd87bf5ffc77917ea9adad845fcda","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-0.1.0.tgz"}},"0.1.1":{"name":"connect-mongo","version":"0.1.1","description":"MongoDB session store for Connect","keywords":["connect","mongo","mongodb","session","express"],"author":{"name":"Casey Banner","email":"kcbanner@gmail.com"},"dependencies":{"connect":">=1.0.3","mongodb":">=0.8.0"},"main":"index","engines":{"node":"0.4.x"},"_id":"connect-mongo@0.1.1","_engineSupported":true,"_npmVersion":"0.3.14","_nodeVersion":"v0.4.2","directories":{"lib":"./lib"},"files":[""],"_defaultsLoaded":true,"dist":{"shasum":"66df471064d0fcecbc8ac8260ac946e5be29d8e6","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-0.1.1.tgz"}},"0.1.2":{"name":"connect-mongo","version":"0.1.2","description":"MongoDB session store for Connect","keywords":["connect","mongo","mongodb","session","express"],"author":{"name":"Casey Banner","email":"kcbanner@gmail.com"},"dependencies":{"connect":">=1.0.3","mongodb":">=0.8.0"},"main":"index","engines":{"node":"0.4.x"},"devDependencies":{},"_id":"connect-mongo@0.1.2","_engineSupported":true,"_npmVersion":"1.0.6","_nodeVersion":"v0.4.7","_defaultsLoaded":true,"dist":{"shasum":"3ee5cc4103531536d26a7a9daae308a6656d601c","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-0.1.2.tgz"},"scripts":{},"directories":{}},"0.1.3":{"name":"connect-mongo","version":"0.1.3","description":"MongoDB session store for Connect","keywords":["connect","mongo","mongodb","session","express"],"author":{"name":"Casey Banner","email":"kcbanner@gmail.com"},"dependencies":{"connect":">=1.0.3","mongodb":">=0.8.0"},"main":"index","engines":{"node":"0.4.x"},"devDependencies":{},"_id":"connect-mongo@0.1.3","_engineSupported":true,"_npmVersion":"1.0.6","_nodeVersion":"v0.4.8","_defaultsLoaded":true,"dist":{"shasum":"7c120f7f102a186f19807724a57b358988d2950e","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-0.1.3.tgz"},"scripts":{},"directories":{}},"0.1.4":{"name":"connect-mongo","version":"0.1.4","description":"MongoDB session store for Connect","keywords":["connect","mongo","mongodb","session","express"],"author":{"name":"Casey Banner","email":"kcbanner@gmail.com"},"dependencies":{"connect":">=1.0.3","mongodb":">=0.8.0"},"main":"index","engines":{"node":"0.4.x"},"devDependencies":{},"_id":"connect-mongo@0.1.4","_engineSupported":true,"_npmVersion":"1.0.6","_nodeVersion":"v0.4.8","_defaultsLoaded":true,"dist":{"shasum":"da1478d3d8880122762ee2531ad2b7eaa82c06a9","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-0.1.4.tgz"},"scripts":{},"directories":{}},"0.1.5":{"name":"connect-mongo","version":"0.1.5","description":"MongoDB session store for Connect","keywords":["connect","mongo","mongodb","session","express"],"author":{"name":"Casey Banner","email":"kcbanner@gmail.com"},"dependencies":{"connect":">=1.0.3","mongodb":">=0.8.0"},"main":"index","engines":{"node":"0.4.x"},"devDependencies":{},"_id":"connect-mongo@0.1.5","_engineSupported":true,"_npmVersion":"1.0.6","_nodeVersion":"v0.4.8","_defaultsLoaded":true,"dist":{"shasum":"2c9bf15e9fd2616d3b8e49434e52890f847e77f1","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-0.1.5.tgz"},"scripts":{},"directories":{}},"0.1.6":{"name":"connect-mongo","version":"0.1.6","description":"MongoDB session store for Connect","keywords":["connect","mongo","mongodb","session","express"],"author":{"name":"Casey Banner","email":"kcbanner@gmail.com"},"dependencies":{"connect":">=1.0.3","mongodb":">=0.8.0"},"main":"index","engines":{"node":"node >= 0.4.x"},"_npmUser":{"name":"kcbanner","email":"kcbanner@gmail.com"},"_id":"connect-mongo@0.1.6","devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.105","_nodeVersion":"v0.6.1","_defaultsLoaded":true,"dist":{"shasum":"fc27880ab4a525abfc1337fb9a614aabf371d0f3","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-0.1.6.tgz"},"maintainers":[{"name":"kcbanner","email":"kcbanner@gmail.com"}],"directories":{}},"0.1.7":{"name":"connect-mongo","version":"0.1.7","description":"MongoDB session store for Connect","keywords":["connect","mongo","mongodb","session","express"],"author":{"name":"Casey Banner","email":"kcbanner@gmail.com"},"dependencies":{"connect":">=1.0.3","mongodb":">=0.8.0"},"main":"index","engines":{"node":"node >= 0.4.x"},"_npmUser":{"name":"kcbanner","email":"kcbanner@gmail.com"},"_id":"connect-mongo@0.1.7","devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.106","_nodeVersion":"v0.4.7","_defaultsLoaded":true,"dist":{"shasum":"88b64d8086c00f2dc5c5cd4a654b2167b71c837d","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-0.1.7.tgz"},"maintainers":[{"name":"kcbanner","email":"kcbanner@gmail.com"}],"directories":{}},"0.1.8":{"name":"connect-mongo","version":"0.1.8","description":"MongoDB session store for Connect","keywords":["connect","mongo","mongodb","session","express"],"author":{"name":"Casey Banner","email":"kcbanner@gmail.com"},"dependencies":{"mongodb":"0.9.x"},"main":"index","engines":{"node":"node >= 0.4.x"},"_npmUser":{"name":"kcbanner","email":"kcbanner@gmail.com"},"_id":"connect-mongo@0.1.8","devDependencies":{},"optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.16","_nodeVersion":"v0.6.15","_defaultsLoaded":true,"dist":{"shasum":"82a75f86bb28479a96d0d343294d5b84754c5a8a","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-0.1.8.tgz"},"maintainers":[{"name":"kcbanner","email":"kcbanner@gmail.com"}],"directories":{}},"0.1.9":{"name":"connect-mongo","version":"0.1.9","description":"MongoDB session store for Connect","keywords":["connect","mongo","mongodb","session","express"],"author":{"name":"Casey Banner","email":"kcbanner@gmail.com"},"dependencies":{"mongodb":"0.9.x"},"main":"index","engines":{"node":"node >= 0.4.x"},"_npmUser":{"name":"kcbanner","email":"kcbanner@gmail.com"},"_id":"connect-mongo@0.1.9","devDependencies":{},"optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.16","_nodeVersion":"v0.6.15","_defaultsLoaded":true,"dist":{"shasum":"26569a2c53f593d4523db3264551c38a693d2e86","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-0.1.9.tgz"},"maintainers":[{"name":"kcbanner","email":"kcbanner@gmail.com"}],"directories":{}},"0.2.0":{"name":"connect-mongo","version":"0.2.0","description":"MongoDB session store for Connect","keywords":["connect","mongo","mongodb","session","express"],"author":{"name":"Casey Banner","email":"kcbanner@gmail.com"},"dependencies":{"mongodb":"1.0.x"},"devDependencies":{"mocha":"1.x","connect":">= 1.x","mongoose":">= 2.6.x"},"scripts":{"test":"make test"},"main":"index","engines":"node >= 0.4.x","_id":"connect-mongo@0.2.0","dist":{"shasum":"6b507f0b649304fbf674878814fceae607cf8d21","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-0.2.0.tgz"},"_npmVersion":"1.1.59","_npmUser":{"name":"kcbanner","email":"kcbanner@gmail.com"},"maintainers":[{"name":"kcbanner","email":"kcbanner@gmail.com"}],"directories":{}},"0.3.0":{"name":"connect-mongo","version":"0.3.0","description":"MongoDB session store for Connect","keywords":["connect","mongo","mongodb","session","express"],"author":{"name":"Casey Banner","email":"kcbanner@gmail.com"},"dependencies":{"mongodb":"1.2.x"},"devDependencies":{"mocha":"1.x","connect":">= 1.x","mongoose":">= 2.6.x"},"scripts":{"test":"make test"},"main":"index","engines":"node >= 0.4.x","_id":"connect-mongo@0.3.0","dist":{"shasum":"2ae17b31ccbcdb8e66e6434d1927dd7f1cbf347f","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-0.3.0.tgz"},"_npmVersion":"1.1.62","_npmUser":{"name":"kcbanner","email":"kcbanner@gmail.com"},"maintainers":[{"name":"kcbanner","email":"kcbanner@gmail.com"}],"directories":{}},"0.3.1":{"name":"connect-mongo","version":"0.3.1","description":"MongoDB session store for Connect","keywords":["connect","mongo","mongodb","session","express"],"author":{"name":"Casey Banner","email":"kcbanner@gmail.com"},"dependencies":{"mongodb":"1.2.x"},"files":["index.js"],"devDependencies":{"mocha":"1.x","connect":">= 1.x","mongoose":">= 2.6.x"},"scripts":{"test":"make test"},"main":"index","engines":"node >= 0.4.x","_id":"connect-mongo@0.3.1","dist":{"shasum":"8656785cc50f19b308f0043388ff772c7ba050c1","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-0.3.1.tgz"},"_npmVersion":"1.1.61","_npmUser":{"name":"kcbanner","email":"kcbanner@gmail.com"},"maintainers":[{"name":"kcbanner","email":"kcbanner@gmail.com"}],"directories":{}},"0.3.2":{"name":"connect-mongo","version":"0.3.2","description":"MongoDB session store for Connect","keywords":["connect","mongo","mongodb","session","express"],"author":{"name":"Casey Banner","email":"kcbanner@gmail.com"},"repository":{"type":"git","url":"https://github.com/kcbanner/connect-mongo.git"},"bugs":{"url":"https://github.com/kcbanner/connect-mongo/issues"},"dependencies":{"mongodb":"1.2.x"},"directories":{"lib":"./lib"},"devDependencies":{"mocha":"1.x","connect":">= 1.x","mongoose":">= 2.6.x"},"scripts":{"test":"make test"},"main":"./lib/connect-mongo","engines":"node >= 0.4.x","_id":"connect-mongo@0.3.2","dist":{"shasum":"7c24348749617cffbb387967ebed2e0c982cb8ae","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-0.3.2.tgz"},"_npmVersion":"1.1.61","_npmUser":{"name":"kcbanner","email":"kcbanner@gmail.com"},"maintainers":[{"name":"kcbanner","email":"kcbanner@gmail.com"}]},"0.3.3":{"name":"connect-mongo","version":"0.3.3","description":"MongoDB session store for Connect","keywords":["connect","mongo","mongodb","session","express"],"author":{"name":"Casey Banner","email":"kcbanner@gmail.com"},"repository":{"type":"git","url":"https://github.com/kcbanner/connect-mongo.git"},"bugs":{"url":"https://github.com/kcbanner/connect-mongo/issues"},"dependencies":{"mongodb":"1.2.x"},"directories":{"lib":"./lib"},"devDependencies":{"mocha":"1.x","connect":">= 1.x","mongoose":">= 2.6.x"},"scripts":{"test":"make test"},"main":"./lib/connect-mongo","engines":"node >= 0.4.x","_id":"connect-mongo@0.3.3","dist":{"shasum":"aeaa1ca8c947599131bd90e1a024cdb789fe0100","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-0.3.3.tgz"},"_npmVersion":"1.1.62","_npmUser":{"name":"kcbanner","email":"kcbanner@gmail.com"},"maintainers":[{"name":"kcbanner","email":"kcbanner@gmail.com"}]},"0.4.0":{"name":"connect-mongo","version":"0.4.0","description":"MongoDB session store for Connect","keywords":["connect","mongo","mongodb","session","express"],"author":{"name":"Casey Banner","email":"kcbanner@gmail.com"},"repository":{"type":"git","url":"https://github.com/kcbanner/connect-mongo.git"},"bugs":{"url":"https://github.com/kcbanner/connect-mongo/issues"},"dependencies":{"mongodb":"1.3.x"},"directories":{"lib":"./lib"},"devDependencies":{"mocha":"1.x","connect":">= 1.x","mongoose":">= 2.6.x"},"scripts":{"test":"make test"},"main":"./lib/connect-mongo","engines":"node >= 0.4.x","_id":"connect-mongo@0.4.0","dist":{"shasum":"4cb33728334a8f10f2d9e43d31369dbc2f856336","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-0.4.0.tgz"},"_from":".","_npmVersion":"1.3.11","_npmUser":{"name":"kcbanner","email":"kcbanner@gmail.com"},"maintainers":[{"name":"kcbanner","email":"kcbanner@gmail.com"}]},"0.4.1":{"name":"connect-mongo","version":"0.4.1","description":"MongoDB session store for Connect","keywords":["connect","mongo","mongodb","session","express"],"author":{"name":"Casey Banner","email":"kcbanner@gmail.com"},"repository":{"type":"git","url":"https://github.com/kcbanner/connect-mongo.git"},"bugs":{"url":"https://github.com/kcbanner/connect-mongo/issues"},"dependencies":{"mongodb":"1.3.x"},"directories":{"lib":"./lib"},"devDependencies":{"mocha":"1.x","connect":">= 1.x","mongoose":">= 2.6.x"},"scripts":{"test":"make test"},"main":"./lib/connect-mongo","engines":"node >= 0.4.x","homepage":"https://github.com/kcbanner/connect-mongo","_id":"connect-mongo@0.4.1","dist":{"shasum":"01ed3e71558fb3f0fdc97b784ef974f9909ddd11","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-0.4.1.tgz"},"_from":".","_npmVersion":"1.4.4","_npmUser":{"name":"kcbanner","email":"kcbanner@gmail.com"},"maintainers":[{"name":"kcbanner","email":"kcbanner@gmail.com"}]},"0.4.2":{"name":"connect-mongo","version":"0.4.2","description":"MongoDB session store for Connect","keywords":["connect","mongo","mongodb","session","express"],"author":{"name":"Casey Banner","email":"kcbanner@gmail.com"},"repository":{"type":"git","url":"https://github.com/kcbanner/connect-mongo.git"},"bugs":{"url":"https://github.com/kcbanner/connect-mongo/issues"},"dependencies":{"mongodb":"1.4.x"},"devDependencies":{"connect":"2.27.6","mocha":"1.x","mongoose":">= 2.6.x"},"scripts":{"test":"make test"},"main":"./lib/connect-mongo","gitHead":"a2bdc699fd22eec75322b7a930bc09e0cdd6fb3e","homepage":"https://github.com/kcbanner/connect-mongo","_id":"connect-mongo@0.4.2","_shasum":"a9817a9a229d790460ab0bf946ee0ce8ac3ccba7","_from":".","_npmVersion":"1.4.23","_npmUser":{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"},"maintainers":[{"name":"kcbanner","email":"kcbanner@gmail.com"},{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"}],"dist":{"shasum":"a9817a9a229d790460ab0bf946ee0ce8ac3ccba7","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-0.4.2.tgz"},"directories":{}},"0.5.0":{"name":"connect-mongo","version":"0.5.0","description":"MongoDB session store for Connect","keywords":["connect","mongo","mongodb","session","express"],"author":{"name":"Casey Banner","email":"kcbanner@gmail.com"},"repository":{"type":"git","url":"https://github.com/kcbanner/connect-mongo.git"},"bugs":{"url":"https://github.com/kcbanner/connect-mongo/issues"},"dependencies":{"debug":">= 0.7.0","depd":">= 0.4.0","mongodb":">= 1.2.0 <2.0.0"},"devDependencies":{"connect":"2.27.6","mocha":"1.x","mongoose":">= 2.6.0 < 4.0.0"},"scripts":{"test":"make test"},"main":"./lib/connect-mongo","gitHead":"621dfd4336835c59e63f6cfdc7cf11c31dcc1e9b","homepage":"https://github.com/kcbanner/connect-mongo","_id":"connect-mongo@0.5.0","_shasum":"bca33388dbadf26ba8ed1ac348e7b5cf6ce3478a","_from":".","_npmVersion":"1.4.23","_npmUser":{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"},"maintainers":[{"name":"kcbanner","email":"kcbanner@gmail.com"},{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"}],"dist":{"shasum":"bca33388dbadf26ba8ed1ac348e7b5cf6ce3478a","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-0.5.0.tgz"},"deprecated":"critical","directories":{}},"0.5.1":{"name":"connect-mongo","version":"0.5.1","description":"MongoDB session store for Connect","keywords":["connect","mongo","mongodb","session","express"],"author":{"name":"Casey Banner","email":"kcbanner@gmail.com"},"repository":{"type":"git","url":"https://github.com/kcbanner/connect-mongo.git"},"bugs":{"url":"https://github.com/kcbanner/connect-mongo/issues"},"dependencies":{"debug":">= 0.7.0","depd":">= 0.4.0","mongodb":">= 1.2.0 <2.0.0"},"devDependencies":{"connect":"2.27.6","mocha":"1.x","mongoose":">= 2.6.0 < 4.0.0"},"scripts":{"test":"make test"},"main":"./lib/connect-mongo","gitHead":"0023d3b7f544783dc0812eab54070020e7ceb530","homepage":"https://github.com/kcbanner/connect-mongo","_id":"connect-mongo@0.5.1","_shasum":"ad7051d6cda01ef9d19958df4d50777fdf347203","_from":".","_npmVersion":"1.4.23","_npmUser":{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"},"maintainers":[{"name":"kcbanner","email":"kcbanner@gmail.com"},{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"}],"dist":{"shasum":"ad7051d6cda01ef9d19958df4d50777fdf347203","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-0.5.1.tgz"},"directories":{}},"0.5.2":{"name":"connect-mongo","version":"0.5.2","description":"MongoDB session store for Express and Connect","keywords":["connect","mongo","mongodb","session","express"],"author":{"name":"Casey Banner","email":"kcbanner@gmail.com"},"repository":{"type":"git","url":"https://github.com/kcbanner/connect-mongo.git"},"bugs":{"url":"https://github.com/kcbanner/connect-mongo/issues"},"dependencies":{"debug":">= 0.7.0","depd":">= 0.4.0","mongodb":">= 1.2.0 <2.1.0"},"devDependencies":{"express-session":">= 1.0.0","mocha":"~2.1.0","mongoose":">= 2.6.0 < 4.0.0"},"scripts":{"test":"make test"},"main":"./lib/connect-mongo","_id":"connect-mongo@0.5.2","dist":{"shasum":"9675b3274d229cc2ab0ce0697278c9c2f566bd32","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-0.5.2.tgz"},"_from":".","_npmVersion":"1.2.30","_npmUser":{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"},"maintainers":[{"name":"kcbanner","email":"kcbanner@gmail.com"},{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"}],"directories":{}},"0.5.3":{"name":"connect-mongo","version":"0.5.3","description":"MongoDB session store for Express and Connect","keywords":["connect","mongo","mongodb","session","express"],"author":{"name":"Casey Banner","email":"kcbanner@gmail.com"},"repository":{"type":"git","url":"https://github.com/kcbanner/connect-mongo.git"},"bugs":{"url":"https://github.com/kcbanner/connect-mongo/issues"},"dependencies":{"debug":">= 0.7.0","depd":">= 0.4.0","mongodb":">= 1.2.0 <2.1.0"},"devDependencies":{"express-session":">= 1.0.0","mocha":"~2.1.0","mongoose":">= 2.6.0 < 4.0.0"},"scripts":{"test":"make test"},"main":"./lib/connect-mongo","gitHead":"a57ff772c5fd10aed7be055dc5a0099c83e00430","homepage":"https://github.com/kcbanner/connect-mongo","_id":"connect-mongo@0.5.3","_shasum":"88298a3dcb5bee65fb316b17c2a0e5f6f7c42481","_from":".","_npmVersion":"1.4.23","_npmUser":{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"},"maintainers":[{"name":"kcbanner","email":"kcbanner@gmail.com"},{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"}],"dist":{"shasum":"88298a3dcb5bee65fb316b17c2a0e5f6f7c42481","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-0.5.3.tgz"},"directories":{}},"0.6.0":{"name":"connect-mongo","version":"0.6.0","description":"MongoDB session store for Express and Connect","keywords":["connect","mongo","mongodb","session","express"],"author":{"name":"Casey Banner","email":"kcbanner@gmail.com"},"repository":{"type":"git","url":"https://github.com/kcbanner/connect-mongo.git"},"bugs":{"url":"https://github.com/kcbanner/connect-mongo/issues"},"dependencies":{"debug":">= 0.7.0","depd":">= 0.4.0","lodash":"*","mongodb":">= 1.2.0 <2.1.0"},"devDependencies":{"express-session":">= 1.0.0","grunt-contrib-jshint":"~0.10.0","jshint-stylish":"~1.0.0","mocha":"~2.1.0","mongoose":">= 2.6.0 < 4.0.0"},"scripts":{"test":"grunt && make test"},"main":"./lib/connect-mongo","gitHead":"0479473ee4856c8b28ae7ff7f847deba882582cc","homepage":"https://github.com/kcbanner/connect-mongo","_id":"connect-mongo@0.6.0","_shasum":"eea5c24ec5fb1cb58d110c40a1bf6979d8294efa","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"},"maintainers":[{"name":"kcbanner","email":"kcbanner@gmail.com"},{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"}],"dist":{"shasum":"eea5c24ec5fb1cb58d110c40a1bf6979d8294efa","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-0.6.0.tgz"},"directories":{}},"0.7.0":{"name":"connect-mongo","version":"0.7.0","description":"MongoDB session store for Express and Connect","keywords":["connect","mongo","mongodb","session","express"],"author":{"name":"Casey Banner","email":"kcbanner@gmail.com"},"repository":{"type":"git","url":"https://github.com/kcbanner/connect-mongo.git"},"bugs":{"url":"https://github.com/kcbanner/connect-mongo/issues"},"dependencies":{"debug":">= 0.7.0","depd":">= 0.4.0","lodash":"*","mongodb":">= 1.2.0 <2.1.0"},"devDependencies":{"express-session":">= 1.0.0","grunt-contrib-jshint":"~0.10.0","jshint-stylish":"~1.0.0","mocha":"~2.1.0","mongoose":">= 2.6.0 < 4.0.0"},"scripts":{"test":"grunt && make test"},"main":"./lib/connect-mongo","gitHead":"eb48af091c4f9873c67b4b83a1ebc6d784fa1da5","homepage":"https://github.com/kcbanner/connect-mongo","_id":"connect-mongo@0.7.0","_shasum":"8870bbebabff6c99aab77c8ad9787abe730b62db","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"},"maintainers":[{"name":"kcbanner","email":"kcbanner@gmail.com"},{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"}],"dist":{"shasum":"8870bbebabff6c99aab77c8ad9787abe730b62db","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-0.7.0.tgz"},"directories":{}},"0.8.0":{"name":"connect-mongo","version":"0.8.0","description":"MongoDB session store for Express and Connect","keywords":["connect","mongo","mongodb","session","express"],"author":{"name":"Casey Banner","email":"kcbanner@gmail.com"},"repository":{"type":"git","url":"https://github.com/kcbanner/connect-mongo.git"},"bugs":{"url":"https://github.com/kcbanner/connect-mongo/issues"},"dependencies":{"debug":">= 0.7.0","depd":">= 0.4.0","lodash":"*","mongodb":">= 1.2.0 <2.1.0"},"devDependencies":{"express-session":">= 1.0.0","grunt-contrib-jshint":"~0.10.0","jshint-stylish":"~1.0.0","mocha":"~2.1.0","mongoose":">= 2.6.0 < 4.1.0"},"scripts":{"test":"grunt && make test"},"main":"./lib/connect-mongo","gitHead":"11748a0d4bfd7b00d1eb2432115c94fddd6fbfb1","homepage":"https://github.com/kcbanner/connect-mongo","_id":"connect-mongo@0.8.0","_shasum":"5775b43a2762e4f39121d4a41a2871c3b42fbd4f","_from":".","_npmVersion":"2.5.1","_nodeVersion":"0.12.0","_npmUser":{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"},"maintainers":[{"name":"kcbanner","email":"kcbanner@gmail.com"},{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"}],"dist":{"shasum":"5775b43a2762e4f39121d4a41a2871c3b42fbd4f","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-0.8.0.tgz"},"directories":{}},"0.8.1":{"name":"connect-mongo","version":"0.8.1","description":"MongoDB session store for Express and Connect","keywords":["connect","mongo","mongodb","session","express"],"author":{"name":"Casey Banner","email":"kcbanner@gmail.com"},"repository":{"type":"git","url":"https://github.com/kcbanner/connect-mongo.git"},"bugs":{"url":"https://github.com/kcbanner/connect-mongo/issues"},"dependencies":{"debug":">= 0.7.0","depd":">= 0.4.0","lodash":"*","mongodb":">= 1.2.0 <2.1.0"},"devDependencies":{"express-session":">= 1.0.0","grunt-contrib-jshint":"~0.10.0","jshint-stylish":"~1.0.0","mocha":"~2.1.0","mongoose":">= 2.6.0 < 4.1.0"},"scripts":{"test":"grunt && make test"},"main":"./lib/connect-mongo","gitHead":"c5676bdde63ba35080437a4d0af517bffa0fd77b","homepage":"https://github.com/kcbanner/connect-mongo","_id":"connect-mongo@0.8.1","_shasum":"91accf4a4edba7657ead415cb4b9775177aa5d7b","_from":".","_npmVersion":"2.7.4","_nodeVersion":"0.12.2","_npmUser":{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"},"dist":{"shasum":"91accf4a4edba7657ead415cb4b9775177aa5d7b","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-0.8.1.tgz"},"maintainers":[{"name":"kcbanner","email":"kcbanner@gmail.com"},{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"}],"directories":{}},"0.8.2":{"name":"connect-mongo","version":"0.8.2","description":"MongoDB session store for Express and Connect","keywords":["connect","mongo","mongodb","session","express"],"author":{"name":"Casey Banner","email":"kcbanner@gmail.com"},"repository":{"type":"git","url":"git+https://github.com/kcbanner/connect-mongo.git"},"bugs":{"url":"https://github.com/kcbanner/connect-mongo/issues"},"dependencies":{"debug":">= 0.7.0","depd":">= 0.4.0","lodash":"*","mongodb":">= 1.2.0 <2.1.0"},"devDependencies":{"express-session":">= 1.0.0","grunt-contrib-jshint":"~0.10.0","jshint-stylish":"~1.0.0","mocha":"~2.1.0","mongoose":">= 2.6.0 < 4.1.0"},"scripts":{"test":"grunt && make test"},"main":"./lib/connect-mongo","gitHead":"f1f7a09fb58e27e0f5472daaf40c92f112a39f4e","homepage":"https://github.com/kcbanner/connect-mongo#readme","_id":"connect-mongo@0.8.2","_shasum":"c92878eec0c5a5a6625b79a0c214f37f861fc6e0","_from":".","_npmVersion":"2.11.3","_nodeVersion":"2.3.3","_npmUser":{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"},"dist":{"shasum":"c92878eec0c5a5a6625b79a0c214f37f861fc6e0","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-0.8.2.tgz"},"maintainers":[{"name":"kcbanner","email":"kcbanner@gmail.com"},{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"}],"directories":{}},"1.0.0-beta.1":{"name":"connect-mongo","version":"1.0.0-beta.1","description":"MongoDB session store for Express and Connect","keywords":["connect","mongo","mongodb","session","express"],"contributors":[{"name":"Casey Banner","email":"kcbanner@gmail.com"},{"name":"Jerome Desboeufs","email":"jerome.desboeufs@gmail.com"}],"license":"MIT","repository":{"type":"git","url":"git+https://github.com/kcbanner/connect-mongo.git"},"bugs":{"url":"https://github.com/kcbanner/connect-mongo/issues"},"dependencies":{"bluebird":">= 1.0","debug":">= 0.7.0","lodash":"*","mongodb":">= 1.2.0 <2.1.0"},"devDependencies":{"babel":"^5.6.23","babel-istanbul":"^0.2.10","eslint":"^0.24.1","express-session":">= 1.0.0","mocha":"~2.1.0","mongoose":">= 2.6.0 < 4.1.0"},"scripts":{"test":"mocha --compilers js:babel/register --ui exports --timeout 6000 -R spec -b --recursive test","cover":"babel-istanbul cover _mocha -- --ui exports --timeout 6000 -R spec -b --recursive test","lint":"eslint src/","prepublish":"babel src --out-dir lib"},"main":"./lib/connect-mongo","gitHead":"eac4a6ed3c4b12e0b63672319d7a15a2be99610b","homepage":"https://github.com/kcbanner/connect-mongo#readme","_id":"connect-mongo@1.0.0-beta.1","_shasum":"590fa373099a551dd923bdc7c21878bf6624023b","_from":".","_npmVersion":"2.11.3","_nodeVersion":"2.3.3","_npmUser":{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"},"dist":{"shasum":"590fa373099a551dd923bdc7c21878bf6624023b","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-1.0.0-beta.1.tgz"},"maintainers":[{"name":"kcbanner","email":"kcbanner@gmail.com"},{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"}],"directories":{}},"1.0.0":{"name":"connect-mongo","version":"1.0.0","description":"MongoDB session store for Express and Connect","keywords":["connect","mongo","mongodb","session","express"],"contributors":[{"name":"Casey Banner","email":"kcbanner@gmail.com"},{"name":"Jerome Desboeufs","email":"jerome.desboeufs@gmail.com"}],"license":"MIT","repository":{"type":"git","url":"git+https://github.com/kcbanner/connect-mongo.git"},"bugs":{"url":"https://github.com/kcbanner/connect-mongo/issues"},"dependencies":{"bluebird":">= 2.0","mongodb":">= 1.2.0 <2.1.0"},"devDependencies":{"babel-cli":"^6.3.17","babel-plugin-transform-es2015-arrow-functions":"^6.3.13","babel-plugin-transform-es2015-block-scoping":"^6.3.13","babel-plugin-transform-es2015-classes":"^6.3.15","babel-plugin-transform-es2015-object-super":"^6.3.13","babel-register":"^6.3.13","eslint":"^0.24.1","express-session":">= 1.0.0","istanbul":"^0.4.1","lodash":"^3.10.1","mocha":"^2.3.4","mongoose":">= 2.6.0 < 4.1.0"},"scripts":{"test-unit-es5":"mocha --compilers js:babel-register","test-unit":"istanbul cover _mocha","lint":"eslint src/","test":"npm run lint && npm run test-unit","test-es5":"npm run test-unit-es5","prepublish":"babel src --out-dir es5"},"main":"./lib","gitHead":"7f4dcf294712f633495357a8d99e2f479752099c","homepage":"https://github.com/kcbanner/connect-mongo#readme","_id":"connect-mongo@1.0.0","_shasum":"5645bfa43efa7f627d9372af71bb7c4f8b027cda","_from":".","_npmVersion":"3.3.12","_nodeVersion":"5.1.0","_npmUser":{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"},"dist":{"shasum":"5645bfa43efa7f627d9372af71bb7c4f8b027cda","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-1.0.0.tgz"},"maintainers":[{"name":"kcbanner","email":"kcbanner@gmail.com"},{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"}],"directories":{}},"1.0.1":{"name":"connect-mongo","version":"1.0.1","description":"MongoDB session store for Express and Connect","keywords":["connect","mongo","mongodb","session","express"],"contributors":[{"name":"Casey Banner","email":"kcbanner@gmail.com"},{"name":"Jerome Desboeufs","email":"jerome.desboeufs@gmail.com"}],"license":"MIT","repository":{"type":"git","url":"git+https://github.com/kcbanner/connect-mongo.git"},"bugs":{"url":"https://github.com/kcbanner/connect-mongo/issues"},"dependencies":{"bluebird":">= 2.0","mongodb":">= 1.2.0 <2.1.0"},"devDependencies":{"babel-cli":"^6.3.17","babel-plugin-transform-es2015-arrow-functions":"^6.3.13","babel-plugin-transform-es2015-block-scoping":"^6.3.13","babel-plugin-transform-es2015-classes":"^6.3.15","babel-plugin-transform-es2015-object-super":"^6.3.13","babel-register":"^6.3.13","eslint":"^0.24.1","express-session":">= 1.0.0","istanbul":"^0.4.1","lodash":"^3.10.1","mocha":"^2.3.4","mongoose":">= 2.6.0 < 4.1.0"},"scripts":{"test-unit-es5":"mocha --compilers js:babel-register","test-unit":"istanbul cover _mocha","lint":"eslint src/","test":"npm run lint && npm run test-unit","test-es5":"npm run test-unit-es5","prepublish":"babel src --out-dir es5"},"main":"./src","gitHead":"13b02ed1e1beec1d4986b680d88c225236568a13","homepage":"https://github.com/kcbanner/connect-mongo#readme","_id":"connect-mongo@1.0.1","_shasum":"c7a58dd01e088181a7a6bf8e01d041c080cc4508","_from":".","_npmVersion":"3.3.12","_nodeVersion":"5.1.0","_npmUser":{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"},"dist":{"shasum":"c7a58dd01e088181a7a6bf8e01d041c080cc4508","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-1.0.1.tgz"},"maintainers":[{"name":"kcbanner","email":"kcbanner@gmail.com"},{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"}],"directories":{}},"1.0.2":{"name":"connect-mongo","version":"1.0.2","description":"MongoDB session store for Express and Connect","keywords":["connect","mongo","mongodb","session","express"],"contributors":[{"name":"Casey Banner","email":"kcbanner@gmail.com"},{"name":"Jerome Desboeufs","email":"jerome.desboeufs@gmail.com"}],"license":"MIT","repository":{"type":"git","url":"git+https://github.com/kcbanner/connect-mongo.git"},"bugs":{"url":"https://github.com/kcbanner/connect-mongo/issues"},"dependencies":{"bluebird":">= 2.0","mongodb":">= 1.2.0 <2.1.0"},"devDependencies":{"babel-cli":"^6.3.17","babel-plugin-transform-es2015-arrow-functions":"^6.3.13","babel-plugin-transform-es2015-block-scoping":"^6.3.13","babel-plugin-transform-es2015-classes":"^6.3.15","babel-plugin-transform-es2015-object-super":"^6.3.13","babel-register":"^6.3.13","eslint":"^0.24.1","express-session":">= 1.0.0","istanbul":"^0.4.1","lodash":"^3.10.1","mocha":"^2.3.4","mongoose":">= 2.6.0 < 4.1.0"},"scripts":{"test-unit-es5":"mocha --compilers js:babel-register && mocha --compilers js:babel-register test/es5/load.js","test-unit":"istanbul cover _mocha && mocha test/es5/load.js","lint":"eslint src/","test":"npm run lint && npm run transpile && npm run test-unit","test-es5":"npm run transpile && npm run test-unit-es5","transpile":"babel src --out-dir src-es5","prepublish":"npm run transpile"},"gitHead":"678ad6b6004bc25c9ba42c34ba5b12973e4963f3","homepage":"https://github.com/kcbanner/connect-mongo#readme","_id":"connect-mongo@1.0.2","_shasum":"8e89c9c1cd23c2c4bbd036acb6842fa6e20766c5","_from":".","_npmVersion":"3.3.12","_nodeVersion":"5.1.0","_npmUser":{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"},"dist":{"shasum":"8e89c9c1cd23c2c4bbd036acb6842fa6e20766c5","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-1.0.2.tgz"},"maintainers":[{"name":"kcbanner","email":"kcbanner@gmail.com"},{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"}],"directories":{}},"1.1.0":{"name":"connect-mongo","version":"1.1.0","description":"MongoDB session store for Express and Connect","keywords":["connect","mongo","mongodb","session","express"],"contributors":[{"name":"Casey Banner","email":"kcbanner@gmail.com"},{"name":"Jerome Desboeufs","email":"jerome.desboeufs@gmail.com"}],"license":"MIT","repository":{"type":"git","url":"git+https://github.com/kcbanner/connect-mongo.git"},"bugs":{"url":"https://github.com/kcbanner/connect-mongo/issues"},"dependencies":{"bluebird":">= 2.0","mongodb":">= 1.2.0 <2.2.0"},"devDependencies":{"babel-cli":"^6.3.17","babel-plugin-transform-es2015-arrow-functions":"^6.3.13","babel-plugin-transform-es2015-block-scoping":"^6.3.13","babel-plugin-transform-es2015-classes":"^6.3.15","babel-plugin-transform-es2015-object-super":"^6.3.13","babel-register":"^6.3.13","eslint":"^0.24.1","express-session":">= 1.0.0","istanbul":"^0.4.1","lodash":"^3.10.1","mocha":"^2.3.4","mongoose":">= 2.6.0 < 4.1.0"},"scripts":{"test-unit-es5":"mocha --compilers js:babel-register && mocha --compilers js:babel-register test/es5/load.js","test-unit":"istanbul cover _mocha && mocha test/es5/load.js","lint":"eslint src/","test":"npm run lint && npm run transpile && npm run test-unit","test-es5":"npm run transpile && npm run test-unit-es5","transpile":"babel src --out-dir src-es5","prepublish":"npm run transpile"},"gitHead":"2e8e6dca2f27d793b08df56e21e204015ef5c830","homepage":"https://github.com/kcbanner/connect-mongo#readme","_id":"connect-mongo@1.1.0","_shasum":"b9de9433afd4807d8965377dfb73e67507bd2439","_from":".","_npmVersion":"3.3.12","_nodeVersion":"5.3.0","_npmUser":{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"},"dist":{"shasum":"b9de9433afd4807d8965377dfb73e67507bd2439","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-1.1.0.tgz"},"maintainers":[{"name":"kcbanner","email":"kcbanner@gmail.com"},{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"}],"directories":{}},"1.2.0":{"name":"connect-mongo","version":"1.2.0","description":"MongoDB session store for Express and Connect","keywords":["connect","mongo","mongodb","session","express"],"contributors":[{"name":"Casey Banner","email":"kcbanner@gmail.com"},{"name":"Jerome Desboeufs","email":"jerome.desboeufs@gmail.com"}],"license":"MIT","repository":{"type":"git","url":"git+https://github.com/kcbanner/connect-mongo.git"},"bugs":{"url":"https://github.com/kcbanner/connect-mongo/issues"},"dependencies":{"bluebird":">= 2.0","mongodb":">= 1.2.0 <2.2.0"},"devDependencies":{"babel-cli":"^6.3.17","babel-plugin-transform-es2015-arrow-functions":"^6.3.13","babel-plugin-transform-es2015-block-scoping":"^6.3.13","babel-plugin-transform-es2015-classes":"^6.3.15","babel-plugin-transform-es2015-object-super":"^6.3.13","babel-register":"^6.3.13","eslint":"^1.10.3","express-session":">= 1.0.0","istanbul":"^0.4.1","lodash":"^3.10.1","mocha":"^2.3.4","mongoose":">= 2.6.0 < 5.0"},"scripts":{"test-unit-es5":"mocha --compilers js:babel-register && mocha --compilers js:babel-register test/es5/load.js","test-unit":"istanbul cover _mocha && mocha test/es5/load.js","lint":"eslint src/","test":"npm run lint && npm run transpile && npm run test-unit","test-es5":"npm run transpile && npm run test-unit-es5","transpile":"babel src --out-dir src-es5","prepublish":"npm run transpile"},"gitHead":"a613c1fa68fc3c74ab9244d70e3cca11c2de7101","homepage":"https://github.com/kcbanner/connect-mongo#readme","_id":"connect-mongo@1.2.0","_shasum":"280e9617ccdb9d2984814fb1a2279dac89cfe99b","_from":".","_npmVersion":"3.8.6","_nodeVersion":"6.0.0","_npmUser":{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"},"dist":{"shasum":"280e9617ccdb9d2984814fb1a2279dac89cfe99b","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-1.2.0.tgz"},"maintainers":[{"name":"kcbanner","email":"kcbanner@gmail.com"},{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/connect-mongo-1.2.0.tgz_1463172174285_0.1184460911899805"},"directories":{}},"1.2.1":{"name":"connect-mongo","version":"1.2.1","description":"MongoDB session store for Express and Connect","keywords":["connect","mongo","mongodb","session","express"],"contributors":[{"name":"Casey Banner","email":"kcbanner@gmail.com"},{"name":"Jerome Desboeufs","email":"jerome.desboeufs@gmail.com"}],"license":"MIT","repository":{"type":"git","url":"git+https://github.com/kcbanner/connect-mongo.git"},"bugs":{"url":"https://github.com/kcbanner/connect-mongo/issues"},"dependencies":{"bluebird":">= 2.0","mongodb":">= 1.2.0 <2.2.0"},"devDependencies":{"babel-cli":"^6.3.17","babel-plugin-transform-es2015-arrow-functions":"^6.3.13","babel-plugin-transform-es2015-block-scoping":"^6.3.13","babel-plugin-transform-es2015-classes":"^6.3.15","babel-plugin-transform-es2015-object-super":"^6.3.13","babel-register":"^6.3.13","eslint":"^1.10.3","express-session":">= 1.0.0","istanbul":"^0.4.1","lodash":"^3.10.1","mocha":"^2.3.4","mongoose":">= 2.6.0 < 5.0"},"scripts":{"test-unit-es5":"mocha --compilers js:babel-register && mocha --compilers js:babel-register test/es5/load.js","test-unit":"istanbul cover _mocha && mocha test/es5/load.js","lint":"eslint src/","test":"npm run lint && npm run transpile && npm run test-unit","test-es5":"npm run transpile && npm run test-unit-es5","transpile":"babel src --out-dir src-es5","prepublish":"npm run transpile"},"gitHead":"10ea1ff032e2c416e1774079187abe9b265dc31c","homepage":"https://github.com/kcbanner/connect-mongo#readme","_id":"connect-mongo@1.2.1","_shasum":"c132467abc0d0efa868f86f1550259911f7847b5","_from":".","_npmVersion":"3.8.6","_nodeVersion":"6.0.0","_npmUser":{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"},"dist":{"shasum":"c132467abc0d0efa868f86f1550259911f7847b5","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-1.2.1.tgz"},"maintainers":[{"name":"kcbanner","email":"kcbanner@gmail.com"},{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"}],"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/connect-mongo-1.2.1.tgz_1466457928178_0.7295849067158997"},"directories":{}},"1.3.0":{"name":"connect-mongo","version":"1.3.0","description":"MongoDB session store for Express and Connect","keywords":["connect","mongo","mongodb","session","express"],"contributors":[{"name":"Casey Banner","email":"kcbanner@gmail.com"},{"name":"Jerome Desboeufs","email":"jerome.desboeufs@gmail.com"}],"license":"MIT","repository":{"type":"git","url":"git+https://github.com/kcbanner/connect-mongo.git"},"bugs":{"url":"https://github.com/kcbanner/connect-mongo/issues"},"dependencies":{"bluebird":">= 2.0","mongodb":">= 1.2.0 <3.0.0"},"devDependencies":{"babel-cli":"^6.3.17","babel-plugin-transform-es2015-arrow-functions":"^6.3.13","babel-plugin-transform-es2015-block-scoping":"^6.3.13","babel-plugin-transform-es2015-classes":"^6.3.15","babel-plugin-transform-es2015-object-super":"^6.3.13","babel-plugin-transform-object-assign":"^6.8.0","babel-register":"^6.3.13","eslint":"^3.1.1","expect.js":"^0.3.1","express-session":">= 1.0.0","istanbul":"^0.4.1","mocha":"^2.3.4","mongoose":">= 2.6.0 < 5.0"},"scripts":{"test-unit-es5":"mocha --compilers js:babel-register","test-unit":"istanbul cover -x 'src-es5/**' _mocha","lint":"eslint src test","test":"npm run lint && npm run transpile && npm run test-unit","test-es5":"npm run transpile && npm run test-unit-es5","transpile":"babel src --out-dir src-es5","prepublish":"npm run transpile"},"gitHead":"3b41efc05ebbf070b6be7e147a5c23570c7519e2","homepage":"https://github.com/kcbanner/connect-mongo#readme","_id":"connect-mongo@1.3.0","_shasum":"b2cbab838ad9abbfedb79cfb26222c4c075356f6","_from":".","_npmVersion":"3.10.3","_nodeVersion":"6.3.1","_npmUser":{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"},"dist":{"shasum":"b2cbab838ad9abbfedb79cfb26222c4c075356f6","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-1.3.0.tgz"},"maintainers":[{"name":"kcbanner","email":"kcbanner@gmail.com"},{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/connect-mongo-1.3.0.tgz_1469290935135_0.630404673051089"},"directories":{}},"1.3.1":{"name":"connect-mongo","version":"1.3.1","description":"MongoDB session store for Express and Connect","keywords":["connect","mongo","mongodb","session","express"],"contributors":[{"name":"Casey Banner","email":"kcbanner@gmail.com"},{"name":"Jerome Desboeufs","email":"jerome.desboeufs@gmail.com"}],"license":"MIT","repository":{"type":"git","url":"git+https://github.com/kcbanner/connect-mongo.git"},"bugs":{"url":"https://github.com/kcbanner/connect-mongo/issues"},"dependencies":{"bluebird":"^3.0","mongodb":">= 1.2.0 <3.0.0"},"devDependencies":{"babel-cli":"^6.3.17","babel-plugin-transform-es2015-arrow-functions":"^6.3.13","babel-plugin-transform-es2015-block-scoping":"^6.3.13","babel-plugin-transform-es2015-classes":"^6.3.15","babel-plugin-transform-es2015-object-super":"^6.3.13","babel-plugin-transform-object-assign":"^6.8.0","babel-register":"^6.3.13","eslint":"^3.1.1","expect.js":"^0.3.1","express-session":">= 1.0.0","istanbul":"^0.4.1","mocha":"^2.3.4","mongoose":">= 2.6.0 < 5.0"},"scripts":{"test-unit-es5":"mocha --compilers js:babel-register","test-unit":"istanbul cover -x 'src-es5/**' _mocha","lint":"eslint src test","test":"npm run lint && npm run transpile && npm run test-unit","test-es5":"npm run transpile && npm run test-unit-es5","transpile":"babel src --out-dir src-es5","prepublish":"npm run transpile"},"gitHead":"c498426c4e8919b415a27286045dd2a25705fc28","homepage":"https://github.com/kcbanner/connect-mongo#readme","_id":"connect-mongo@1.3.1","_shasum":"fe276d97fa68e83b3346829c2667251368f09b77","_from":".","_npmVersion":"3.10.3","_nodeVersion":"6.3.1","_npmUser":{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"},"dist":{"shasum":"fe276d97fa68e83b3346829c2667251368f09b77","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-1.3.1.tgz"},"maintainers":[{"name":"kcbanner","email":"kcbanner@gmail.com"},{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/connect-mongo-1.3.1.tgz_1469292431498_0.622793750371784"},"directories":{}},"1.3.2":{"name":"connect-mongo","version":"1.3.2","description":"MongoDB session store for Express and Connect","keywords":["connect","mongo","mongodb","session","express"],"contributors":[{"name":"Casey Banner","email":"kcbanner@gmail.com"},{"name":"Jerome Desboeufs","email":"jerome.desboeufs@gmail.com"}],"license":"MIT","repository":{"type":"git","url":"git+https://github.com/kcbanner/connect-mongo.git"},"bugs":{"url":"https://github.com/kcbanner/connect-mongo/issues"},"dependencies":{"bluebird":"^3.0","mongodb":">= 1.2.0 <3.0.0"},"devDependencies":{"babel-cli":"^6.3.17","babel-plugin-transform-es2015-arrow-functions":"^6.3.13","babel-plugin-transform-es2015-block-scoping":"^6.3.13","babel-plugin-transform-es2015-classes":"^6.3.15","babel-plugin-transform-es2015-object-super":"^6.3.13","babel-plugin-transform-object-assign":"^6.8.0","babel-register":"^6.3.13","eslint":"^3.1.1","expect.js":"^0.3.1","express-session":">= 1.0.0","istanbul":"^0.4.1","mocha":"^2.3.4","mongoose":">= 2.6.0 < 5.0"},"scripts":{"test-unit-es5":"mocha --compilers js:babel-register","test-unit":"mocha","cover":"istanbul cover -x 'src-es5/**' _mocha","lint":"eslint src test","test":"npm run lint && npm run transpile && npm run cover","test-es5":"npm run transpile && npm run test-unit-es5","transpile":"babel src --out-dir src-es5","prepublish":"npm run transpile"},"gitHead":"f4c8fa5d04777c0017f5123a10b71577de248d45","homepage":"https://github.com/kcbanner/connect-mongo#readme","_id":"connect-mongo@1.3.2","_shasum":"7cbf58dfff26760e5e00e017d0a85b4bc90b9d37","_from":".","_npmVersion":"3.10.3","_nodeVersion":"6.3.1","_npmUser":{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"},"dist":{"shasum":"7cbf58dfff26760e5e00e017d0a85b4bc90b9d37","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-1.3.2.tgz"},"maintainers":[{"name":"kcbanner","email":"kcbanner@gmail.com"},{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"}],"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/connect-mongo-1.3.2.tgz_1469613537733_0.9538226106669754"},"directories":{}},"2.0.0":{"name":"connect-mongo","version":"2.0.0","description":"MongoDB session store for Express and Connect","keywords":["connect","mongo","mongodb","session","express"],"contributors":[{"name":"Casey Banner","email":"kcbanner@gmail.com"},{"name":"Jerome Desboeufs","email":"jerome.desboeufs@gmail.com"}],"license":"MIT","repository":{"type":"git","url":"git+https://github.com/jdesboeufs/connect-mongo.git"},"bugs":{"url":"https://github.com/jdesboeufs/connect-mongo/issues"},"dependencies":{"mongodb":"^2.0.36"},"devDependencies":{"expect.js":"^0.3.1","express-session":"^1.0.0","mocha":"^4.0.1","mongoose":"^4.1.2","nyc":"^11.2.1","xo":"^0.18.2"},"scripts":{"lint":"xo src","cover":"nyc report --reporter=text-lcov","test":"nyc mocha"},"xo":{"space":2,"semicolon":false},"gitHead":"fea10942e96c20fb9f600fbc0235a7a88dee8f94","homepage":"https://github.com/jdesboeufs/connect-mongo#readme","_id":"connect-mongo@2.0.0","_npmVersion":"5.3.0","_nodeVersion":"8.5.0","_npmUser":{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"},"dist":{"integrity":"sha512-2Nj5d4XO55AXSy1GOXDZteSEEUObGm/kvJaXyEQCa8cCHsCiZH+V/+sjk3b+khc4V8oyVi34rCtUxor4TfETLA==","shasum":"3e4d036a6869385b0191a3737d3051a86abc2fb8","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-2.0.0.tgz"},"maintainers":[{"name":"kcbanner","email":"kcbanner@gmail.com"},{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/connect-mongo-2.0.0.tgz_1507507619008_0.6768594661261886"},"directories":{}},"2.0.1":{"name":"connect-mongo","version":"2.0.1","description":"MongoDB session store for Express and Connect","keywords":["connect","mongo","mongodb","session","express"],"contributors":[{"name":"Casey Banner","email":"kcbanner@gmail.com"},{"name":"Jerome Desboeufs","email":"jerome.desboeufs@gmail.com"}],"license":"MIT","repository":{"type":"git","url":"git+https://github.com/jdesboeufs/connect-mongo.git"},"bugs":{"url":"https://github.com/jdesboeufs/connect-mongo/issues"},"dependencies":{"mongodb":"^2.0.36"},"devDependencies":{"expect.js":"^0.3.1","express-session":"^1.0.0","mocha":"^4.0.1","mongoose":"^4.1.2","nyc":"^11.2.1","xo":"^0.18.2"},"scripts":{"lint":"xo src","cover":"nyc report --reporter=text-lcov","test":"nyc mocha"},"xo":{"space":2,"semicolon":false},"gitHead":"9eb4d01516de90f86e3eeac2eab85a51123343fe","homepage":"https://github.com/jdesboeufs/connect-mongo#readme","_id":"connect-mongo@2.0.1","_npmVersion":"5.5.1","_nodeVersion":"8.9.1","_npmUser":{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"},"dist":{"integrity":"sha512-ghBvVq0SA0SkTFsbAB8HdF1+uoHdFJICSlrTklNloMKXuRpX9IuVBnG0DlKnXBZSQI0Joyaq22cazsrV9+5g2A==","shasum":"514d649cff1d5d5546c087193245bb54ff5b703b","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-2.0.1.tgz"},"maintainers":[{"name":"kcbanner","email":"kcbanner@gmail.com"},{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/connect-mongo-2.0.1.tgz_1515067004837_0.22444491018541157"},"directories":{}},"2.0.2":{"name":"connect-mongo","version":"2.0.2","description":"MongoDB session store for Express and Connect","keywords":["connect","mongo","mongodb","session","express"],"contributors":[{"name":"Casey Banner","email":"kcbanner@gmail.com"},{"name":"Jerome Desboeufs","email":"jerome.desboeufs@gmail.com"}],"license":"MIT","repository":{"type":"git","url":"https://github.com/jdesboeufs/connect-mongo.git"},"bugs":{"url":"https://github.com/jdesboeufs/connect-mongo/issues"},"dependencies":{"mongodb":"^2.0.36"},"devDependencies":{"expect.js":"^0.3.1","express-session":"^1.0.0","mocha":"^5.0.1","mongoose":"^4.1.2","nyc":"^11.2.1","xo":"^0.20.3"},"scripts":{"lint":"xo src","cover":"nyc report --reporter=text-lcov","test":"nyc mocha"},"xo":{"space":2,"semicolon":false},"licenseText":"MIT License\n\nCopyright (c) 2017 Jérôme Desboeufs\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n","_id":"connect-mongo@2.0.2","dist":{"shasum":"f3a78acd35ce928969cdb241705b2dcdc9ced7d0","integrity":"sha512-kc88c3EeQAdS9z/dJb5iHTN/EwHTPjN66YhoXJCyWS4rLGyWbpPyGWlfaJ00Ny3aD34i4Z9RSXV2ARRnkyB8cQ==","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-2.0.2.tgz","fileCount":12,"unpackedSize":59803,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb9HJICRA9TVsSAnZWagAAuoAP/1530f5hAdKoShzTlaCH\nqUGrohlkLdmdjtblEkz5ssiwlUTnVWe51KLQMF0ex1wp5eAJR0OV0LXyFf9K\n9RDhgB67XjcIDHo39EBz57rUbqnXqGtGZrvtcfRBo/0U6LqAx8Gda2oyEV8q\n0DiUrIbyIdL+sXMoG7QeF6G5JZjcATSvciJu5UcXmnit8J0IG9SfgHl2i2Sf\nFLxjX+7KN3IjPSsWrbVxsbKKtao4a4hXkgXQK4Lj2tfB25CFYHI05KhfDrCw\nQVPMw2TywNpGEfDqpaXCFYq+WBD9yIMCod53B/Vvy02uA708EiykWLxaL4nq\ngPlUgawRR/GvCrjvGYgT6czdZM4Q3AeuaZv15QZWIMW9u4q3j8jpK9vEsyyy\nK6v5pOkQW47JbjkPEzVWXdg0FHajbg+37Km1Evj1FLPA2U0nfn92gF/6CRxQ\nvRLLb7p2FhvtYRM7Bsml771JDGxUnxdFqwwBhuZeTla6Wwp7CwTNZhSQiCTw\nW+YWu/hbG8o8MMnV36977A69Xpwxs8w91c15aJ/3r56t8sANApXAb/yxduAc\n8pgKXHzDNaV4pT/6RPNFg9WzhzCZdIGpuoICTIyXf8AW75UUN+SC7KYCG1D+\ny17r2FWdA4Vtyi7gEK0ZHCZd3rAFfcwQ6B644nrBfBmZa/xhf9gDQE/sOHTw\nPHeP\r\n=AHL6\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"},{"name":"kcbanner","email":"kcbanner@gmail.com"}],"_npmUser":{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/connect-mongo_2.0.2_1542746695559_0.1783525575815048"},"_hasShrinkwrap":false},"2.0.3":{"name":"connect-mongo","version":"2.0.3","description":"MongoDB session store for Express and Connect","keywords":["connect","mongo","mongodb","session","express"],"contributors":[{"name":"Casey Banner","email":"kcbanner@gmail.com"},{"name":"Jerome Desboeufs","email":"jerome.desboeufs@gmail.com"}],"license":"MIT","repository":{"type":"git","url":"https://github.com/jdesboeufs/connect-mongo.git"},"bugs":{"url":"https://github.com/jdesboeufs/connect-mongo/issues"},"dependencies":{"mongodb":"^2.0.36"},"devDependencies":{"expect.js":"^0.3.1","express-session":"^1.0.0","mocha":"^5.0.1","mongoose":"^4.1.2","nyc":"^11.2.1","xo":"^0.20.3"},"scripts":{"lint":"xo src","cover":"nyc report --reporter=text-lcov","test":"nyc mocha"},"xo":{"space":2,"semicolon":false},"licenseText":"MIT License\n\nCopyright (c) 2017 Jérôme Desboeufs\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n","_id":"connect-mongo@2.0.3","dist":{"shasum":"db6cabe1e3add5acc9ef9c486681027675a58ee5","integrity":"sha512-Vs+QZ/6X6gbCrP1Ls7Oh/wlyY6pgpbPSrUKF5yRT+zd+4GZPNbjNquxquZ+Clv2+03HBXE7T4lVM0PUcaBhihg==","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-2.0.3.tgz","fileCount":12,"unpackedSize":60266,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcBPvQCRA9TVsSAnZWagAASDEP/jnKQ9Y9E1JIp7OhvbqQ\n0W2mhlia6ehEG+2bWd9u48WQoYVfUrKv4AZ4Z2ttLYVt0+XijSXo/sI+RWRm\nK2KMJc9k772jsf1paXUetSjpXbv9HGNt0VItt11EaMADb2UCKloy7+u8rjWK\nBYza6azIsTQpPHPpi93kvyN6lfvraPX7VYHR98e4EuOcrIiMdMrgOCfWen8G\n5bygtZ1Srih2XR3hdCPjQdPERav0Twa2zzIFHfPAHk5d6xqQFwGVI69zugaP\naVO/v9WXU140xy2Jzqjq1Jrg1PDbb6JHou2MkMQ5XP43JIBHihVJDRukPJT/\nuZp1DIvMUPt9Oc8KcjQcdTEj5KlRA5uorn3iATrPOlPyVk+2J/nnA6PjOdxP\nmKnJ/2RsoIHw+YA4YCirVSOc3mS7g9pLNy9L7SC2f8BBe6ZeqM19kQGfDh8e\nFbN9EtjUXOByiCUIOqxZoS2iyeNdCZEJFj2EkQx6jmt0KW2SojvjKCRNIV5w\nzRw2JmyyhYgRQwm+d8jUf23wtXD1sUG/67rQb6OZyBZ2JFZDUSzRswPHMmPf\nWwiIWBjcnQ66sqcW3puj8FRp36kLfNygBW0MPMy7rab78tXcKYC7wvk9zzEy\n/5N1Yi0BZmV3XiF7zTR9fktCbM5KviqC0IkYe7Enl5rUEgOSdMp8LaoRMDNF\nAWey\r\n=LlE3\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"},{"name":"kcbanner","email":"kcbanner@gmail.com"}],"_npmUser":{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/connect-mongo_2.0.3_1543830480044_0.8444357111989065"},"_hasShrinkwrap":false},"3.0.0-rc.1":{"name":"connect-mongo","version":"3.0.0-rc.1","description":"MongoDB session store for Express and Connect","keywords":["connect","mongo","mongodb","session","express"],"contributors":[{"name":"Casey Banner","email":"kcbanner@gmail.com"},{"name":"Jerome Desboeufs","email":"jerome.desboeufs@gmail.com"}],"license":"MIT","repository":{"type":"git","url":"git+https://github.com/jdesboeufs/connect-mongo.git"},"bugs":{"url":"https://github.com/jdesboeufs/connect-mongo/issues"},"dependencies":{"mongodb":"^3.1.0"},"devDependencies":{"@commitlint/cli":"^8.0.0","@commitlint/config-conventional":"^8.0.0","eslint":"^5.16.0","eslint-config-prettier":"^4.3.0","eslint-config-prettier-standard":"^2.0.0","eslint-config-standard":"^12.0.0","eslint-plugin-import":"^2.17.3","eslint-plugin-mocha":"^5.3.0","eslint-plugin-node":"^9.1.0","eslint-plugin-prettier":"^3.1.0","eslint-plugin-promise":"^4.1.1","eslint-plugin-standard":"^4.0.0","expect.js":"^0.3.1","express-session":"^1.0.0","husky":"^2.4.1","lint-staged":"^8.2.1","mocha":"^5.0.1","mongoose":"^5.2.0","nyc":"^11.2.1","prettier":"^1.18.2"},"scripts":{"lint":"eslint src test","lint:fix":"eslint src test --fix","cover":"nyc report --reporter=text-lcov","test":"nyc mocha"},"husky":{"hooks":{"pre-commit":"lint-staged","commit-msg":"commitlint -E HUSKY_GIT_PARAMS"}},"lint-staged":{"*.js":["eslint --fix","git add"]},"readme":"# connect-mongo\n\nMongoDB session store for [Connect](https://github.com/senchalabs/connect) and [Express](http://expressjs.com/)\n\n[![npm version](https://img.shields.io/npm/v/connect-mongo.svg)](https://www.npmjs.com/package/connect-mongo)\n[![downloads](https://img.shields.io/npm/dm/connect-mongo.svg)](https://www.npmjs.com/package/connect-mongo)\n[![Build Status](https://travis-ci.org/jdesboeufs/connect-mongo.svg?branch=master)](https://travis-ci.org/jdesboeufs/connect-mongo)\n[![Coverage Status](https://coveralls.io/repos/jdesboeufs/connect-mongo/badge.svg?branch=master&service=github)](https://coveralls.io/github/jdesboeufs/connect-mongo?branch=master)\n[![Dependency Status](https://david-dm.org/jdesboeufs/connect-mongo.svg?style=flat)](https://david-dm.org/jdesboeufs/connect-mongo)\n[![Greenkeeper badge](https://badges.greenkeeper.io/jdesboeufs/connect-mongo.svg)](https://greenkeeper.io/)\n[![XO code style](https://img.shields.io/badge/code_style-XO-5ed9c7.svg)](https://github.com/sindresorhus/xo)\n\n## Compatibility\n\n* Support Express up to `5.0`\n* Support all Connect versions\n* Support [Mongoose](http://mongoosejs.com/index.html) `>= 5.0`\n* Support [native MongoDB driver](http://mongodb.github.io/node-mongodb-native/) `>= 3.0`\n* Support Node.js 6, 8 and 10\n* Support [MongoDB](https://www.mongodb.com/) `>= 3.2`\n\nFor extended compatibility, see previous versions.\nThis branch is under development. Documentation for latest release please refer to [v2.0.3](https://github.com/jdesboeufs/connect-mongo/tree/v2.0.3)\n\n## Usage\n\n### Express or Connect integration\n\nExpress `4.x`, `5.0` and Connect `3.x`:\n\n```js\nconst session = require('express-session');\nconst MongoStore = require('connect-mongo')(session);\n\napp.use(session({\n    secret: 'foo',\n    store: new MongoStore(options)\n}));\n```\n\nExpress `2.x`, `3.x` and Connect `1.x`, `2.x`:\n\n```js\nconst MongoStore = require('connect-mongo')(express);\n\napp.use(express.session({\n    secret: 'foo',\n    store: new MongoStore(options)\n}));\n```\n\nFor Connect `1.x` and `2.x`, just replace `express` by `connect`.\n\n### Connection to MongoDB\n\nIn many circumstances, `connect-mongo` will not be the only part of your application which need a connection to a MongoDB database. It could be interesting to re-use an existing connection.\n\nAlternatively, you can configure `connect-mongo` to establish a new connection.\n\n#### Re-use a Mongoose connection\n\n```js\nconst mongoose = require('mongoose');\n\n// Basic usage\nmongoose.connect(connectionOptions);\n\napp.use(session({\n    store: new MongoStore({ mongooseConnection: mongoose.connection })\n}));\n\n// Advanced usage\nconst connection = mongoose.createConnection(connectionOptions);\n\napp.use(session({\n    store: new MongoStore({ mongooseConnection: connection })\n}));\n```\n\n#### Re-use a native MongoDB driver client (or a promise)\n\nIn this case, you just have to give your `MongoClient` instance to `connect-mongo`.\n\n```js\n/*\n** There are many ways to create MongoClient.\n** You should refer to the driver documentation.\n*/\napp.use(session({\n    store: new MongoStore({ client: clientInstance })\n}));\n```\n\nOr just give a promise...\n\n```js\napp.use(session({\n    store: new MongoStore({ clientPromise: clientInstancePromise })\n}));\n```\n\n#### Create a new connection from a MongoDB connection string\n\n[MongoDB connection strings](http://docs.mongodb.org/manual/reference/connection-string/) are __the best way__ to configure a new connection. For advanced usage, [more options](http://mongodb.github.io/node-mongodb-native/driver-articles/mongoclient.html#mongoclient-connect-options) can be configured with `mongoOptions` property.\n\n```js\n// Basic usage\napp.use(session({\n    store: new MongoStore({ url: 'mongodb://localhost/test-app' })\n}));\n\n// Advanced usage\napp.use(session({\n    store: new MongoStore({\n        url: 'mongodb://user12345:foobar@localhost/test-app?authSource=admins&w=1',\n        mongoOptions: advancedOptions // See below for details\n    })\n}));\n```\n\n## Events\n\nA `MongoStore` instance will emit the following events:\n\n| Event name | Description | Payload\n| ----- | ----- | ----- |\n| `create` | A session has been created | `sessionId` |\n| `touch` | A session has been touched (but not modified) | `sessionId` |\n| `update` | A session has been updated | `sessionId` |\n| `set` | A session has been created OR updated _(for compatibility purpose)_ | `sessionId` |\n| `destroy` | A session has been destroyed | `sessionId` |\n\n## Session expiration\n\nWhen the session cookie has an expiration date, `connect-mongo` will use it.\n\nOtherwise, it will create a new one, using `ttl` option.\n\n```js\napp.use(session({\n    store: new MongoStore({\n      url: 'mongodb://localhost/test-app',\n      ttl: 14 * 24 * 60 * 60 // = 14 days. Default\n    })\n}));\n```\n\n__Note:__ Each time an user interacts with the server, its session expiration date is refreshed.\n\n## Remove expired sessions\n\nBy default, `connect-mongo` uses MongoDB's TTL collection feature (2.2+) to have mongod automatically remove expired sessions. But you can change this behavior.\n\n### Set MongoDB to clean expired sessions (default mode)\n\n`connect-mongo` will create a TTL index for you at startup. You MUST have MongoDB 2.2+ and administration permissions.\n\n```js\napp.use(session({\n    store: new MongoStore({\n      url: 'mongodb://localhost/test-app',\n      autoRemove: 'native' // Default\n    })\n}));\n```\n\n__Note:__ If you use `connect-mongo` in a very concurrent environment, you should avoid this mode and prefer setting the index yourself, once!\n\n### Set the compatibility mode\n\nYou have an older MongoDB version (compatible with connect-mongo) or you can't or don't want to create a TTL index.\n\n`connect-mongo` will take care of removing expired sessions, using defined interval.\n\n```js\napp.use(session({\n    store: new MongoStore({\n      url: 'mongodb://localhost/test-app',\n      autoRemove: 'interval',\n      autoRemoveInterval: 10 // In minutes. Default\n    })\n}));\n```\n\n### Disable expired sessions cleaning\n\nYou are in production environnement and/or you manage the TTL index elsewhere.\n\n```js\napp.use(session({\n    store: new MongoStore({\n      url: 'mongodb://localhost/test-app',\n      autoRemove: 'disabled'\n    })\n}));\n```\n\n## Lazy session update\n\n\nIf you are using [express-session](https://github.com/expressjs/session) >= [1.10.0](https://github.com/expressjs/session/releases/tag/v1.10.0) and don't want to resave all the session on database every single time that the user refresh the page, you can lazy update the session, by limiting a period of time.\n\n```js\napp.use(express.session({\n    secret: 'keyboard cat',\n    saveUninitialized: false, // don't create session until something stored\n    resave: false, //don't save session if unmodified\n    store: new MongoStore({\n        url: 'mongodb://localhost/test-app',\n        touchAfter: 24 * 3600 // time period in seconds\n    })\n}));\n```\n\nby doing this, setting `touchAfter: 24 * 3600` you are saying to the session be updated only one time in a period of 24 hours, does not matter how many request's are made (with the exception of those that change something on the session data)\n\n\n## Transparent encryption/decryption of session data\n\nWhen working with sensitive session data it is [recommended](https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Session_Management_Cheat_Sheet.md) to use encryption\n\n```js\nconst store = new MongoStore({\n  url: 'mongodb://localhost/test-app',\n  secret: 'squirrel'\n})\n```\n\n## More options\n\n  - `collection` Collection (default: `sessions`)\n  - `fallbackMemory` Fallback to `MemoryStore`. Useful if you want to use MemoryStore in some case, like in development environment.\n  - `stringify` If true, connect-mongo will serialize sessions using `JSON.stringify` before\n                setting them, and deserialize them with `JSON.parse` when getting them.\n                (optional, default: true). This is useful if you are using types that\n                MongoDB doesn't support.\n  - `serialize` Custom hook for serializing sessions to MongoDB. This is helpful if you need\n                to modify the session before writing it out.\n  - `unserialize` Custom hook for unserializing sessions from MongoDB. This can be used in\n                scenarios where you need to support different types of serializations\n                (e.g., objects and JSON strings) or need to modify the session before using\n                it in your app.\n  - `writeOperationOptions` Options object to pass to every MongoDB write operation call that\n                supports it (e.g. `update`, `remove`). Useful for adjusting the write concern.\n                Only exception: If `autoRemove` is set to `'interval'`, the write concern\n                from the `writeOperationOptions` object will get overwritten.\n  - `transformId` (optional) Transform original sessionId in whatever you want to use as storage key.\n\n## Crypto options\n  - `secret` (optional) Enables transparent crypto in accordance with [OWASP session management recommendations](https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Session_Management_Cheat_Sheet.md).\n  - `algorithm` (optional) Allows for changes to the default symmetric encryption cipher; default is `GCM`. See `crypto.getCiphers()` for supported algorithms.\n  - `hashing` (optional) May be used to change the default hashing algorithm; default is `sha512`. See `crypto.getHashes()` for supported hashing algorithms.\n  - `encodeas` (optional) Specify to change the session data cipher text encoding. Default is `hex`.\n  - `key_size` (optional) When using varying algorithms the key size may be used. Default is `32` based on the `AES` blocksize.\n  - `iv_size` (optional) This can be used to adjust the default [IV](https://csrc.nist.gov/glossary/term/IV) size if a different algorithm requires a different size. Default is `16`.\n  - `at_size` (optional) When using newer `AES` modes such as the default `GCM` or `CCM` an authentication tag size can be defined; default is `16`.\n\n## Tests\n\n    npm test\n\nThe tests use a database called `connect-mongo-test`.\n\n## Showcase\n\nOpen source projects and production apps using `connect-mongo`. Feel free to add yours in a pull request.\n\n* [Builder Book](https://github.com/builderbook/builderbook): Open source web app to write and host documentation or sell books. Built with React, Material-UI, Next, Express, Mongoose, MongoDB.\n\n## License\n\nThe MIT License\n","readmeFilename":"README.md","gitHead":"68273308653788683e10592c6fbd66417667cb9f","homepage":"https://github.com/jdesboeufs/connect-mongo#readme","_id":"connect-mongo@3.0.0-rc.1","_nodeVersion":"10.16.0","_npmVersion":"6.9.0","dist":{"integrity":"sha512-0RM6WvfbaydZ1xsh+cbTsPADAuaZkE71EMCsGfXipfbHqdPELMUSoy823NhYRS5cTUTi/e4bda2UKIaV54s17Q==","shasum":"da87ad815864cc2c28899357cb2094806bb82e8c","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-3.0.0-rc.1.tgz","fileCount":7,"unpackedSize":33921,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdBLCRCRA9TVsSAnZWagAAswMQAIY5e3e/Q2L82vU7xtmM\n1o8G9XMpxfEx7N1iYGo27lHg+O7GVAOJhjNAntByu6qr+z1xRj4d4MG7YcTu\njQ4qSPlTlWI7OIduZoQbMKgXwkjGuYu1iKAuuh+VCYotx8GnV6rDCD3C0Pi7\nptidNLwPnFExQlSE/rQOW9YjaV4G9wuxM+80t9JCLdL6GbO8ZRkE0XI12Tsl\noHEQFJH4oKZC/4iTJK90wC3rqcbEoJj9+inU4mHZudPNsebjLC1ngD1DOn4e\noD0aQGkMJlp9zkDxRIS57iPXaQh21DCv2lSYcl3nrpN+56Ny2oRalnz8Wn1q\n5/NdM8LxJwQU7Y17mxA/7HEiph18UoKHbPKt1VLTfucJbAXJX1wNR1N0KkqV\n+pQP8Uk0Ad3KImHImlm38xj2wZW9uPp9ktP5q9RdTxOPBJVk/1lRzH2lISaw\nl72HFpYbyUPhGXVWiiGq3OxQ7DGjSomzwktspaiWiztjmAgieHa2ARvk1EUZ\nrfQj07i6vOUCeF23onuTuOe7ItFxlNCLDyrr0RGwJKO2FFD307MmFdMkwdzp\nJ6Xe4ROrwEx69MzDTCj2/zj6pMpy+zIRhDKZznftjy08uuOaqKP5WeXklPIq\nZ29z16yuJlcgNbjS64ZclbSgRDesnzKwGvFoFaLmzorakMlwCLL5jFtqGMVD\ny6sL\r\n=yJRR\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"},{"name":"kcbanner","email":"kcbanner@gmail.com"}],"_npmUser":{"name":"mingchuno","email":"mingchuno@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/connect-mongo_3.0.0-rc.1_1560588432638_0.7525421318426706"},"_hasShrinkwrap":false},"3.0.0-rc.2":{"name":"connect-mongo","version":"3.0.0-rc.2","description":"MongoDB session store for Express and Connect","keywords":["connect","mongo","mongodb","session","express"],"contributors":[{"name":"Casey Banner","email":"kcbanner@gmail.com"},{"name":"Jerome Desboeufs","email":"jerome.desboeufs@gmail.com"}],"license":"MIT","repository":{"type":"git","url":"git+https://github.com/jdesboeufs/connect-mongo.git"},"bugs":{"url":"https://github.com/jdesboeufs/connect-mongo/issues"},"dependencies":{"mongodb":"^3.1.0"},"devDependencies":{"@commitlint/cli":"^8.0.0","@commitlint/config-conventional":"^8.0.0","eslint":"^5.16.0","eslint-config-prettier":"^4.3.0","eslint-config-prettier-standard":"^2.0.0","eslint-config-standard":"^12.0.0","eslint-plugin-import":"^2.17.3","eslint-plugin-jest":"^22.6.4","eslint-plugin-node":"^9.1.0","eslint-plugin-prettier":"^3.1.0","eslint-plugin-promise":"^4.1.1","eslint-plugin-standard":"^4.0.0","express-session":"^1.0.0","husky":"^2.4.1","jest":"^24.8.0","lint-staged":"^8.2.1","mongoose":"^5.2.0","prettier":"^1.18.2"},"scripts":{"lint":"eslint src test","lint:fix":"eslint src test --fix","test":"jest --coverage"},"husky":{"hooks":{"pre-commit":"lint-staged","commit-msg":"commitlint -E HUSKY_GIT_PARAMS"}},"lint-staged":{"*.js":["eslint --fix","git add"]},"readme":"# connect-mongo\n\nMongoDB session store for [Connect](https://github.com/senchalabs/connect) and [Express](http://expressjs.com/)\n\n[![npm version](https://img.shields.io/npm/v/connect-mongo.svg)](https://www.npmjs.com/package/connect-mongo)\n[![downloads](https://img.shields.io/npm/dm/connect-mongo.svg)](https://www.npmjs.com/package/connect-mongo)\n[![Build Status](https://travis-ci.org/jdesboeufs/connect-mongo.svg?branch=master)](https://travis-ci.org/jdesboeufs/connect-mongo)\n[![Coverage Status](https://coveralls.io/repos/jdesboeufs/connect-mongo/badge.svg?branch=master&service=github)](https://coveralls.io/github/jdesboeufs/connect-mongo?branch=master)\n[![Dependency Status](https://david-dm.org/jdesboeufs/connect-mongo.svg?style=flat)](https://david-dm.org/jdesboeufs/connect-mongo)\n\n## Compatibility\n\n* Support Express up to `5.0`\n* Support all Connect versions\n* Support [Mongoose](http://mongoosejs.com/index.html) `>= 5.0`\n* Support [native MongoDB driver](http://mongodb.github.io/node-mongodb-native/) `>= 3.0`\n* Support Node.js 8, 10 and 12\n* Support [MongoDB](https://www.mongodb.com/) `3.2 - 4.0`\n\nFor extended compatibility, see previous versions.\nThis branch is under development. Documentation for latest release please refer to [v2.0.3](https://github.com/jdesboeufs/connect-mongo/tree/v2.0.3)\n\n## Usage\n\n### Express or Connect integration\n\nExpress `4.x`, `5.0` and Connect `3.x`:\n\n```js\nconst session = require('express-session');\nconst MongoStore = require('connect-mongo')(session);\n\napp.use(session({\n    secret: 'foo',\n    store: new MongoStore(options)\n}));\n```\n\nExpress `2.x`, `3.x` and Connect `1.x`, `2.x`:\n\n```js\nconst MongoStore = require('connect-mongo')(express);\n\napp.use(express.session({\n    secret: 'foo',\n    store: new MongoStore(options)\n}));\n```\n\nFor Connect `1.x` and `2.x`, just replace `express` by `connect`.\n\n### Connection to MongoDB\n\nIn many circumstances, `connect-mongo` will not be the only part of your application which need a connection to a MongoDB database. It could be interesting to re-use an existing connection.\n\nAlternatively, you can configure `connect-mongo` to establish a new connection.\n\n#### Re-use a Mongoose connection\n\n```js\nconst mongoose = require('mongoose');\n\n// Basic usage\nmongoose.connect(connectionOptions);\n\napp.use(session({\n    store: new MongoStore({ mongooseConnection: mongoose.connection })\n}));\n\n// Advanced usage\nconst connection = mongoose.createConnection(connectionOptions);\n\napp.use(session({\n    store: new MongoStore({ mongooseConnection: connection })\n}));\n```\n\n#### Re-use a native MongoDB driver client (or a promise)\n\nIn this case, you just have to give your `MongoClient` instance to `connect-mongo`.\n\n```js\n/*\n** There are many ways to create MongoClient.\n** You should refer to the driver documentation.\n*/\napp.use(session({\n    store: new MongoStore({ client: clientInstance })\n}));\n```\n\nOr just give a promise...\n\n```js\napp.use(session({\n    store: new MongoStore({ clientPromise: clientInstancePromise })\n}));\n```\n\n#### Create a new connection from a MongoDB connection string\n\n[MongoDB connection strings](http://docs.mongodb.org/manual/reference/connection-string/) are __the best way__ to configure a new connection. For advanced usage, [more options](http://mongodb.github.io/node-mongodb-native/driver-articles/mongoclient.html#mongoclient-connect-options) can be configured with `mongoOptions` property.\n\n```js\n// Basic usage\napp.use(session({\n    store: new MongoStore({ url: 'mongodb://localhost/test-app' })\n}));\n\n// Advanced usage\napp.use(session({\n    store: new MongoStore({\n        url: 'mongodb://user12345:foobar@localhost/test-app?authSource=admins&w=1',\n        mongoOptions: advancedOptions // See below for details\n    })\n}));\n```\n\n## Events\n\nA `MongoStore` instance will emit the following events:\n\n| Event name | Description | Payload\n| ----- | ----- | ----- |\n| `create` | A session has been created | `sessionId` |\n| `touch` | A session has been touched (but not modified) | `sessionId` |\n| `update` | A session has been updated | `sessionId` |\n| `set` | A session has been created OR updated _(for compatibility purpose)_ | `sessionId` |\n| `destroy` | A session has been destroyed | `sessionId` |\n\n## Session expiration\n\nWhen the session cookie has an expiration date, `connect-mongo` will use it.\n\nOtherwise, it will create a new one, using `ttl` option.\n\n```js\napp.use(session({\n    store: new MongoStore({\n      url: 'mongodb://localhost/test-app',\n      ttl: 14 * 24 * 60 * 60 // = 14 days. Default\n    })\n}));\n```\n\n__Note:__ Each time an user interacts with the server, its session expiration date is refreshed.\n\n## Remove expired sessions\n\nBy default, `connect-mongo` uses MongoDB's TTL collection feature (2.2+) to have mongod automatically remove expired sessions. But you can change this behavior.\n\n### Set MongoDB to clean expired sessions (default mode)\n\n`connect-mongo` will create a TTL index for you at startup. You MUST have MongoDB 2.2+ and administration permissions.\n\n```js\napp.use(session({\n    store: new MongoStore({\n      url: 'mongodb://localhost/test-app',\n      autoRemove: 'native' // Default\n    })\n}));\n```\n\n__Note:__ If you use `connect-mongo` in a very concurrent environment, you should avoid this mode and prefer setting the index yourself, once!\n\n### Set the compatibility mode\n\nYou have an older MongoDB version (compatible with connect-mongo) or you can't or don't want to create a TTL index.\n\n`connect-mongo` will take care of removing expired sessions, using defined interval.\n\n```js\napp.use(session({\n    store: new MongoStore({\n      url: 'mongodb://localhost/test-app',\n      autoRemove: 'interval',\n      autoRemoveInterval: 10 // In minutes. Default\n    })\n}));\n```\n\n### Disable expired sessions cleaning\n\nYou are in production environnement and/or you manage the TTL index elsewhere.\n\n```js\napp.use(session({\n    store: new MongoStore({\n      url: 'mongodb://localhost/test-app',\n      autoRemove: 'disabled'\n    })\n}));\n```\n\n## Lazy session update\n\n\nIf you are using [express-session](https://github.com/expressjs/session) >= [1.10.0](https://github.com/expressjs/session/releases/tag/v1.10.0) and don't want to resave all the session on database every single time that the user refresh the page, you can lazy update the session, by limiting a period of time.\n\n```js\napp.use(express.session({\n    secret: 'keyboard cat',\n    saveUninitialized: false, // don't create session until something stored\n    resave: false, //don't save session if unmodified\n    store: new MongoStore({\n        url: 'mongodb://localhost/test-app',\n        touchAfter: 24 * 3600 // time period in seconds\n    })\n}));\n```\n\nby doing this, setting `touchAfter: 24 * 3600` you are saying to the session be updated only one time in a period of 24 hours, does not matter how many request's are made (with the exception of those that change something on the session data)\n\n\n## Transparent encryption/decryption of session data\n\nWhen working with sensitive session data it is [recommended](https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Session_Management_Cheat_Sheet.md) to use encryption\n\n```js\nconst store = new MongoStore({\n  url: 'mongodb://localhost/test-app',\n  secret: 'squirrel'\n})\n```\n\n## More options\n\n  - `collection` Collection (default: `sessions`)\n  - `fallbackMemory` Fallback to `MemoryStore`. Useful if you want to use MemoryStore in some case, like in development environment.\n  - `stringify` If true, connect-mongo will serialize sessions using `JSON.stringify` before\n                setting them, and deserialize them with `JSON.parse` when getting them.\n                (optional, default: true). This is useful if you are using types that\n                MongoDB doesn't support.\n  - `serialize` Custom hook for serializing sessions to MongoDB. This is helpful if you need\n                to modify the session before writing it out.\n  - `unserialize` Custom hook for unserializing sessions from MongoDB. This can be used in\n                scenarios where you need to support different types of serializations\n                (e.g., objects and JSON strings) or need to modify the session before using\n                it in your app.\n  - `writeOperationOptions` Options object to pass to every MongoDB write operation call that\n                supports it (e.g. `update`, `remove`). Useful for adjusting the write concern.\n                Only exception: If `autoRemove` is set to `'interval'`, the write concern\n                from the `writeOperationOptions` object will get overwritten.\n  - `transformId` (optional) Transform original sessionId in whatever you want to use as storage key.\n\n## Crypto options\n  - `secret` (optional) Enables transparent crypto in accordance with [OWASP session management recommendations](https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Session_Management_Cheat_Sheet.md).\n  - `algorithm` (optional) Allows for changes to the default symmetric encryption cipher; default is `GCM`. See `crypto.getCiphers()` for supported algorithms.\n  - `hashing` (optional) May be used to change the default hashing algorithm; default is `sha512`. See `crypto.getHashes()` for supported hashing algorithms.\n  - `encodeas` (optional) Specify to change the session data cipher text encoding. Default is `hex`.\n  - `key_size` (optional) When using varying algorithms the key size may be used. Default is `32` based on the `AES` blocksize.\n  - `iv_size` (optional) This can be used to adjust the default [IV](https://csrc.nist.gov/glossary/term/IV) size if a different algorithm requires a different size. Default is `16`.\n  - `at_size` (optional) When using newer `AES` modes such as the default `GCM` or `CCM` an authentication tag size can be defined; default is `16`.\n\n## Tests\n\n```\ndocker run --rm -p 27017:27017 mongo:3.6\nyarn install\nyarn test\n```\n\nThe tests use a database called `connect-mongo-test`.\n\n## Showcase\n\nOpen source projects and production apps using `connect-mongo`. Feel free to add yours in a pull request.\n\n* [Builder Book](https://github.com/builderbook/builderbook): Open source web app to write and host documentation or sell books. Built with React, Material-UI, Next, Express, Mongoose, MongoDB.\n\n## License\n\nThe MIT License\n","readmeFilename":"README.md","gitHead":"aceb1eeaf7b0947353646787cb3bfc05471e6542","homepage":"https://github.com/jdesboeufs/connect-mongo#readme","_id":"connect-mongo@3.0.0-rc.2","_nodeVersion":"10.16.0","_npmVersion":"6.9.0","dist":{"integrity":"sha512-mpMTAil/YnU0oUk0r6861u8ifGfda1Csk3bvuroOsqywAAt0Bx1bfZNjnmgxyk/nJI2T+MsLqzwRoV0Z1HIDxA==","shasum":"ccbd35abbd6f64fc93c06ed98a36fb34b3d0cf67","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-3.0.0-rc.2.tgz","fileCount":7,"unpackedSize":33653,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdBQsgCRA9TVsSAnZWagAAWnMP/0kEOwSxxN1oHPBnago9\npYbHQADGpbPSFX/QhvNojhtimWuTABuiOVMMFZ1NNE+lINXpGwYL/ZcQgbrh\nifWQ6APD/plnxix2ZPMdunirT4SJd1JIPl9yU8FHTKY/2Y245pXPIEBjtaqQ\nVcjFiMT/MTH50EuoCxTD4lfQ/SLXcvH2+NwhpiQ4PSsjDdfF4tWB13lIwCeB\nmVjUERkFOkM9j1JRa8pph3g+N/qr31Zy6Z/+b3sZ8VB0lxg49hxGa2gaWG/v\n6TS15mDb/nDDPRjfrjjwqlBMRbhny7a7iPuQdMm4Y6ddEx6wheHkioJ3MtS+\n2nxaiD03vy9TZUWc7/2CJL3KVtLTfcG0RfYbTmpNEK0ZhFHS5ipSCxRjV0eu\nQEX/UkBju7WyyJK2pnCANj6Ppl0Al8K1lXMh9USy75GyAz/AB82UIuyTNf/7\n6q4b8XJYY7+ugjuhsAWOJf3crrH2twKyoebNtUBB1u5h5RCsaiktfAWwqz+I\no9fB2SufuP9gIc2fxVjx4gDGQjQxIC1XQgAYDa07IlPK0McPT33bt2da3MMl\n4RepkYUWRnNUX71o7tKZz7KtVq/OuEAwtviH92l/ywBztNiNgHWdgfW5F0X1\nQEjWNk8JQXpXakfNe8do4n5xZ/C+m/8gRuF4K0kZO65UHk0xL/eFGOA13/60\n3wO9\r\n=x1R1\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"},{"name":"kcbanner","email":"kcbanner@gmail.com"}],"_npmUser":{"name":"mingchuno","email":"mingchuno@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/connect-mongo_3.0.0-rc.2_1560611615269_0.7921722598660998"},"_hasShrinkwrap":false},"3.0.0":{"name":"connect-mongo","version":"3.0.0","description":"MongoDB session store for Express and Connect","keywords":["connect","mongo","mongodb","session","express"],"contributors":[{"name":"Casey Banner","email":"kcbanner@gmail.com"},{"name":"Jerome Desboeufs","email":"jerome.desboeufs@gmail.com"},{"name":"MC Or","email":"mingchuno@gmail.com"}],"license":"MIT","repository":{"type":"git","url":"git+https://github.com/jdesboeufs/connect-mongo.git"},"bugs":{"url":"https://github.com/jdesboeufs/connect-mongo/issues"},"dependencies":{"mongodb":"^3.1.0"},"devDependencies":{"@commitlint/cli":"^8.0.0","@commitlint/config-conventional":"^8.0.0","eslint":"^5.16.0","eslint-config-prettier":"^4.3.0","eslint-config-prettier-standard":"^2.0.0","eslint-config-standard":"^12.0.0","eslint-plugin-import":"^2.17.3","eslint-plugin-jest":"^22.6.4","eslint-plugin-node":"^9.1.0","eslint-plugin-prettier":"^3.1.0","eslint-plugin-promise":"^4.1.1","eslint-plugin-standard":"^4.0.0","express-session":"^1.0.0","husky":"^2.4.1","jest":"^24.8.0","lint-staged":"^8.2.1","mongoose":"^5.2.0","prettier":"^1.18.2"},"scripts":{"lint":"eslint src test","lint:fix":"eslint src test --fix","test":"jest --coverage"},"husky":{"hooks":{"pre-commit":"lint-staged","commit-msg":"commitlint -E HUSKY_GIT_PARAMS"}},"lint-staged":{"*.js":["eslint --fix","git add"]},"gitHead":"63ca966852cdc87148178afc3063433e07a41af3","homepage":"https://github.com/jdesboeufs/connect-mongo#readme","_id":"connect-mongo@3.0.0","_npmVersion":"6.4.1","_nodeVersion":"10.15.1","_npmUser":{"name":"mingchuno","email":"mingchuno@gmail.com"},"dist":{"integrity":"sha512-Y95urWNGrAoKY2w31s7Q9Gs/W3qdMCshUIeDTgulssHi6KueYtz4XrbV3kcnQaR8EcBQvooNNX7aOaAJDgudag==","shasum":"8d038b024202a0d63d922a5a135adf243ab9f64f","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-3.0.0.tgz","fileCount":8,"unpackedSize":252494,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdB0xUCRA9TVsSAnZWagAAEroP/01qw3Oji8+LioXtgcOM\n7gzPW4oKNk31IXQcBDzob3Zh86DEAkS4VWtC21APP7dV/bsQhyLqjkgSn5jT\n8WqTmN3a5oasuTHno4Ue30TjTPoXfUMYKRvkOM5c6a4YHUKXXpgJmaxcUcsC\nwFgXKQGFWNltT6oixtoU45hvb4YkalOfYnJRw59qOE46c4YcbOVS7G8DvJPi\n3a+qobayMojEL3ElToY77IuLGBpCBhY2Ms83wprCJ1zyyegVOoiVwm4uvR+6\nTjYg8j/z4f5j08ftzizHMzHGJ+SV8TLjjwnCM6f8tyU67S6xWlff4x3u33c1\nx3FcorSAFRC/nGQKnBB9sjUqeL9e3p8HEq9rCkPVtM+MFxU150vDRD9aK174\n9koR4+3Irgl2ssVAWBhMQsRlGWOB5kbJr/RvTkvAz8oFHbDkW+3CzoDanfGp\nfNyAhhh0tSRHgX1x4U1SPRHQ0RydbHa2bvB7k3qJlNwjzsAlRJNwZFno9Gk0\ns+W25q/ullOyjyEvEmZp/fHxDQTfM/DI4qKJ+WIZEtrYO+4CWioRToz7JfGi\ntWHpUgc+QJR9IYdBdttviSEf66t4u+XHHOisyn3P8johxExtpmY7R2xitaLw\nwAdAAvoHmZfMxEIAlSUdPKmjyLzoVH/VgP/0+vdR7W1ZUqy1McGIXZpOVgSw\nBNVs\r\n=0dEs\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"},{"name":"kcbanner","email":"kcbanner@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/connect-mongo_3.0.0_1560759380260_0.7157491753155467"},"_hasShrinkwrap":false},"3.1.0":{"name":"connect-mongo","version":"3.1.0","description":"MongoDB session store for Express and Connect","keywords":["connect","mongo","mongodb","session","express"],"contributors":[{"name":"Casey Banner","email":"kcbanner@gmail.com"},{"name":"Jerome Desboeufs","email":"jerome.desboeufs@gmail.com"},{"name":"MC Or","email":"mingchuno@gmail.com"}],"license":"MIT","repository":{"type":"git","url":"git+https://github.com/jdesboeufs/connect-mongo.git"},"bugs":{"url":"https://github.com/jdesboeufs/connect-mongo/issues"},"dependencies":{"mongodb":"^3.1.0"},"devDependencies":{"@commitlint/cli":"^8.0.0","@commitlint/config-conventional":"^8.0.0","eslint":"^5.16.0","eslint-config-prettier":"^4.3.0","eslint-config-prettier-standard":"^2.0.0","eslint-config-standard":"^12.0.0","eslint-plugin-import":"^2.17.3","eslint-plugin-jest":"^22.6.4","eslint-plugin-node":"^9.1.0","eslint-plugin-prettier":"^3.1.0","eslint-plugin-promise":"^4.1.1","eslint-plugin-standard":"^4.0.0","express-session":"^1.0.0","husky":"^2.4.1","jest":"^24.8.0","lint-staged":"^8.2.1","mongoose":"^5.2.0","prettier":"^1.18.2"},"scripts":{"lint":"eslint src test","lint:fix":"eslint src test --fix","test":"jest --coverage"},"husky":{"hooks":{"pre-commit":"lint-staged","commit-msg":"commitlint -E HUSKY_GIT_PARAMS"}},"lint-staged":{"*.js":["eslint --fix","git add"]},"gitHead":"4ebb0c6127140916f036f123262700cd8064234b","homepage":"https://github.com/jdesboeufs/connect-mongo#readme","_id":"connect-mongo@3.1.0","_nodeVersion":"10.16.0","_npmVersion":"6.9.0","dist":{"integrity":"sha512-BDn09MMBFse7Y0uVjUW8p7jjDKHWgg0veXFeETqBeJM7Eg+aWN8YBpod5FkSLiD28YknrYjT4dgHg9fq/h62ew==","shasum":"2a98efa834de7e9e63005e24fec5dcf8d38b3cca","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-3.1.0.tgz","fileCount":8,"unpackedSize":34199,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdsG6xCRA9TVsSAnZWagAAbAUP/RIgFlIDNFo5Vfun4mtx\nMsmx2lHXwt+C9yUk8OQTlkXHCSsjz7LAV2dNKires1h4ZU+7cv+ej9UYDPEh\nk4c8GWjP5DSE2NMuIieaf2wtNEi17P5m9t8GMVZFuXKCBf+p4rkXPquqxYQR\nscyq6wnZUyCZxSOwgVevhrPG/lxM0F+I/7YR45d3sT8NGN0kkOPdDSRBGR/X\nGEunJyaM7oYL9q+2GQoVA+r85oVHUfifo1gQFAF50KFxC6t7AQ0/wzxZeDKG\n9qxh9PypIa2lfjestg6srXkT5ExVEbD8ZorRF5kA/hUlacpnPKXquBdNK/zu\na/XMb/UyCVBKx3uqNBU1qnyTcwnYG4JuONPE2hXisgZkD8kEMJ9h+jzqueuY\nrMtTooJB0ujJPXijrc4aqO3oH/VeYKDCFvHd/g0ZhwpW06GXlvd+CBp0D+6P\neqfRuelr9/uAnYBOCykL6nSbOIPVA+qrLNf2Xu7cqvdwb03WrX3Q18MeiOPs\neWleOtarXUpaZU16Ulk3DD7HQ4Vr4opJ1M4tuKdjq1OplAJuY+CMFaYn5xT/\n/IAAVln2asqqWZoeSkqMAyeVdSqGlfoolcXXdE4CnavWkphbKL1ZoTjnvbyq\nuqlsSUD5SyEUuR9LGucyl5Jb/gH1d8WsCwslCC9T66pXFsll1NVVVsIRmzRG\n0FZd\r\n=S9Qr\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"},{"name":"kcbanner","email":"kcbanner@gmail.com"}],"_npmUser":{"name":"mingchuno","email":"mingchuno@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/connect-mongo_3.1.0_1571843760833_0.3398387504047615"},"_hasShrinkwrap":false},"3.1.1":{"name":"connect-mongo","version":"3.1.1","description":"MongoDB session store for Express and Connect","keywords":["connect","mongo","mongodb","session","express"],"contributors":[{"name":"Casey Banner","email":"kcbanner@gmail.com"},{"name":"Jerome Desboeufs","email":"jerome.desboeufs@gmail.com"},{"name":"MC Or","email":"mingchuno@gmail.com"}],"license":"MIT","repository":{"type":"git","url":"git+https://github.com/jdesboeufs/connect-mongo.git"},"bugs":{"url":"https://github.com/jdesboeufs/connect-mongo/issues"},"dependencies":{"mongodb":"^3.1.0"},"devDependencies":{"@commitlint/cli":"^8.0.0","@commitlint/config-conventional":"^8.0.0","eslint":"^5.16.0","eslint-config-prettier":"^4.3.0","eslint-config-prettier-standard":"^2.0.0","eslint-config-standard":"^12.0.0","eslint-plugin-import":"^2.17.3","eslint-plugin-jest":"^22.6.4","eslint-plugin-node":"^9.1.0","eslint-plugin-prettier":"^3.1.0","eslint-plugin-promise":"^4.1.1","eslint-plugin-standard":"^4.0.0","express-session":"^1.0.0","husky":"^2.4.1","jest":"^24.8.0","lint-staged":"^8.2.1","mongoose":"^5.2.0","prettier":"^1.18.2"},"scripts":{"lint":"eslint src test","lint:fix":"eslint src test --fix","test":"jest --coverage"},"husky":{"hooks":{"pre-commit":"lint-staged","commit-msg":"commitlint -E HUSKY_GIT_PARAMS"}},"lint-staged":{"*.js":["eslint --fix","git add"]},"types":"src/types.d.ts","gitHead":"cbc95befb67e923bc8dc9c274a06406e30c6e559","homepage":"https://github.com/jdesboeufs/connect-mongo#readme","_id":"connect-mongo@3.1.1","_nodeVersion":"10.16.0","_npmVersion":"6.9.0","dist":{"integrity":"sha512-kXG1tBHXkzYJd1+oLUX5Q0Xp3wrBaFC24/3Bqvne6yLfVq3Urc/Qg9TdVge9MEEQ7Q8cirB5vDj85qsrAaPPyg==","shasum":"c5f34a4bda30d5e9c855f45b58260ad887bd77e9","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-3.1.1.tgz","fileCount":9,"unpackedSize":37620,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJduGSiCRA9TVsSAnZWagAA1zUP/0UQwns1fS7kn+BUDtzM\nAdbpps/LASs6+CaBYrwY47TRmtqxvwacpEBwr5vhipkrAID1bae2j+uthXuF\nMx9W9qNz4u5IARJXh3aXsjEmUiI/3eYxtahqfvnqjwFqMO/5m/r8s3ZK7yi5\nhq1OkHMvl3ej4ZmuDZrGY7pzOgWf85mQyF1m2Y9a6PxtVzMXxx2ltEtQ4E9I\npZjsnp9JxHixhYsRj5o7DT6/JhEVKaRKa6Q4sK0ftqXqYEKi9nv6gPVaujdS\nSFIw7KE7ufNlVveAE6/V4b3q2Y8TTdsIeBPqP61ISlxd5buXoTJDgHhQZ9qq\nT+JeWWNFl3p+qk9K+x5N51Ds4ksAiPRqgGc4yxK7vfWxdI/hJoaFtyEsKSBX\ni/Xnpe68zyKL4YZeGBAuJ9QqKaObTwSy4NGGP7uvOGu5gg5OjYlFSETGfqPQ\nIQycanNvps1fdpP5FiMfOac6gcdWCNT6uCVeKlujAIFnKK6VIuFUgZPJSmHg\nVyp4JHbgDYsd+Z2JsiX7D9qbrFtnHTI3ZRRu2PJHb1YvGG+EDL43DezvV7A6\nzXWeviQZkWQs4CRTyqVHH9WyrfSKY8hnxIoJ3jTeJx8scxyEXgXuSlBnHaER\ngfse+mYB/45cd66QMSYqnn+M2vRrjEtrGyrL8kEVUVIDMu/NnSUjQLm5web2\nvuQL\r\n=2auH\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"},{"name":"kcbanner","email":"kcbanner@gmail.com"}],"_npmUser":{"name":"mingchuno","email":"mingchuno@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/connect-mongo_3.1.1_1572365474111_0.23099830968580637"},"_hasShrinkwrap":false},"3.1.2":{"name":"connect-mongo","version":"3.1.2","description":"MongoDB session store for Express and Connect","keywords":["connect","mongo","mongodb","session","express"],"contributors":[{"name":"Casey Banner","email":"kcbanner@gmail.com"},{"name":"Jerome Desboeufs","email":"jerome.desboeufs@gmail.com"},{"name":"MC Or","email":"mingchuno@gmail.com"}],"license":"MIT","repository":{"type":"git","url":"git+https://github.com/jdesboeufs/connect-mongo.git"},"bugs":{"url":"https://github.com/jdesboeufs/connect-mongo/issues"},"dependencies":{"mongodb":"^3.1.0"},"devDependencies":{"@commitlint/cli":"^8.0.0","@commitlint/config-conventional":"^8.0.0","@types/express":"4.17.1","@types/express-session":"1.15.15","@types/mongodb":"3.3.7","@types/mongoose":"5.5.26","eslint":"^5.16.0","eslint-config-prettier":"^4.3.0","eslint-config-prettier-standard":"^2.0.0","eslint-config-standard":"^12.0.0","eslint-plugin-import":"^2.17.3","eslint-plugin-jest":"^22.6.4","eslint-plugin-node":"^9.1.0","eslint-plugin-prettier":"^3.1.0","eslint-plugin-promise":"^4.1.1","eslint-plugin-standard":"^4.0.0","express-session":"^1.0.0","husky":"^2.4.1","jest":"^24.8.0","lint-staged":"^8.2.1","mongoose":"^5.2.0","prettier":"^1.18.2"},"scripts":{"lint":"eslint src test","lint:fix":"eslint src test --fix","test":"jest --coverage"},"husky":{"hooks":{"pre-commit":"lint-staged","commit-msg":"commitlint -E HUSKY_GIT_PARAMS"}},"lint-staged":{"*.js":["eslint --fix","git add"]},"types":"src/types.d.ts","gitHead":"fb0edc16f0122eaeaa697c5d7071989a70970df0","homepage":"https://github.com/jdesboeufs/connect-mongo#readme","_id":"connect-mongo@3.1.2","_nodeVersion":"10.16.3","_npmVersion":"6.9.0","dist":{"integrity":"sha512-UBHOk+T3pj1nTDIb75y/m45sWDt2j9B9nG7C4RkvxGUmK7nA8kAH9lD9FgK06MrKiBTwV25rzXPbGk9yTURzfw==","shasum":"c89080ac2eb4432b03ec3250127a5a11472e0e7d","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-3.1.2.tgz","fileCount":9,"unpackedSize":37861,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdu+EQCRA9TVsSAnZWagAAJMAP/R3sH33vZpTNYkHlR9Yy\nlu9EP41PcrED9QMLRSS+F7E3XmyERbRZ9OCgefreFZjjpkyz4Uvtz4gJLRWd\nSsmQwmEO4xZRzBUE5Y5Hl1DwH/4SN+Xk6BjllBN0CJS7N6Clfo6zKhegK+im\n7y1QkpQurSXo2wsBSmu7bgTkuvcIBYtUQ/scOz9qduY83P4yQg4eUK4aj3v0\nUrhgr6MGxSYlPQc6DTovRlGGrLj52ybKVMl2WwRetZQJGCG4Xba3VU96DIxr\nYkFrf9TH+OPaDt3QaN/v9xjZakcgj+gY8vYWpt9Em/IvZ5P/pbEM8JEz2vS3\nfnAa9ZQzDv2h7yG7AcDU2XoVg5zBfNIiyBzUN5ytF1LuZqCVd99PZeNfsY6V\nQQKEKZwn6cUYGzcv8bkIYHRa1jD1vgPsbBre/llU598Oo9lRj66nz+i8C6g0\nf7ZHo3fThaI6zZDKybbMwRXI7CHbuT13Rh+FXOHMHZtvlY0nnQStNKnvSsMP\nD4JpLZAgz2hEloYyiACCwblr8RALDrdrKSUZT69wb9ZFcQuy80D6Oj+zcwjy\nOIC8Ct+E4tC1R7wr8xKWIvmzIv6nYXSy8rqLgfH1WRtgv0xgQZcL0vqcoOFy\n4BPPIPRGZgXRCb6fqIjp+00Us9JZ0tXtuUbjMoFN8NOa2MnAtrsz8Z9Licjx\noep0\r\n=okk6\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"},{"name":"kcbanner","email":"kcbanner@gmail.com"}],"_npmUser":{"name":"mingchuno","email":"mingchuno@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/connect-mongo_3.1.2_1572593935039_0.6492958803034499"},"_hasShrinkwrap":false},"3.2.0":{"name":"connect-mongo","version":"3.2.0","description":"MongoDB session store for Express and Connect","keywords":["connect","mongo","mongodb","session","express"],"contributors":[{"name":"Casey Banner","email":"kcbanner@gmail.com"},{"name":"Jerome Desboeufs","email":"jerome.desboeufs@gmail.com"},{"name":"MC Or","email":"mingchuno@gmail.com"}],"license":"MIT","repository":{"type":"git","url":"git+https://github.com/jdesboeufs/connect-mongo.git"},"bugs":{"url":"https://github.com/jdesboeufs/connect-mongo/issues"},"dependencies":{"mongodb":"^3.1.0"},"devDependencies":{"@commitlint/cli":"^8.0.0","@commitlint/config-conventional":"^8.0.0","@types/express":"4.17.1","@types/express-session":"1.15.15","@types/mongodb":"3.3.7","@types/mongoose":"5.5.26","eslint":"^5.16.0","eslint-config-prettier":"^4.3.0","eslint-config-prettier-standard":"^2.0.0","eslint-config-standard":"^12.0.0","eslint-plugin-import":"^2.17.3","eslint-plugin-jest":"^22.6.4","eslint-plugin-node":"^9.1.0","eslint-plugin-prettier":"^3.1.0","eslint-plugin-promise":"^4.1.1","eslint-plugin-standard":"^4.0.0","express-session":"^1.0.0","husky":"^2.4.1","jest":"^24.8.0","lint-staged":"^8.2.1","mongoose":"^5.2.0","prettier":"^1.18.2"},"scripts":{"lint":"eslint src test","lint:fix":"eslint src test --fix","test":"jest --coverage"},"husky":{"hooks":{"pre-commit":"lint-staged","commit-msg":"commitlint -E HUSKY_GIT_PARAMS"}},"lint-staged":{"*.js":["eslint --fix","git add"]},"types":"src/types.d.ts","gitHead":"1d0c21a96c840588bb4eae88bdf7d0584afa36c7","homepage":"https://github.com/jdesboeufs/connect-mongo#readme","_id":"connect-mongo@3.2.0","_nodeVersion":"10.16.0","_npmVersion":"6.9.0","dist":{"integrity":"sha512-0Mx88079Z20CG909wCFlR3UxhMYGg6Ibn1hkIje1hwsqOLWtL9HJV+XD0DAjUvQScK6WqY/FA8tSVQM9rR64Rw==","shasum":"20f776c7f2a9d8144fc76cfdcbf33edb05eb4d52","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-3.2.0.tgz","fileCount":9,"unpackedSize":40998,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd4ALkCRA9TVsSAnZWagAAn7sP/jYzy2x5NUdqug+txLyF\n3AMZ1eUtMJNaLIjDSrPVmehtbWZpX/9P5VyOMyrvJZFbG7pU9hpuDg+PzUC0\nmIi5Y9/e8XDlWEx+SAxTEiW4M5YOb1dTGIvLJtM606jGLRnn9iuZhzk4/Myb\nKnS4BpxXLnm0ggqQ9gZVSRcAgb3zwF5JMtTd4Ci3De4Bjc4LieIACi3c1gPz\nzs5YM43i63uWLvYsReD5tSghP8dU0XkWAJyp3N0AUD5dUZXa6iSf/wqcBhvw\nYQFxsNNngOFD12UP6CJw56SMyl6vatqiZ7S+3eBDXBn4hAzt442A6vcxOpLN\n7Zp+8rkuvRt7RJL/wbegKkj4DLykZrrv+WjHBmfYZWM7+oSXrZw1vzvfEb5R\njF/1KSq8MSG4+jCaZ9+v2PntBmR6/pWzhMX+13OypOBQQvhQxKsLEKO9QRxQ\nBbVcUWNtFI0MuKlX1HrZwSLyl+foewwny5QegibxUalAUMe42Ma0rFFanLei\n3y6DsSDm7TioNHKPqqPXlB7L13OWXyIryxseKtOd3+/OqpZg242IQJjyYFSj\nIRT55IjdGK3wZGpXDQUF28gGNSQdnIdn6cMFs027Ox6Bz2/ThvzGoNSV6KCQ\n0SMSIdPxwl5k4m23ADr9Yl7IhciCi9hs+V3rWAhVXzu9U94HchLnFUnnEkqw\nH4QY\r\n=k7aS\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"},{"name":"kcbanner","email":"kcbanner@gmail.com"}],"_npmUser":{"name":"mingchuno","email":"mingchuno@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/connect-mongo_3.2.0_1574961891826_0.5537422938948371"},"_hasShrinkwrap":false},"4.0.0":{"name":"connect-mongo","version":"4.0.0","description":"MongoDB session store for Express and Connect","main":"build/main/index.js","typings":"build/main/index.d.ts","module":"build/module/index.js","keywords":["connect","mongo","mongodb","session","express"],"contributors":[{"name":"Casey Banner","email":"kcbanner@gmail.com"},{"name":"Jerome Desboeufs","email":"jerome.desboeufs@gmail.com"},{"name":"MC Or","email":"mingchuno@gmail.com"}],"license":"MIT","repository":{"type":"git","url":"git+https://github.com/jdesboeufs/connect-mongo.git"},"bugs":{"url":"https://github.com/jdesboeufs/connect-mongo/issues"},"scripts":{"prebuild":"rm -rf build","build":"run-p build:*","build:main":"tsc -p tsconfig.json","build:module":"tsc -p tsconfig.module.json","fix":"run-s fix:*","fix:prettier":"prettier \"src/**/*.ts\" --write","fix:lint":"eslint --cache src --ext .ts --fix","test":"run-s build test:*","test:lint":"eslint --cache src --ext .ts","test:prettier":"prettier \"src/**/*.ts\" --list-different","test:unit":"nyc --silent ava","check-cli":"run-s test diff-integration-tests check-integration-tests","check-integration-tests":"run-s check-integration-test:*","diff-integration-tests":"mkdir -p diff && rm -rf diff/test && cp -r test diff/test && rm -rf diff/test/test-*/.git && cd diff && git init --quiet && git add -A && git commit --quiet --no-verify --allow-empty -m 'WIP' && echo '\\n\\nCommitted most recent integration test output in the \"diff\" directory. Review the changes with \"cd diff && git diff HEAD\" or your preferred git diff viewer.'","watch:build":"tsc -p tsconfig.json -w","watch:test":"nyc --silent ava --watch","cov":"run-s build test:unit cov:html cov:lcov && open-cli coverage/index.html","cov:html":"nyc report --reporter=html","cov:lcov":"nyc report --reporter=lcov","cov:send":"run-s cov:lcov && codecov","cov:check":"nyc report && nyc check-coverage","doc":"run-s doc:html && open-cli build/docs/index.html","doc:html":"typedoc src/ --exclude **/*.spec.ts --target ES6 --mode file --out build/docs","doc:json":"typedoc src/ --exclude **/*.spec.ts --target ES6 --mode file --json build/docs/typedoc.json","doc:publish":"gh-pages -m \"[ci skip] Updates\" -d build/docs","version":"standard-version","reset-hard":"git clean -dfx && git reset --hard && yarn","prepare-release":"run-s reset-hard test cov:check doc:html version doc:publish"},"engines":{"node":">=10"},"dependencies":{"mongodb":"^3.6.3"},"devDependencies":{"@ava/typescript":"^1.1.1","@commitlint/cli":"^11.0.0","@commitlint/config-conventional":"^11.0.0","@istanbuljs/nyc-config-typescript":"^1.0.1","@types/express":"^4.17.9","@types/express-session":"^1.17.3","@types/mongodb":"^3.6.3","@types/node":"^14.14.20","@typescript-eslint/eslint-plugin":"^4.12.0","@typescript-eslint/parser":"^4.12.0","ava":"^3.12.1","codecov":"^3.5.0","cspell":"^4.1.0","cz-conventional-changelog":"^3.3.0","eslint":"^7.17.0","eslint-config-prettier":"^7.1.0","eslint-config-prettier-standard":"^3.0.1","eslint-config-standard":"^16.0.2","eslint-plugin-eslint-comments":"^3.2.0","eslint-plugin-import":"^2.22.1","eslint-plugin-node":"^11.1.0","eslint-plugin-prettier":"^3.3.1","eslint-plugin-promise":"^4.2.1","eslint-plugin-standard":"^5.0.0","express-session":"^1.17.1","gh-pages":"^3.1.0","husky":"4","lint-staged":"^10.5.4","npm-run-all":"^4.1.5","nyc":"^15.1.0","open-cli":"^6.0.1","prettier":"^2.2.1","standard-version":"^9.0.0","ts-node":"^9.0.0","typedoc":"^0.19.0","typescript":"^4.0.2"},"ava":{"failFast":true,"timeout":"60s","typescript":{"rewritePaths":{"src/":"build/main/"}},"files":["!build/module/**","!src/test/**"]},"config":{"commitizen":{"path":"cz-conventional-changelog"}},"prettier":{"singleQuote":true,"semi":false,"trailingComma":"es5"},"nyc":{"extends":"@istanbuljs/nyc-config-typescript","exclude":["**/*.spec.js"]},"husky":{"hooks":{"pre-commit":"lint-staged","commit-msg":"commitlint -E HUSKY_GIT_PARAMS"}},"lint-staged":{"*.js":["eslint --fix"]},"readme":"# connect-mongo-ts\n\nMongoDB session store for Express and Connect. Still WIP.\n\n## Dev\n\n```\nyarn install\ndocker-compose up -d\n# Run these 2 lines in 2 shell\nyarn watch:build\nyarn watch:test\n```\n\n## TODOs\n\n- [ ] Crypto\n- [ ] Mongoose support?\n- [ ] Doc and meta data in package json\n- [ ] Remove console.log and add DEBUG log\n","readmeFilename":"README.md","gitHead":"ee12e52ead8a85eac3ecc38fd529ea039c4188bb","homepage":"https://github.com/jdesboeufs/connect-mongo#readme","_id":"connect-mongo@4.0.0","_nodeVersion":"14.15.5","_npmVersion":"6.14.11","dist":{"integrity":"sha512-AJQl+yJScMaMosS3uXtSarZ2G/jlO8XA8Hm+wV+LCTahgdkBKyaM8yxhIJOYIzEY/a+d3xc61Hacai9csFdzGQ==","shasum":"bd580a206603d3a70dfd5412749ec32fc5c4e5ce","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-4.0.0.tgz","fileCount":16,"unpackedSize":73579,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgMmBtCRA9TVsSAnZWagAA1NsP/1wscRa6i+ZERJYXta3U\nvIfLA5G9SCLrXEWTTQazgNUYO/0iunCRHFlgmIAL0j0WHocSR3EPvP8Aa1l8\nbrvXh9i9W73oKnPPswx4eF3hU4eCQvMTAPfKMBJGPHZpsK+hwFxbCELuKuKu\nasKu/jfKqc155c5Dy0uUqR8tlQswRNDn8Mg1e4QKu1zaDY9Ry1TqhXs/wYbx\njE0FqfLcrSruQdoVk6hbn2rxzwxzjfRNyGeb7K9ylLG3iVzzrv2QFOWuiuGx\nDYJ3USmASwITsgSUTQixJ6mT+kdBc81qYBx3Zquj8taZH9p06/jElaw60Hni\nArKA25rHOmwz6hbjDI+IvBxc0ymvqYk2MtJ8812Sriqw5WAi2+tIj2PUSaZD\n3WwLuBjDAg1AOmn5wHu5V7q0pJFVkIsY+yVLXfJAQa5UDBYf0BUbPp2T5qox\njSHM8Hm298ZIsSYWTnvEC+Hniv2WccrGA4lmvm+IPu15vj8X18dcUlvftAu+\nC1e9QTDMSWgI++N1RTyclAxOh54AtCPYpJJV6rl8nPqPxrBB1ndypZ8FORdJ\n92KV5LVJ7VJNGz8Q1gzAs56CL5f4ptvEN9USXVYNkWJvv/frCpWHu6SjwPE1\nEaon4V68Cx3duhz3O9MxoUh+zGuBKT8vfTX+ymSBai6FjstfraguEYBAMeFk\ntJuF\r\n=2Ej+\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"mingchuno","email":"mingchuno@gmail.com"},"directories":{},"maintainers":[{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"},{"name":"mingchuno","email":"mingchuno@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/connect-mongo_4.0.0_1613914221185_0.19049056948598309"},"_hasShrinkwrap":false,"deprecated":"this package has been deprecated"},"4.0.0-rc1":{"name":"connect-mongo","version":"4.0.0-rc1","description":"MongoDB session store for Express and Connect","main":"build/main/index.js","typings":"build/main/index.d.ts","module":"build/module/index.js","keywords":["connect","mongo","mongodb","session","express"],"contributors":[{"name":"Casey Banner","email":"kcbanner@gmail.com"},{"name":"Jerome Desboeufs","email":"jerome.desboeufs@gmail.com"},{"name":"MC Or","email":"mingchuno@gmail.com"}],"license":"MIT","repository":{"type":"git","url":"git+https://github.com/jdesboeufs/connect-mongo.git"},"bugs":{"url":"https://github.com/jdesboeufs/connect-mongo/issues"},"scripts":{"prebuild":"rm -rf build","build":"run-p build:*","build:main":"tsc -p tsconfig.json","build:module":"tsc -p tsconfig.module.json","fix":"run-s fix:*","fix:prettier":"prettier \"src/**/*.ts\" --write","fix:lint":"eslint --cache src --ext .ts --fix","test":"run-s build test:*","test:lint":"eslint --cache src --ext .ts","test:prettier":"prettier \"src/**/*.ts\" --list-different","test:unit":"nyc --silent ava","check-cli":"run-s test diff-integration-tests check-integration-tests","check-integration-tests":"run-s check-integration-test:*","diff-integration-tests":"mkdir -p diff && rm -rf diff/test && cp -r test diff/test && rm -rf diff/test/test-*/.git && cd diff && git init --quiet && git add -A && git commit --quiet --no-verify --allow-empty -m 'WIP' && echo '\\n\\nCommitted most recent integration test output in the \"diff\" directory. Review the changes with \"cd diff && git diff HEAD\" or your preferred git diff viewer.'","watch:build":"tsc -p tsconfig.json -w","watch:test":"nyc --silent ava --watch","cov":"run-s build test:unit cov:html cov:lcov && open-cli coverage/index.html","cov:html":"nyc report --reporter=html","cov:lcov":"nyc report --reporter=lcov","cov:send":"run-s cov:lcov && codecov","cov:check":"nyc report && nyc check-coverage","doc":"run-s doc:html && open-cli build/docs/index.html","doc:html":"typedoc src/ --exclude **/*.spec.ts --target ES6 --mode file --out build/docs","doc:json":"typedoc src/ --exclude **/*.spec.ts --target ES6 --mode file --json build/docs/typedoc.json","doc:publish":"gh-pages -m \"[ci skip] Updates\" -d build/docs","version":"standard-version","reset-hard":"git clean -dfx && git reset --hard && yarn","prepare-release":"run-s reset-hard test cov:check doc:html version doc:publish"},"engines":{"node":">=10"},"dependencies":{"mongodb":"^3.6.3"},"devDependencies":{"@ava/typescript":"^1.1.1","@commitlint/cli":"^11.0.0","@commitlint/config-conventional":"^11.0.0","@istanbuljs/nyc-config-typescript":"^1.0.1","@types/express":"^4.17.9","@types/express-session":"^1.17.3","@types/mongodb":"^3.6.3","@types/node":"^14.14.20","@typescript-eslint/eslint-plugin":"^4.12.0","@typescript-eslint/parser":"^4.12.0","ava":"^3.12.1","codecov":"^3.5.0","cspell":"^4.1.0","cz-conventional-changelog":"^3.3.0","eslint":"^7.17.0","eslint-config-prettier":"^7.1.0","eslint-config-prettier-standard":"^3.0.1","eslint-config-standard":"^16.0.2","eslint-plugin-eslint-comments":"^3.2.0","eslint-plugin-import":"^2.22.1","eslint-plugin-node":"^11.1.0","eslint-plugin-prettier":"^3.3.1","eslint-plugin-promise":"^4.2.1","eslint-plugin-standard":"^5.0.0","express-session":"^1.17.1","gh-pages":"^3.1.0","husky":"4","lint-staged":"^10.5.4","npm-run-all":"^4.1.5","nyc":"^15.1.0","open-cli":"^6.0.1","prettier":"^2.2.1","standard-version":"^9.0.0","ts-node":"^9.0.0","typedoc":"^0.19.0","typescript":"^4.0.2"},"ava":{"failFast":true,"timeout":"60s","typescript":{"rewritePaths":{"src/":"build/main/"}},"files":["!build/module/**","!src/test/**"]},"config":{"commitizen":{"path":"cz-conventional-changelog"}},"prettier":{"singleQuote":true,"semi":false,"trailingComma":"es5"},"nyc":{"extends":"@istanbuljs/nyc-config-typescript","exclude":["**/*.spec.js"]},"husky":{"hooks":{"pre-commit":"lint-staged","commit-msg":"commitlint -E HUSKY_GIT_PARAMS"}},"lint-staged":{"*.js":["eslint --fix"]},"readme":"# connect-mongo-ts\n\nMongoDB session store for Express and Connect. Still WIP.\n\n## Dev\n\n```\nyarn install\ndocker-compose up -d\n# Run these 2 lines in 2 shell\nyarn watch:build\nyarn watch:test\n```\n\n## TODOs\n\n- [ ] Crypto\n- [ ] Mongoose support?\n- [ ] Doc and meta data in package json\n- [ ] Remove console.log and add DEBUG log\n","readmeFilename":"README.md","gitHead":"477547ebfaeb112b5b6bae6d66560fcffbf8082f","homepage":"https://github.com/jdesboeufs/connect-mongo#readme","_id":"connect-mongo@4.0.0-rc1","_nodeVersion":"14.15.5","_npmVersion":"6.14.11","dist":{"integrity":"sha512-++pZbqsbYGJldqNm59QEOuLtfFv//+ECGVZEHjG7S3ljqvmh1/H4kEY7u1rLsFphqGj5pes3KLgDaSuq7k6DwQ==","shasum":"626ef17cb15ad549ce7dbaa43a6480944e75f2e9","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-4.0.0-rc1.tgz","fileCount":16,"unpackedSize":73583,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgMmDUCRA9TVsSAnZWagAA0HYP/jwmj/psYgXXrGD/9/UN\nF/ahc9rGr/L7zAQxiN260PPh4z6iNf+9unm6S2WX6eum+E8irgisQ5DnKlM3\nV92WYDaYuXwKHRumR05hZlsOk4GNxx14Z4ySWCSmmq067K8sQp6wFlR67QIN\nlGVypVbpzOW3noRoDspLxLnygAFDDmRIknk6n9VTvRrDvOKSOHtKXNyIdj9U\nz9NAi/UeYT1dlNBBpgFWr3uFXVDtEIi1zRXTTs3CJ1aw0abIYv507sv6oYwh\nhOE/ykCiOOfwNJy+5Trv1Wx6myLXmcrv0ThHbihJDiI+TYz+52Tk/tjq7LfH\nsh5rV9KrkMGRLfDIq2szXjofUKxUOhmVYRv+eIDRSj6GQuvhJNDM25LRJbpA\nwl+GJAItewkC+Lpie0pPMpDbGvJcKf3eE/05xW3kQ8qtOb5WuIUV+w71HIgl\n7xeESIW5uydG4CTo07wexqR2CJcuaUk/BuwvINLTKQF5n/nUYZILNzoxuxn2\n0tB1iJ40fW+rDzZ3nt3OqMagh5WiOkt48uYD/UvrLBw8MogLOGL+DWLw88U2\nEirFb5Ll+JFbOTUQvzwwD1r1Su90Z5JwqqUu+nw0bTlrbsVP6wWtBnNKLcry\nRJ+qXcKBfb0sQi7wcBSmyIK3nDzMG/z2VLmufaqkXqyR3Wrlgvz0hNh8Otxq\n0gMf\r\n=hSt6\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"mingchuno","email":"mingchuno@gmail.com"},"directories":{},"maintainers":[{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"},{"name":"mingchuno","email":"mingchuno@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/connect-mongo_4.0.0-rc1_1613914324159_0.8609503472903974"},"_hasShrinkwrap":false},"4.0.0-rc2":{"name":"connect-mongo","version":"4.0.0-rc2","description":"MongoDB session store for Express and Connect","main":"build/main/index.js","typings":"build/main/index.d.ts","module":"build/module/index.js","keywords":["connect","mongo","mongodb","session","express"],"contributors":[{"name":"Casey Banner","email":"kcbanner@gmail.com"},{"name":"Jerome Desboeufs","email":"jerome.desboeufs@gmail.com"},{"name":"MC Or","email":"mingchuno@gmail.com"}],"license":"MIT","repository":{"type":"git","url":"git+https://github.com/jdesboeufs/connect-mongo.git"},"bugs":{"url":"https://github.com/jdesboeufs/connect-mongo/issues"},"scripts":{"prebuild":"rm -rf build","build":"run-p build:*","build:main":"tsc -p tsconfig.json","build:module":"tsc -p tsconfig.module.json","fix":"run-s fix:*","fix:prettier":"prettier \"src/**/*.ts\" --write","fix:lint":"eslint --cache src --ext .ts --fix","test":"run-s build test:*","test:lint":"eslint --cache src --ext .ts","test:prettier":"prettier \"src/**/*.ts\" --list-different","test:unit":"nyc --silent ava","check-cli":"run-s test diff-integration-tests check-integration-tests","check-integration-tests":"run-s check-integration-test:*","diff-integration-tests":"mkdir -p diff && rm -rf diff/test && cp -r test diff/test && rm -rf diff/test/test-*/.git && cd diff && git init --quiet && git add -A && git commit --quiet --no-verify --allow-empty -m 'WIP' && echo '\\n\\nCommitted most recent integration test output in the \"diff\" directory. Review the changes with \"cd diff && git diff HEAD\" or your preferred git diff viewer.'","watch:build":"tsc -p tsconfig.json -w","watch:test":"nyc --silent ava --watch","cov":"run-s build test:unit cov:html cov:lcov && open-cli coverage/index.html","cov:html":"nyc report --reporter=html","cov:lcov":"nyc report --reporter=lcov","cov:send":"run-s cov:lcov && codecov","cov:check":"nyc report && nyc check-coverage","doc":"run-s doc:html && open-cli build/docs/index.html","doc:html":"typedoc src/ --exclude **/*.spec.ts --target ES6 --mode file --out build/docs","doc:json":"typedoc src/ --exclude **/*.spec.ts --target ES6 --mode file --json build/docs/typedoc.json","doc:publish":"gh-pages -m \"[ci skip] Updates\" -d build/docs","version":"standard-version","reset-hard":"git clean -dfx && git reset --hard && yarn","prepare-release":"run-s reset-hard test cov:check doc:html version doc:publish"},"engines":{"node":">=10"},"dependencies":{"mongodb":"^3.6.3"},"devDependencies":{"@ava/typescript":"^1.1.1","@commitlint/cli":"^11.0.0","@commitlint/config-conventional":"^11.0.0","@istanbuljs/nyc-config-typescript":"^1.0.1","@types/express":"^4.17.9","@types/express-session":"^1.17.3","@types/mongodb":"^3.6.3","@types/node":"^14.14.20","@typescript-eslint/eslint-plugin":"^4.12.0","@typescript-eslint/parser":"^4.12.0","ava":"^3.12.1","codecov":"^3.5.0","cspell":"^4.1.0","cz-conventional-changelog":"^3.3.0","eslint":"^7.17.0","eslint-config-prettier":"^7.1.0","eslint-config-prettier-standard":"^3.0.1","eslint-config-standard":"^16.0.2","eslint-plugin-eslint-comments":"^3.2.0","eslint-plugin-import":"^2.22.1","eslint-plugin-node":"^11.1.0","eslint-plugin-prettier":"^3.3.1","eslint-plugin-promise":"^4.2.1","eslint-plugin-standard":"^5.0.0","express-session":"^1.17.1","gh-pages":"^3.1.0","husky":"4","lint-staged":"^10.5.4","npm-run-all":"^4.1.5","nyc":"^15.1.0","open-cli":"^6.0.1","prettier":"^2.2.1","standard-version":"^9.0.0","ts-node":"^9.0.0","typedoc":"^0.19.0","typescript":"^4.0.2"},"ava":{"failFast":true,"timeout":"60s","typescript":{"rewritePaths":{"src/":"build/main/"}},"files":["!build/module/**","!src/test/**"]},"config":{"commitizen":{"path":"cz-conventional-changelog"}},"prettier":{"singleQuote":true,"semi":false,"trailingComma":"es5"},"nyc":{"extends":"@istanbuljs/nyc-config-typescript","exclude":["**/*.spec.js"]},"husky":{"hooks":{"pre-commit":"lint-staged","commit-msg":"commitlint -E HUSKY_GIT_PARAMS"}},"lint-staged":{"*.js":["eslint --fix"]},"readme":"# connect-mongo-ts\n\nMongoDB session store for Express and Connect. Still WIP.\n\n## Dev\n\n```\nyarn install\ndocker-compose up -d\n# Run these 2 lines in 2 shell\nyarn watch:build\nyarn watch:test\n```\n\n## TODOs\n\n- [ ] Crypto\n- [ ] Mongoose support?\n- [ ] Doc and meta data in package json\n- [ ] Remove console.log and add DEBUG log\n","readmeFilename":"README.md","gitHead":"477547ebfaeb112b5b6bae6d66560fcffbf8082f","homepage":"https://github.com/jdesboeufs/connect-mongo#readme","_id":"connect-mongo@4.0.0-rc2","_nodeVersion":"14.15.5","_npmVersion":"6.14.11","dist":{"integrity":"sha512-jc+DjCRimWsNWn4LCVYHW/oNYMMf/XN91FNWtFyvC+v4H2ZJMTfrzEUOQsrfjDEzyONdGlR2lx1fEsttpUaBEw==","shasum":"c5d8cd8441900e31c28103111ee6cfd876657796","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-4.0.0-rc2.tgz","fileCount":12,"unpackedSize":61760,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgMmEoCRA9TVsSAnZWagAAbyQP/3Q63asR+uAxaL2YG5GN\nevIm/vJWYWTEB+aA5xJRcXFpkxkat4Z2Az1FMNZkOKHe88kScDEE+iADU5wR\nQdaaNn5jJydqrbNBRgoqXQUu259Oe9V4FhDWHmfda1JKDnXkBuD7yGWRLL5g\n+p7B0P7DupIwRUCw4OxdZCL2pkbYN81eG3PZg4vR1KDhtoGfTHZSPWD1r3pz\nSMAqVtGjHtOyvsxWThWFc8Dggd+gn02KKWsvc8DMhOFhq7T/6rw7Yp4U2LNx\nEMPhI3VXXjNEtM5svr+7qxvMPp9ydCZ3o9EAymEcovYbVDdFygB7bW3ZxQcD\nHjN7aksEEC6MGIoI157dcrPpkg2SmxgqH0Thf5nxWclUaIIX5bSPXf9UIrE3\n9GS6j8PHPTGy73fg1YYKMELpAptANXGDZEVtZRdPemP6ugG+XVPgmLUBXHUk\nG6AByIqA0iVG+KbSuC5buOM2XlvFh+Z+q/N8rk+HZX1Lop8yyFuGj5y6xQNe\nqWdIaanRWB3UujeN3So/eS2VaHQOPz/gp7zbPMZ/cZCsEXvHmcDUubbb2tb5\n03FfRTL+Ab7+aSRK2FNgk3wZUhes4/I+6GT6QMBJHFia5B69Ali6oFCVrkq9\nEzreBvv4NHrLAKhZaF7QPvkvWhZKmQM160CPJbplXPqLYQ9yawejrswdNQS2\ncwUZ\r\n=OPKw\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"mingchuno","email":"mingchuno@gmail.com"},"directories":{},"maintainers":[{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"},{"name":"mingchuno","email":"mingchuno@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/connect-mongo_4.0.0-rc2_1613914408502_0.877436494832476"},"_hasShrinkwrap":false},"4.1.0-rc1":{"name":"connect-mongo","version":"4.1.0-rc1","description":"MongoDB session store for Express and Connect","main":"build/main/index.js","typings":"build/main/index.d.ts","module":"build/module/index.js","keywords":["connect","mongo","mongodb","session","express"],"contributors":[{"name":"Casey Banner","email":"kcbanner@gmail.com"},{"name":"Jerome Desboeufs","email":"jerome.desboeufs@gmail.com"},{"name":"MC Or","email":"mingchuno@gmail.com"}],"license":"MIT","repository":{"type":"git","url":"git+https://github.com/jdesboeufs/connect-mongo.git"},"bugs":{"url":"https://github.com/jdesboeufs/connect-mongo/issues"},"scripts":{"prebuild":"rm -rf build","build":"run-p build:*","build:main":"tsc -p tsconfig.json","build:module":"tsc -p tsconfig.module.json","fix":"run-s fix:*","fix:prettier":"prettier \"src/**/*.ts\" --write","fix:lint":"eslint --cache src --ext .ts --fix","test":"run-s build test:*","test:lint":"eslint --cache src --ext .ts","test:prettier":"prettier \"src/**/*.ts\" --list-different","test:unit":"nyc --silent ava","check-cli":"run-s test diff-integration-tests check-integration-tests","check-integration-tests":"run-s check-integration-test:*","diff-integration-tests":"mkdir -p diff && rm -rf diff/test && cp -r test diff/test && rm -rf diff/test/test-*/.git && cd diff && git init --quiet && git add -A && git commit --quiet --no-verify --allow-empty -m 'WIP' && echo '\\n\\nCommitted most recent integration test output in the \"diff\" directory. Review the changes with \"cd diff && git diff HEAD\" or your preferred git diff viewer.'","watch:build":"tsc -p tsconfig.json -w","watch:test":"nyc --silent ava --watch","cov":"run-s build test:unit cov:html cov:lcov && open-cli coverage/index.html","cov:html":"nyc report --reporter=html","cov:lcov":"nyc report --reporter=lcov","cov:send":"run-s cov:lcov && codecov","cov:check":"nyc report && nyc check-coverage","doc":"run-s doc:html && open-cli build/docs/index.html","doc:html":"typedoc src/ --exclude **/*.spec.ts --target ES6 --mode file --out build/docs","doc:json":"typedoc src/ --exclude **/*.spec.ts --target ES6 --mode file --json build/docs/typedoc.json","doc:publish":"gh-pages -m \"[ci skip] Updates\" -d build/docs","version":"standard-version","reset-hard":"git clean -dfx && git reset --hard && yarn","prepare-release":"run-s reset-hard test cov:check doc:html version doc:publish"},"engines":{"node":">=10"},"dependencies":{"debug":"^4.3.1","kruptein":"^2.2.3","mongodb":"^3.6.3"},"devDependencies":{"@ava/typescript":"^1.1.1","@commitlint/cli":"^11.0.0","@commitlint/config-conventional":"^11.0.0","@istanbuljs/nyc-config-typescript":"^1.0.1","@types/express":"^4.17.9","@types/express-session":"^1.17.3","@types/mongodb":"^3.6.3","@types/mongoose":"^5.10.3","@types/node":"^14.14.20","@typescript-eslint/eslint-plugin":"^4.12.0","@typescript-eslint/parser":"^4.12.0","ava":"^3.12.1","codecov":"^3.5.0","cspell":"^4.1.0","cz-conventional-changelog":"^3.3.0","eslint":"^7.17.0","eslint-config-prettier":"^7.1.0","eslint-config-prettier-standard":"^3.0.1","eslint-config-standard":"^16.0.2","eslint-plugin-eslint-comments":"^3.2.0","eslint-plugin-import":"^2.22.1","eslint-plugin-node":"^11.1.0","eslint-plugin-prettier":"^3.3.1","eslint-plugin-promise":"^4.2.1","eslint-plugin-standard":"^5.0.0","express-session":"^1.17.1","gh-pages":"^3.1.0","husky":"4","lint-staged":"^10.5.4","mongoose":"^5.11.17","npm-run-all":"^4.1.5","nyc":"^15.1.0","open-cli":"^6.0.1","prettier":"^2.2.1","standard-version":"^9.0.0","ts-node":"^9.0.0","typedoc":"^0.19.0","typescript":"^4.0.2"},"ava":{"failFast":true,"timeout":"60s","typescript":{"rewritePaths":{"src/":"build/main/"}},"files":["!build/module/**","!src/test/**"]},"config":{"commitizen":{"path":"cz-conventional-changelog"}},"prettier":{"singleQuote":true,"semi":false,"trailingComma":"es5"},"nyc":{"extends":"@istanbuljs/nyc-config-typescript","exclude":["**/*.spec.js"]},"husky":{"hooks":{"pre-commit":"lint-staged","commit-msg":"commitlint -E HUSKY_GIT_PARAMS"}},"lint-staged":{"*.{js,ts}":["eslint --fix"]},"readme":"# connect-mongo\n\nMongoDB session store for [Connect](https://github.com/senchalabs/connect) and [Express](http://expressjs.com/) written in Typescript.\n\n[![npm version](https://img.shields.io/npm/v/connect-mongo.svg)](https://www.npmjs.com/package/connect-mongo)\n[![downloads](https://img.shields.io/npm/dm/connect-mongo.svg)](https://www.npmjs.com/package/connect-mongo)\n[![Sanity check](https://github.com/jdesboeufs/connect-mongo/actions/workflows/sanity.yml/badge.svg)](https://github.com/jdesboeufs/connect-mongo/actions/workflows/sanity.yml)\n[![Coverage Status](https://coveralls.io/repos/jdesboeufs/connect-mongo/badge.svg?branch=master&service=github)](https://coveralls.io/github/jdesboeufs/connect-mongo?branch=master)\n\n> Breaking change in V4 and rewritten the whole project using Typescript. Please checkout the [migration guide](MIGRATION_V4.md) and [changelog](CHANGELOG.md) for details.\n\n```\nnpm install connect-mongo@next\nyarn add connect-mongo@next\n```\n\n## Compatibility\n\n* Support Express up to `5.0`\n* Support [native MongoDB driver](http://mongodb.github.io/node-mongodb-native/) `>= 3.0`\n* Support Node.js 10, 12 and 14\n* Support [MongoDB](https://www.mongodb.com/) `3.2+`\n\nFor extended compatibility, see previous versions [v3.x](https://github.com/jdesboeufs/connect-mongo/tree/v3.x).\nBut please note that we are not maintaining v3.x anymore.\n\n## Usage\n\n### Express or Connect integration\n\nExpress `4.x`, `5.0` and Connect `3.x`:\n\n```js\nconst session = require('express-session');\nconst MongoStore = require('connect-mongo').default;\n\napp.use(session({\n  secret: 'foo',\n  store: MongoStore.create(options)\n}));\n```\n\n### Connection to MongoDB\n\nIn many circumstances, `connect-mongo` will not be the only part of your application which need a connection to a MongoDB database. It could be interesting to re-use an existing connection.\n\nAlternatively, you can configure `connect-mongo` to establish a new connection.\n\n#### Create a new connection from a MongoDB connection string\n\n[MongoDB connection strings](http://docs.mongodb.org/manual/reference/connection-string/) are __the best way__ to configure a new connection. For advanced usage, [more options](http://mongodb.github.io/node-mongodb-native/driver-articles/mongoclient.html#mongoclient-connect-options) can be configured with `mongoOptions` property.\n\n```js\n// Basic usage\napp.use(session({\n  store: MongoStore.create({ mongoUrl: 'mongodb://localhost/test-app' })\n}));\n\n// Advanced usage\napp.use(session({\n  store: MongoStore.create({\n    mongoUrl: 'mongodb://user12345:foobar@localhost/test-app?authSource=admin&w=1',\n    mongoOptions: advancedOptions // See below for details\n  })\n}));\n```\n\n#### Re-use an existing native MongoDB driver client promise\n\nIn this case, you just have to give your `MongoClient` instance to `connect-mongo`.\n\n```js\n/*\n** There are many ways to create MongoClient.\n** You should refer to the driver documentation.\n*/\n\n// Database name present in the connection string will be used\napp.use(session({\n  store: MongoStore.create({ clientPromise })\n}));\n\n// Explicitly specifying database name\napp.use(session({\n  store: MongoStore.create({\n    clientPromise,\n    dbName: 'test-app'\n  })\n}));\n```\n\n## Events\n\nA `MongoStore` instance will emit the following events:\n\n| Event name | Description | Payload\n| ----- | ----- | ----- |\n| `create` | A session has been created | `sessionId` |\n| `touch` | A session has been touched (but not modified) | `sessionId` |\n| `update` | A session has been updated | `sessionId` |\n| `set` | A session has been created OR updated _(for compatibility purpose)_ | `sessionId` |\n| `destroy` | A session has been destroyed manually | `sessionId` |\n\n## Session expiration\n\nWhen the session cookie has an expiration date, `connect-mongo` will use it.\n\nOtherwise, it will create a new one, using `ttl` option.\n\n```js\napp.use(session({\n  store: MongoStore.create({\n    mongoUrl: 'mongodb://localhost/test-app',\n    ttl: 14 * 24 * 60 * 60 // = 14 days. Default\n  })\n}));\n```\n\n__Note:__ Each time an user interacts with the server, its session expiration date is refreshed.\n\n## Remove expired sessions\n`\nBy default, `connect-mongo` uses MongoDB's TTL collection feature (2.2+) to have `mongod` automatically remove expired sessions. `connect-mongo` will create a TTL index for you at startup. But you can disable the creation of index with `createAutoRemoveIdx: false`\n\n```js\napp.use(session({\n  store: MongoStore.create({\n    mongoUrl: 'mongodb://localhost/test-app',\n    createAutoRemoveIdx: false\n  })\n}));\n```\n\n__Note:__ If you use `connect-mongo` in a very concurrent environment, you should avoid this mode and prefer setting the index yourself, once!\n\n## Lazy session update\n\nIf you are using [express-session](https://github.com/expressjs/session) >= [1.10.0](https://github.com/expressjs/session/releases/tag/v1.10.0) and don't want to resave all the session on database every single time that the user refresh the page, you can lazy update the session, by limiting a period of time.\n\n```js\napp.use(express.session({\n  secret: 'keyboard cat',\n  saveUninitialized: false, // don't create session until something stored\n  resave: false, //don't save session if unmodified\n  store: MongoStore.create({\n    mongoUrl: 'mongodb://localhost/test-app',\n    touchAfter: 24 * 3600 // time period in seconds\n  })\n}));\n```\n\nby doing this, setting `touchAfter: 24 * 3600` you are saying to the session be updated only one time in a period of 24 hours, does not matter how many request's are made (with the exception of those that change something on the session data)\n\n\n## Transparent encryption/decryption of session data\n\nWhen working with sensitive session data it is [recommended](https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Session_Management_Cheat_Sheet.md) to use encryption\n\n```js\nconst store = MongoStore.create({\n  mongoUrl: 'mongodb://localhost/test-app',\n  crypto: {\n    secret: 'squirrel'\n  }\n})\n```\n\n## Options\n\n### Connection-related options (required)\n\nOne of the following options should be provided. If more than one option are provided, each option will take precedence over others according to priority.\n\n|Priority|Option|Description|\n|:------:|------|-----------|\n|1|`mongoUrl`|A [connection string](https://docs.mongodb.com/manual/reference/connection-string/) for creating a new MongoClient connection. If database name is not present in the connection string, database name should be provided using `dbName` option. |\n|2|`clientPromise`|A Promise that is resolved with MongoClient connection. If the connection was established without database name being present in the connection string, database name should be provided using `dbName` option.|\n\n### More options\n\n|Option|Default|Description|\n|------|:-----:|-----------|\n|`mongoOptions`|`{ useUnifiedTopology: true }`|Options object for [`MongoClient.connect()`](https://mongodb.github.io/node-mongodb-native/3.3/api/MongoClient.html#.connect) method. Can be used with `mongoUrl` option.|\n|`dbName`||A name of database used for storing sessions. Can be used with `mongoUrl`, or `clientPromise` options. Takes precedence over database name present in the connection string.|\n|`collectionName`|`'sessions'`|A name of collection used for storing sessions.|\n|`ttl`|`1209600`|The maximum lifetime (in seconds) of the session which will be used to set `session.cookie.expires` if it is not yet set. Default is 14 days.|\n|`createAutoRemoveIdx`|`true`|Create TTL index in MongoDB collection or not.|\n|`touchAfter`|`0`|Interval (in seconds) between session updates.|\n|`stringify`|`true`|If `true`, connect-mongo will serialize sessions using `JSON.stringify` before setting them, and deserialize them with `JSON.parse` when getting them. This is useful if you are using types that MongoDB doesn't support.|\n|`serialize`||Custom hook for serializing sessions to MongoDB. This is helpful if you need to modify the session before writing it out.|\n|`unserialize`||Custom hook for unserializing sessions from MongoDB. This can be used in scenarios where you need to support different types of serializations (e.g., objects and JSON strings) or need to modify the session before using it in your app.|\n|`writeOperationOptions`||Options object to pass to every MongoDB write operation call that supports it (e.g. `update`, `remove`). Useful for adjusting the write concern. Only exception: If `autoRemove` is set to `'interval'`, the write concern from the `writeOperationOptions` object will get overwritten.|\n|`transformId`||Transform original `sessionId` in whatever you want to use as storage key.|\n|`crypto`||Crypto related options. See below.|\n\n### Crypto-related options\n\n|Option|Default|Description|\n|------|:-----:|-----------|\n|`secret`|`false`|Enables transparent crypto in accordance with [OWASP session management recommendations](https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Session_Management_Cheat_Sheet.md).|\n|`algorithm`|`'aes-256-gcm'`|Allows for changes to the default symmetric encryption cipher. See [`crypto.getCiphers()`](https://nodejs.org/api/crypto.html#crypto_crypto_getciphers) for supported algorithms.|\n|`hashing`|`'sha512'`|May be used to change the default hashing algorithm. See [`crypto.getHashes()`](https://nodejs.org/api/crypto.html#crypto_crypto_gethashes) for supported hashing algorithms.|\n|`encodeas`|`'hex'`|Specify to change the session data cipher text encoding.|\n|`key_size`|`32`|When using varying algorithms the key size may be used. Default value `32` is based on the `AES` blocksize.|\n|`iv_size`|`16`|This can be used to adjust the default [IV](https://csrc.nist.gov/glossary/term/IV) size if a different algorithm requires a different size.|\n|`at_size`|`16`|When using newer `AES` modes such as the default `GCM` or `CCM` an authentication tag size can be defined.|\n\n## Development\n\n```\nyarn install\ndocker-compose up -d\n# Run these 2 lines in 2 shell\nyarn watch:build\nyarn watch:test\n```\n\n### Example application\n\n```\nyarn link\ncd example\nyarn link \"connect-mongo\"\nyarn install\nyarn start\n```\n\n### Release\n\nSince I cannot access the setting page. I can only do it manually.\n\n1. Bump version and update `CHANGELOG.md`. Commit and push.\n2. Run `yarn build && yarn test && npm publish --tag next`\n3. `git tag vX.Y.Z && git push --tags`\n\n## License\n\nThe MIT License\n","readmeFilename":"README.md","gitHead":"5962a9a6170432950d0e978a435c5cc4af41b147","homepage":"https://github.com/jdesboeufs/connect-mongo#readme","_id":"connect-mongo@4.1.0-rc1","_nodeVersion":"14.15.5","_npmVersion":"6.14.11","dist":{"integrity":"sha512-mgsEYtXGm+sXBkFgfzWSU+OIjWIUIAMjdRwrxTf9NaSIVQP3ER7UBhPP7sB46QdTWz/dOjZeE+KWJpF0ZVHTsQ==","shasum":"6c149edef2d44ae321b9cffffb3f2949429db683","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-4.1.0-rc1.tgz","fileCount":12,"unpackedSize":84567,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgM3j1CRA9TVsSAnZWagAAAawP+wWBhFQSH6rkgNoRCM09\nnDx6J2JrGUJIPFtdDoJnYlcRHrW1BGM3EMPLgfSznDZG08pizMX4L9iSzKWy\nt4ofQlFNwPI65/v803FejbxYAmX3bqsrSxCJQvC22MBkhCUv0vNv8buvuH9B\nuku6dC+1vk7ThPHlVBZdfD1e8Cf8ZN7n4EgO9HbgKo6JoGQrgLtzMEBVps/J\nsIwARILhN95QTX373sC2SZxtv+i/yI/myCsOlV+OpcWwZcmuta6EotkET/62\nO/ZjPeNLQfr1HmaBn6yChmphUYwG0YMZFiVCHIJXTTF21hObqgGHfsW9WIU1\nL1dCoLgW/C07TDIeUG5Lt4STXDDPDPQ11Vg4RgL3sXw30FxF/BJpqZ5XiDZb\nycdPqm/xi9AgKYe+m0go5kDT6sZp8m69R6/PH/E79QizT7O3HdVuPW3yuT2D\nmTk7asc/TC6SdqXxgisAp73Hey9TQnvWBvndDY8J2aTbsj1jC4/PkgYY5qP/\nM62RWBae59I4JXqUEQx2CYLk7rKLNHU6tE/XvuTyB/p6z9k/QJQsKvVSpPM9\nLgiE7oxVcSBt9nsS3UTL98dMfncROptmTnX1ot+UKVE8LBbAvc3hMTjWhdo6\n19d1X/zE1uTnO/J5hJpYuZ0uxX9ptKbnzThvS84XUFs/Ek3BKlB8c5xAST27\nMjiC\r\n=a3ZM\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"mingchuno","email":"mingchuno@gmail.com"},"directories":{},"maintainers":[{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"},{"name":"mingchuno","email":"mingchuno@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/connect-mongo_4.1.0-rc1_1613986036883_0.4111540753736198"},"_hasShrinkwrap":false},"4.1.0":{"name":"connect-mongo","version":"4.1.0","description":"MongoDB session store for Express and Connect","main":"build/main/index.js","typings":"build/main/index.d.ts","module":"build/module/index.js","keywords":["connect","mongo","mongodb","session","express"],"contributors":[{"name":"Casey Banner","email":"kcbanner@gmail.com"},{"name":"Jerome Desboeufs","email":"jerome.desboeufs@gmail.com"},{"name":"MC Or","email":"mingchuno@gmail.com"}],"license":"MIT","repository":{"type":"git","url":"git+https://github.com/jdesboeufs/connect-mongo.git"},"bugs":{"url":"https://github.com/jdesboeufs/connect-mongo/issues"},"scripts":{"prebuild":"rm -rf build","build":"run-p build:*","build:main":"tsc -p tsconfig.json","build:module":"tsc -p tsconfig.module.json","fix":"run-s fix:*","fix:prettier":"prettier \"src/**/*.ts\" --write","fix:lint":"eslint --cache src --ext .ts --fix","test":"run-s build test:*","test:lint":"eslint --cache src --ext .ts","test:prettier":"prettier \"src/**/*.ts\" --list-different","test:unit":"nyc --silent ava","check-cli":"run-s test diff-integration-tests check-integration-tests","check-integration-tests":"run-s check-integration-test:*","diff-integration-tests":"mkdir -p diff && rm -rf diff/test && cp -r test diff/test && rm -rf diff/test/test-*/.git && cd diff && git init --quiet && git add -A && git commit --quiet --no-verify --allow-empty -m 'WIP' && echo '\\n\\nCommitted most recent integration test output in the \"diff\" directory. Review the changes with \"cd diff && git diff HEAD\" or your preferred git diff viewer.'","watch:build":"tsc -p tsconfig.json -w","watch:test":"nyc --silent ava --watch","cov":"run-s build test:unit cov:html cov:lcov && open-cli coverage/index.html","cov:html":"nyc report --reporter=html","cov:lcov":"nyc report --reporter=lcov","cov:send":"run-s cov:lcov && codecov","cov:check":"nyc report && nyc check-coverage","doc":"run-s doc:html && open-cli build/docs/index.html","doc:html":"typedoc src/ --exclude **/*.spec.ts --target ES6 --mode file --out build/docs","doc:json":"typedoc src/ --exclude **/*.spec.ts --target ES6 --mode file --json build/docs/typedoc.json","doc:publish":"gh-pages -m \"[ci skip] Updates\" -d build/docs","version":"standard-version","reset-hard":"git clean -dfx && git reset --hard && yarn","prepare-release":"run-s reset-hard test cov:check doc:html version doc:publish"},"engines":{"node":">=10"},"dependencies":{"debug":"^4.3.1","kruptein":"^2.2.3","mongodb":"^3.6.3"},"devDependencies":{"@ava/typescript":"^1.1.1","@commitlint/cli":"^11.0.0","@commitlint/config-conventional":"^11.0.0","@istanbuljs/nyc-config-typescript":"^1.0.1","@types/express":"^4.17.9","@types/express-session":"^1.17.3","@types/mongodb":"^3.6.3","@types/mongoose":"^5.10.3","@types/node":"^14.14.20","@typescript-eslint/eslint-plugin":"^4.12.0","@typescript-eslint/parser":"^4.12.0","ava":"^3.12.1","codecov":"^3.5.0","cspell":"^4.1.0","cz-conventional-changelog":"^3.3.0","eslint":"^7.17.0","eslint-config-prettier":"^7.1.0","eslint-config-prettier-standard":"^3.0.1","eslint-config-standard":"^16.0.2","eslint-plugin-eslint-comments":"^3.2.0","eslint-plugin-import":"^2.22.1","eslint-plugin-node":"^11.1.0","eslint-plugin-prettier":"^3.3.1","eslint-plugin-promise":"^4.2.1","eslint-plugin-standard":"^5.0.0","express-session":"^1.17.1","gh-pages":"^3.1.0","husky":"4","lint-staged":"^10.5.4","mongoose":"^5.11.17","npm-run-all":"^4.1.5","nyc":"^15.1.0","open-cli":"^6.0.1","prettier":"^2.2.1","standard-version":"^9.0.0","ts-node":"^9.0.0","typedoc":"^0.19.0","typescript":"^4.0.2"},"ava":{"failFast":true,"timeout":"60s","typescript":{"rewritePaths":{"src/":"build/main/"}},"files":["!build/module/**","!src/test/**"]},"config":{"commitizen":{"path":"cz-conventional-changelog"}},"prettier":{"singleQuote":true,"semi":false,"trailingComma":"es5"},"nyc":{"extends":"@istanbuljs/nyc-config-typescript","exclude":["**/*.spec.js"]},"husky":{"hooks":{"pre-commit":"lint-staged","commit-msg":"commitlint -E HUSKY_GIT_PARAMS"}},"lint-staged":{"*.{js,ts}":["eslint --fix"]},"gitHead":"c8ad52cf0b41272036e43cf987c61f0927bb1997","homepage":"https://github.com/jdesboeufs/connect-mongo#readme","_id":"connect-mongo@4.1.0","_nodeVersion":"14.15.5","_npmVersion":"6.14.11","dist":{"integrity":"sha512-53b810jIf1l1yrLb/Au6XIJqDPVJrZ2SRMUZDgnECzaQLmDFRplHhF7n6vkPX5myUcz7Kjj59rxxsmWIuEwgjQ==","shasum":"dcf916398b7e35ad970e4a8cedeb242ab9d8e5d1","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-4.1.0.tgz","fileCount":12,"unpackedSize":84550,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgM3pbCRA9TVsSAnZWagAAjmEP/R5C8e7ZFb+shLZxDxDH\noeoXVp8PetMudopemig8+u1h0gNHTAf1kvtnc8buispEWOwCQp96qK3auoXD\nFH3KWDZMxu74vV9avZLZuYsQdvNFTrwWq0mIM3OvLlI2CE/cSh8cavNRZ6dd\nLc0fSPL8RTXA6jTO/IjbCrls9eh9HmLZA7fieDbOYU3wmsN8ze544ZFcgKz0\nzGl494zG4C29YSZlr4oU6nyVLHdZi7jzdOaW37g37M0syIye0hADjZl5NQA8\nO7Rr28QmK/Wcz8BUL6AD5Rv07eKGsQPVLm76owIHpPUMUcR5gq2J/xpAxi0A\n0DdBFnGnxhgiyZV1KGAk8QYdhx3GzwKcyhX84K72H8cPG9RBK4lBdmJ32kTi\nG49Y6qW+Ea+/7ijQXCGZHhsMzy+6vXJu1ENRbZnMrlZQhnmB0CE8XHDCEy9z\n3O9zesDwi7eF7eVKtq2ciFg0b18bhMaNOvCH9A4NV4gbbL3CeDUAIifS5u0V\nhqj3syD4mo/C8QoDaniJciCxhP3eOXcphA02QiQP2EkR5COAI+AoUlPV9016\nHS55gJw+cUDAh7vM2YTkv/Xumlg41hRi+/g0HQWbANd5Y94u3QdobUsQUtwe\n5yO+0uPByZE5gSI7+Nee21GM1OUvdZI2AS8gtrxDmECuVGSlxYm86nPMyVAC\nwveo\r\n=zm1A\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"mingchuno","email":"mingchuno@gmail.com"},"directories":{},"maintainers":[{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"},{"name":"mingchuno","email":"mingchuno@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/connect-mongo_4.1.0_1613986395488_0.4945920731909048"},"_hasShrinkwrap":false},"4.2.0-rc1":{"name":"connect-mongo","version":"4.2.0-rc1","description":"MongoDB session store for Express and Connect","main":"build/main/index.js","typings":"build/main/index.d.ts","module":"build/module/index.js","keywords":["connect","mongo","mongodb","session","express"],"contributors":[{"name":"Casey Banner","email":"kcbanner@gmail.com"},{"name":"Jerome Desboeufs","email":"jerome.desboeufs@gmail.com"},{"name":"MC Or","email":"mingchuno@gmail.com"}],"license":"MIT","repository":{"type":"git","url":"git+https://github.com/jdesboeufs/connect-mongo.git"},"bugs":{"url":"https://github.com/jdesboeufs/connect-mongo/issues"},"scripts":{"prebuild":"rm -rf build","build":"run-p build:*","build:main":"tsc -p tsconfig.json","build:module":"tsc -p tsconfig.module.json","fix":"run-s fix:*","fix:prettier":"prettier \"src/**/*.ts\" --write","fix:lint":"eslint --cache src --ext .ts --fix","test":"run-s build test:*","test:lint":"eslint --cache src --ext .ts","test:prettier":"prettier \"src/**/*.ts\" --list-different","test:unit":"nyc --silent ava","check-cli":"run-s test diff-integration-tests check-integration-tests","check-integration-tests":"run-s check-integration-test:*","diff-integration-tests":"mkdir -p diff && rm -rf diff/test && cp -r test diff/test && rm -rf diff/test/test-*/.git && cd diff && git init --quiet && git add -A && git commit --quiet --no-verify --allow-empty -m 'WIP' && echo '\\n\\nCommitted most recent integration test output in the \"diff\" directory. Review the changes with \"cd diff && git diff HEAD\" or your preferred git diff viewer.'","watch:build":"tsc -p tsconfig.json -w","watch:test":"nyc --silent ava --watch","cov":"run-s build test:unit cov:html cov:lcov && open-cli coverage/index.html","cov:html":"nyc report --reporter=html","cov:lcov":"nyc report --reporter=lcov","cov:send":"run-s cov:lcov && codecov","cov:check":"nyc report && nyc check-coverage","doc":"run-s doc:html && open-cli build/docs/index.html","doc:html":"typedoc src/ --exclude **/*.spec.ts --target ES6 --mode file --out build/docs","doc:json":"typedoc src/ --exclude **/*.spec.ts --target ES6 --mode file --json build/docs/typedoc.json","doc:publish":"gh-pages -m \"[ci skip] Updates\" -d build/docs","version":"standard-version","reset-hard":"git clean -dfx && git reset --hard && yarn","prepare-release":"run-s reset-hard test cov:check doc:html version doc:publish"},"engines":{"node":">=10"},"dependencies":{"debug":"^4.3.1","kruptein":"^2.2.3","mongodb":"^3.6.3"},"devDependencies":{"@ava/typescript":"^1.1.1","@commitlint/cli":"^11.0.0","@commitlint/config-conventional":"^11.0.0","@istanbuljs/nyc-config-typescript":"^1.0.1","@types/express":"^4.17.9","@types/express-session":"^1.17.3","@types/mongodb":"^3.6.3","@types/mongoose":"^5.10.3","@types/node":"^14.14.20","@typescript-eslint/eslint-plugin":"^4.12.0","@typescript-eslint/parser":"^4.12.0","ava":"^3.12.1","codecov":"^3.5.0","cspell":"^4.1.0","cz-conventional-changelog":"^3.3.0","eslint":"^7.17.0","eslint-config-prettier":"^7.1.0","eslint-config-prettier-standard":"^3.0.1","eslint-config-standard":"^16.0.2","eslint-plugin-eslint-comments":"^3.2.0","eslint-plugin-import":"^2.22.1","eslint-plugin-node":"^11.1.0","eslint-plugin-prettier":"^3.3.1","eslint-plugin-promise":"^4.2.1","eslint-plugin-standard":"^5.0.0","express-session":"^1.17.1","gh-pages":"^3.1.0","husky":"4","lint-staged":"^10.5.4","mongoose":"^5.11.17","npm-run-all":"^4.1.5","nyc":"^15.1.0","open-cli":"^6.0.1","prettier":"^2.2.1","standard-version":"^9.0.0","ts-node":"^9.0.0","typedoc":"^0.19.0","typescript":"^4.0.2"},"ava":{"failFast":true,"timeout":"60s","typescript":{"rewritePaths":{"src/":"build/main/"}},"files":["!build/module/**","!src/test/**"]},"config":{"commitizen":{"path":"cz-conventional-changelog"}},"prettier":{"singleQuote":true,"semi":false,"trailingComma":"es5"},"nyc":{"extends":"@istanbuljs/nyc-config-typescript","exclude":["**/*.spec.js"]},"husky":{"hooks":{"pre-commit":"lint-staged","commit-msg":"commitlint -E HUSKY_GIT_PARAMS"}},"lint-staged":{"*.{js,ts}":["eslint --fix"]},"readme":"# connect-mongo\n\nMongoDB session store for [Connect](https://github.com/senchalabs/connect) and [Express](http://expressjs.com/) written in Typescript.\n\n[![npm version](https://img.shields.io/npm/v/connect-mongo.svg)](https://www.npmjs.com/package/connect-mongo)\n[![downloads](https://img.shields.io/npm/dm/connect-mongo.svg)](https://www.npmjs.com/package/connect-mongo)\n[![Sanity check](https://github.com/jdesboeufs/connect-mongo/actions/workflows/sanity.yml/badge.svg)](https://github.com/jdesboeufs/connect-mongo/actions/workflows/sanity.yml)\n[![Coverage Status](https://coveralls.io/repos/jdesboeufs/connect-mongo/badge.svg?branch=master&service=github)](https://coveralls.io/github/jdesboeufs/connect-mongo?branch=master)\n\n> Breaking change in V4 and rewritten the whole project using Typescript. Please checkout the [migration guide](MIGRATION_V4.md) and [changelog](CHANGELOG.md) for details.\n\n```\nnpm install connect-mongo\nyarn add connect-mongo\n```\n\n## Compatibility\n\n* Support Express up to `5.0`\n* Support [native MongoDB driver](http://mongodb.github.io/node-mongodb-native/) `>= 3.0`\n* Support Node.js 10, 12 and 14\n* Support [MongoDB](https://www.mongodb.com/) `3.2+`\n\nFor extended compatibility, see previous versions [v3.x](https://github.com/jdesboeufs/connect-mongo/tree/v3.x).\nBut please note that we are not maintaining v3.x anymore.\n\n## Usage\n\n### Express or Connect integration\n\nExpress `4.x`, `5.0` and Connect `3.x`:\n\n```js\nconst session = require('express-session');\nconst MongoStore = require('connect-mongo').default;\n\napp.use(session({\n  secret: 'foo',\n  store: MongoStore.create(options)\n}));\n```\n\n### Connection to MongoDB\n\nIn many circumstances, `connect-mongo` will not be the only part of your application which need a connection to a MongoDB database. It could be interesting to re-use an existing connection.\n\nAlternatively, you can configure `connect-mongo` to establish a new connection.\n\n#### Create a new connection from a MongoDB connection string\n\n[MongoDB connection strings](http://docs.mongodb.org/manual/reference/connection-string/) are __the best way__ to configure a new connection. For advanced usage, [more options](http://mongodb.github.io/node-mongodb-native/driver-articles/mongoclient.html#mongoclient-connect-options) can be configured with `mongoOptions` property.\n\n```js\n// Basic usage\napp.use(session({\n  store: MongoStore.create({ mongoUrl: 'mongodb://localhost/test-app' })\n}));\n\n// Advanced usage\napp.use(session({\n  store: MongoStore.create({\n    mongoUrl: 'mongodb://user12345:foobar@localhost/test-app?authSource=admin&w=1',\n    mongoOptions: advancedOptions // See below for details\n  })\n}));\n```\n\n#### Re-use an existing native MongoDB driver client promise\n\nIn this case, you just have to give your `MongoClient` instance to `connect-mongo`.\n\n```js\n/*\n** There are many ways to create MongoClient.\n** You should refer to the driver documentation.\n*/\n\n// Database name present in the connection string will be used\napp.use(session({\n  store: MongoStore.create({ clientPromise })\n}));\n\n// Explicitly specifying database name\napp.use(session({\n  store: MongoStore.create({\n    clientPromise,\n    dbName: 'test-app'\n  })\n}));\n```\n\n## Events\n\nA `MongoStore` instance will emit the following events:\n\n| Event name | Description | Payload\n| ----- | ----- | ----- |\n| `create` | A session has been created | `sessionId` |\n| `touch` | A session has been touched (but not modified) | `sessionId` |\n| `update` | A session has been updated | `sessionId` |\n| `set` | A session has been created OR updated _(for compatibility purpose)_ | `sessionId` |\n| `destroy` | A session has been destroyed manually | `sessionId` |\n\n## Session expiration\n\nWhen the session cookie has an expiration date, `connect-mongo` will use it.\n\nOtherwise, it will create a new one, using `ttl` option.\n\n```js\napp.use(session({\n  store: MongoStore.create({\n    mongoUrl: 'mongodb://localhost/test-app',\n    ttl: 14 * 24 * 60 * 60 // = 14 days. Default\n  })\n}));\n```\n\n__Note:__ Each time an user interacts with the server, its session expiration date is refreshed.\n\n## Remove expired sessions\n`\nBy default, `connect-mongo` uses MongoDB's TTL collection feature (2.2+) to have `mongod` automatically remove expired sessions. `connect-mongo` will create a TTL index for you at startup. But you can disable the creation of index with `createAutoRemoveIdx: false`\n\n```js\napp.use(session({\n  store: MongoStore.create({\n    mongoUrl: 'mongodb://localhost/test-app',\n    createAutoRemoveIdx: false\n  })\n}));\n```\n\n__Note:__ If you use `connect-mongo` in a very concurrent environment, you should avoid this mode and prefer setting the index yourself, once!\n\n## Lazy session update\n\nIf you are using [express-session](https://github.com/expressjs/session) >= [1.10.0](https://github.com/expressjs/session/releases/tag/v1.10.0) and don't want to resave all the session on database every single time that the user refresh the page, you can lazy update the session, by limiting a period of time.\n\n```js\napp.use(express.session({\n  secret: 'keyboard cat',\n  saveUninitialized: false, // don't create session until something stored\n  resave: false, //don't save session if unmodified\n  store: MongoStore.create({\n    mongoUrl: 'mongodb://localhost/test-app',\n    touchAfter: 24 * 3600 // time period in seconds\n  })\n}));\n```\n\nby doing this, setting `touchAfter: 24 * 3600` you are saying to the session be updated only one time in a period of 24 hours, does not matter how many request's are made (with the exception of those that change something on the session data)\n\n\n## Transparent encryption/decryption of session data\n\nWhen working with sensitive session data it is [recommended](https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Session_Management_Cheat_Sheet.md) to use encryption\n\n```js\nconst store = MongoStore.create({\n  mongoUrl: 'mongodb://localhost/test-app',\n  crypto: {\n    secret: 'squirrel'\n  }\n})\n```\n\n## Options\n\n### Connection-related options (required)\n\nOne of the following options should be provided. If more than one option are provided, each option will take precedence over others according to priority.\n\n|Priority|Option|Description|\n|:------:|------|-----------|\n|1|`mongoUrl`|A [connection string](https://docs.mongodb.com/manual/reference/connection-string/) for creating a new MongoClient connection. If database name is not present in the connection string, database name should be provided using `dbName` option. |\n|2|`clientPromise`|A Promise that is resolved with MongoClient connection. If the connection was established without database name being present in the connection string, database name should be provided using `dbName` option.|\n\n### More options\n\n|Option|Default|Description|\n|------|:-----:|-----------|\n|`mongoOptions`|`{ useUnifiedTopology: true }`|Options object for [`MongoClient.connect()`](https://mongodb.github.io/node-mongodb-native/3.3/api/MongoClient.html#.connect) method. Can be used with `mongoUrl` option.|\n|`dbName`||A name of database used for storing sessions. Can be used with `mongoUrl`, or `clientPromise` options. Takes precedence over database name present in the connection string.|\n|`collectionName`|`'sessions'`|A name of collection used for storing sessions.|\n|`ttl`|`1209600`|The maximum lifetime (in seconds) of the session which will be used to set `session.cookie.expires` if it is not yet set. Default is 14 days.|\n|`createAutoRemoveIdx`|`true`|Create TTL index in MongoDB collection or not.|\n|`touchAfter`|`0`|Interval (in seconds) between session updates.|\n|`stringify`|`true`|If `true`, connect-mongo will serialize sessions using `JSON.stringify` before setting them, and deserialize them with `JSON.parse` when getting them. This is useful if you are using types that MongoDB doesn't support.|\n|`serialize`||Custom hook for serializing sessions to MongoDB. This is helpful if you need to modify the session before writing it out.|\n|`unserialize`||Custom hook for unserializing sessions from MongoDB. This can be used in scenarios where you need to support different types of serializations (e.g., objects and JSON strings) or need to modify the session before using it in your app.|\n|`writeOperationOptions`||Options object to pass to every MongoDB write operation call that supports it (e.g. `update`, `remove`). Useful for adjusting the write concern. Only exception: If `autoRemove` is set to `'interval'`, the write concern from the `writeOperationOptions` object will get overwritten.|\n|`transformId`||Transform original `sessionId` in whatever you want to use as storage key.|\n|`crypto`||Crypto related options. See below.|\n\n### Crypto-related options\n\n|Option|Default|Description|\n|------|:-----:|-----------|\n|`secret`|`false`|Enables transparent crypto in accordance with [OWASP session management recommendations](https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Session_Management_Cheat_Sheet.md).|\n|`algorithm`|`'aes-256-gcm'`|Allows for changes to the default symmetric encryption cipher. See [`crypto.getCiphers()`](https://nodejs.org/api/crypto.html#crypto_crypto_getciphers) for supported algorithms.|\n|`hashing`|`'sha512'`|May be used to change the default hashing algorithm. See [`crypto.getHashes()`](https://nodejs.org/api/crypto.html#crypto_crypto_gethashes) for supported hashing algorithms.|\n|`encodeas`|`'hex'`|Specify to change the session data cipher text encoding.|\n|`key_size`|`32`|When using varying algorithms the key size may be used. Default value `32` is based on the `AES` blocksize.|\n|`iv_size`|`16`|This can be used to adjust the default [IV](https://csrc.nist.gov/glossary/term/IV) size if a different algorithm requires a different size.|\n|`at_size`|`16`|When using newer `AES` modes such as the default `GCM` or `CCM` an authentication tag size can be defined.|\n\n## Development\n\n```\nyarn install\ndocker-compose up -d\n# Run these 2 lines in 2 shell\nyarn watch:build\nyarn watch:test\n```\n\n### Example application\n\n```\nyarn link\ncd example\nyarn link \"connect-mongo\"\nyarn install\nyarn start\n```\n\n### Release\n\nSince I cannot access the setting page. I can only do it manually.\n\n1. Bump version, update `CHANGELOG.md` and README. Commit and push.\n2. Run `yarn build && yarn test && npm publish`\n3. `git tag vX.Y.Z && git push --tags`\n\n## License\n\nThe MIT License\n","readmeFilename":"README.md","gitHead":"6e6fdcf598796241a698d62d6de29c16d07b1ad0","homepage":"https://github.com/jdesboeufs/connect-mongo#readme","_id":"connect-mongo@4.2.0-rc1","_nodeVersion":"14.15.5","_npmVersion":"6.14.11","dist":{"integrity":"sha512-u9RZiGZ+LvvpkccpMrY5oN1wIjizgX6bdOMNlrf9v1vHBiAL1/vuh4JMClvVxZkkuBCvmup1cGaaRiUjpl3FhQ==","shasum":"ba9f7bb2401ba6a3001b4c18f9e3d11444e4a0a2","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-4.2.0-rc1.tgz","fileCount":12,"unpackedSize":84671,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgNHFHCRA9TVsSAnZWagAASBMP/2X31c2zNiTq7HnNxBdX\n1hX9fc5wkns/bSsQtqMDMPI/LAoi85nJCzM+wmSq2hy0aFIHQGHfiJTomyJq\nZef6PiMu0GfGNv3BcqntJkAGyCKpAxPtGcYfDrzRb/WrZ8hV2V/HurF+hQz5\nVeWgsT8wQz9ItJ3Dd2zLwoDZkXd8TbbcBIC03xWMLehk4146H3moGknvgvNs\njAb8pI/W8An9vXnZsdWRcodW6Y3lLg45BT0/xvOV+GUcMLcyxYxvSgEUOgZ9\nq3rZNHcbofd4ZawNuw3nWrqVQ2z/4IYPZQB0f+Amb1vVN5N0azEfNYtatyDY\nsYD+b7a3mOg7uRXEVfStwOHWuHVnxQo2gu59QaIyyKiWe1n6bNsDd7ssbV9C\n2tHxkaNPnZEtHzLQQPI3Sh2KUoEIZhEld5/HPTb0Oiy+tpXbqBre/O5QqVYY\nRPti4zqVywFWvVT1q7JZKek7GdsB01NM3L9/EULMFr+UoO/0DFwq77caUgx6\nZxLknavCDTry+wjar+ixQdsQzQQCLhVksZr1RPOSQhfLKzwTFNUq26VO3JMo\nNz9CSDySiIyuL+/KpgMIXVoQlDuE1CVL4rvRt2EX34RQ491AVeFllvISIReU\nZt90fWQS5tQIAPpqC8+NmZO1a+olFbpDAZFZnApkjKDhIDIXNk7YYNNhKnXs\n3stl\r\n=DvXx\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"mingchuno","email":"mingchuno@gmail.com"},"directories":{},"maintainers":[{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"},{"name":"mingchuno","email":"mingchuno@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/connect-mongo_4.2.0-rc1_1614049606679_0.8899187718767032"},"_hasShrinkwrap":false},"4.2.0-rc2":{"name":"connect-mongo","version":"4.2.0-rc2","description":"MongoDB session store for Express and Connect","main":"build/main/index.js","typings":"build/main/index.d.ts","module":"build/module/index.js","keywords":["connect","mongo","mongodb","session","express"],"contributors":[{"name":"Casey Banner","email":"kcbanner@gmail.com"},{"name":"Jerome Desboeufs","email":"jerome.desboeufs@gmail.com"},{"name":"MC Or","email":"mingchuno@gmail.com"}],"license":"MIT","repository":{"type":"git","url":"git+https://github.com/jdesboeufs/connect-mongo.git"},"bugs":{"url":"https://github.com/jdesboeufs/connect-mongo/issues"},"scripts":{"prebuild":"rm -rf build","build":"run-p build:*","build:main":"tsc -p tsconfig.json","build:module":"tsc -p tsconfig.module.json","fix":"run-s fix:*","fix:prettier":"prettier \"src/**/*.ts\" --write","fix:lint":"eslint --cache src --ext .ts --fix","test":"run-s build test:*","test:lint":"eslint --cache src --ext .ts","test:prettier":"prettier \"src/**/*.ts\" --list-different","test:unit":"nyc --silent ava","check-cli":"run-s test diff-integration-tests check-integration-tests","check-integration-tests":"run-s check-integration-test:*","diff-integration-tests":"mkdir -p diff && rm -rf diff/test && cp -r test diff/test && rm -rf diff/test/test-*/.git && cd diff && git init --quiet && git add -A && git commit --quiet --no-verify --allow-empty -m 'WIP' && echo '\\n\\nCommitted most recent integration test output in the \"diff\" directory. Review the changes with \"cd diff && git diff HEAD\" or your preferred git diff viewer.'","watch:build":"tsc -p tsconfig.json -w","watch:test":"nyc --silent ava --watch","cov":"run-s build test:unit cov:html cov:lcov && open-cli coverage/index.html","cov:html":"nyc report --reporter=html","cov:lcov":"nyc report --reporter=lcov","cov:send":"run-s cov:lcov && codecov","cov:check":"nyc report && nyc check-coverage","doc":"run-s doc:html && open-cli build/docs/index.html","doc:html":"typedoc src/ --exclude **/*.spec.ts --target ES6 --mode file --out build/docs","doc:json":"typedoc src/ --exclude **/*.spec.ts --target ES6 --mode file --json build/docs/typedoc.json","doc:publish":"gh-pages -m \"[ci skip] Updates\" -d build/docs","version":"standard-version","reset-hard":"git clean -dfx && git reset --hard && yarn","prepare-release":"run-s reset-hard test cov:check doc:html version doc:publish"},"engines":{"node":">=10"},"dependencies":{"debug":"^4.3.1","kruptein":"^2.2.3","mongodb":"3.6.3"},"devDependencies":{"@ava/typescript":"^1.1.1","@commitlint/cli":"^11.0.0","@commitlint/config-conventional":"^11.0.0","@istanbuljs/nyc-config-typescript":"^1.0.1","@types/express":"^4.17.9","@types/express-session":"^1.17.3","@types/mongodb":"^3.6.3","@types/node":"^14.14.20","@typescript-eslint/eslint-plugin":"^4.12.0","@typescript-eslint/parser":"^4.12.0","ava":"^3.12.1","codecov":"^3.5.0","cspell":"^4.1.0","cz-conventional-changelog":"^3.3.0","eslint":"^7.17.0","eslint-config-prettier":"^7.1.0","eslint-config-prettier-standard":"^3.0.1","eslint-config-standard":"^16.0.2","eslint-plugin-eslint-comments":"^3.2.0","eslint-plugin-import":"^2.22.1","eslint-plugin-node":"^11.1.0","eslint-plugin-prettier":"^3.3.1","eslint-plugin-promise":"^4.2.1","eslint-plugin-standard":"^5.0.0","express-session":"^1.17.1","gh-pages":"^3.1.0","husky":"4","lint-staged":"^10.5.4","npm-run-all":"^4.1.5","nyc":"^15.1.0","open-cli":"^6.0.1","prettier":"^2.2.1","standard-version":"^9.0.0","ts-node":"^9.0.0","typedoc":"^0.19.0","typescript":"^4.0.2"},"ava":{"failFast":true,"timeout":"60s","typescript":{"rewritePaths":{"src/":"build/main/"}},"files":["!build/module/**","!src/test/**"]},"config":{"commitizen":{"path":"cz-conventional-changelog"}},"prettier":{"singleQuote":true,"semi":false,"trailingComma":"es5"},"nyc":{"extends":"@istanbuljs/nyc-config-typescript","exclude":["**/*.spec.js"]},"husky":{"hooks":{"pre-commit":"lint-staged","commit-msg":"commitlint -E HUSKY_GIT_PARAMS"}},"lint-staged":{"*.{js,ts}":["eslint --fix"]},"readme":"# connect-mongo\n\nMongoDB session store for [Connect](https://github.com/senchalabs/connect) and [Express](http://expressjs.com/) written in Typescript.\n\n[![npm version](https://img.shields.io/npm/v/connect-mongo.svg)](https://www.npmjs.com/package/connect-mongo)\n[![downloads](https://img.shields.io/npm/dm/connect-mongo.svg)](https://www.npmjs.com/package/connect-mongo)\n[![Sanity check](https://github.com/jdesboeufs/connect-mongo/actions/workflows/sanity.yml/badge.svg)](https://github.com/jdesboeufs/connect-mongo/actions/workflows/sanity.yml)\n[![Coverage Status](https://coveralls.io/repos/jdesboeufs/connect-mongo/badge.svg?branch=master&service=github)](https://coveralls.io/github/jdesboeufs/connect-mongo?branch=master)\n\n> Breaking change in V4 and rewritten the whole project using Typescript. Please checkout the [migration guide](MIGRATION_V4.md) and [changelog](CHANGELOG.md) for details.\n\n```\nnpm install connect-mongo\nyarn add connect-mongo\n```\n\n## Compatibility\n\n* Support Express up to `5.0`\n* Support [native MongoDB driver](http://mongodb.github.io/node-mongodb-native/) `>= 3.0`\n* Support Node.js 10, 12 and 14\n* Support [MongoDB](https://www.mongodb.com/) `3.2+`\n\nFor extended compatibility, see previous versions [v3.x](https://github.com/jdesboeufs/connect-mongo/tree/v3.x).\nBut please note that we are not maintaining v3.x anymore.\n\n## Usage\n\n### Express or Connect integration\n\nExpress `4.x`, `5.0` and Connect `3.x`:\n\n```js\nconst session = require('express-session');\nconst MongoStore = require('connect-mongo').default;\n\napp.use(session({\n  secret: 'foo',\n  store: MongoStore.create(options)\n}));\n```\n\n### Connection to MongoDB\n\nIn many circumstances, `connect-mongo` will not be the only part of your application which need a connection to a MongoDB database. It could be interesting to re-use an existing connection.\n\nAlternatively, you can configure `connect-mongo` to establish a new connection.\n\n#### Create a new connection from a MongoDB connection string\n\n[MongoDB connection strings](http://docs.mongodb.org/manual/reference/connection-string/) are __the best way__ to configure a new connection. For advanced usage, [more options](http://mongodb.github.io/node-mongodb-native/driver-articles/mongoclient.html#mongoclient-connect-options) can be configured with `mongoOptions` property.\n\n```js\n// Basic usage\napp.use(session({\n  store: MongoStore.create({ mongoUrl: 'mongodb://localhost/test-app' })\n}));\n\n// Advanced usage\napp.use(session({\n  store: MongoStore.create({\n    mongoUrl: 'mongodb://user12345:foobar@localhost/test-app?authSource=admin&w=1',\n    mongoOptions: advancedOptions // See below for details\n  })\n}));\n```\n\n#### Re-use an existing native MongoDB driver client promise\n\nIn this case, you just have to give your `MongoClient` instance to `connect-mongo`.\n\n```js\n/*\n** There are many ways to create MongoClient.\n** You should refer to the driver documentation.\n*/\n\n// Database name present in the connection string will be used\napp.use(session({\n  store: MongoStore.create({ clientPromise })\n}));\n\n// Explicitly specifying database name\napp.use(session({\n  store: MongoStore.create({\n    clientPromise,\n    dbName: 'test-app'\n  })\n}));\n```\n\n## Known issues\n\n[Known issues](https://github.com/jdesboeufs/connect-mongo/issues?q=is%3Aopen+is%3Aissue+label%3Abug)\n\n## Events\n\nA `MongoStore` instance will emit the following events:\n\n| Event name | Description | Payload\n| ----- | ----- | ----- |\n| `create` | A session has been created | `sessionId` |\n| `touch` | A session has been touched (but not modified) | `sessionId` |\n| `update` | A session has been updated | `sessionId` |\n| `set` | A session has been created OR updated _(for compatibility purpose)_ | `sessionId` |\n| `destroy` | A session has been destroyed manually | `sessionId` |\n\n## Session expiration\n\nWhen the session cookie has an expiration date, `connect-mongo` will use it.\n\nOtherwise, it will create a new one, using `ttl` option.\n\n```js\napp.use(session({\n  store: MongoStore.create({\n    mongoUrl: 'mongodb://localhost/test-app',\n    ttl: 14 * 24 * 60 * 60 // = 14 days. Default\n  })\n}));\n```\n\n__Note:__ Each time an user interacts with the server, its session expiration date is refreshed.\n\n## Remove expired sessions\n`\nBy default, `connect-mongo` uses MongoDB's TTL collection feature (2.2+) to have `mongod` automatically remove expired sessions. `connect-mongo` will create a TTL index for you at startup. But you can disable the creation of index with `createAutoRemoveIdx: false`\n\n```js\napp.use(session({\n  store: MongoStore.create({\n    mongoUrl: 'mongodb://localhost/test-app',\n    createAutoRemoveIdx: false\n  })\n}));\n```\n\n__Note:__ If you use `connect-mongo` in a very concurrent environment, you should avoid this mode and prefer setting the index yourself, once!\n\n## Lazy session update\n\nIf you are using [express-session](https://github.com/expressjs/session) >= [1.10.0](https://github.com/expressjs/session/releases/tag/v1.10.0) and don't want to resave all the session on database every single time that the user refresh the page, you can lazy update the session, by limiting a period of time.\n\n```js\napp.use(express.session({\n  secret: 'keyboard cat',\n  saveUninitialized: false, // don't create session until something stored\n  resave: false, //don't save session if unmodified\n  store: MongoStore.create({\n    mongoUrl: 'mongodb://localhost/test-app',\n    touchAfter: 24 * 3600 // time period in seconds\n  })\n}));\n```\n\nby doing this, setting `touchAfter: 24 * 3600` you are saying to the session be updated only one time in a period of 24 hours, does not matter how many request's are made (with the exception of those that change something on the session data)\n\n\n## Transparent encryption/decryption of session data\n\nWhen working with sensitive session data it is [recommended](https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Session_Management_Cheat_Sheet.md) to use encryption\n\n```js\nconst store = MongoStore.create({\n  mongoUrl: 'mongodb://localhost/test-app',\n  crypto: {\n    secret: 'squirrel'\n  }\n})\n```\n\n## Options\n\n### Connection-related options (required)\n\nOne of the following options should be provided. If more than one option are provided, each option will take precedence over others according to priority.\n\n|Priority|Option|Description|\n|:------:|------|-----------|\n|1|`mongoUrl`|A [connection string](https://docs.mongodb.com/manual/reference/connection-string/) for creating a new MongoClient connection. If database name is not present in the connection string, database name should be provided using `dbName` option. |\n|2|`clientPromise`|A Promise that is resolved with MongoClient connection. If the connection was established without database name being present in the connection string, database name should be provided using `dbName` option.|\n\n### More options\n\n|Option|Default|Description|\n|------|:-----:|-----------|\n|`mongoOptions`|`{ useUnifiedTopology: true }`|Options object for [`MongoClient.connect()`](https://mongodb.github.io/node-mongodb-native/3.3/api/MongoClient.html#.connect) method. Can be used with `mongoUrl` option.|\n|`dbName`||A name of database used for storing sessions. Can be used with `mongoUrl`, or `clientPromise` options. Takes precedence over database name present in the connection string.|\n|`collectionName`|`'sessions'`|A name of collection used for storing sessions.|\n|`ttl`|`1209600`|The maximum lifetime (in seconds) of the session which will be used to set `session.cookie.expires` if it is not yet set. Default is 14 days.|\n|`createAutoRemoveIdx`|`true`|Create TTL index in MongoDB collection or not.|\n|`touchAfter`|`0`|Interval (in seconds) between session updates.|\n|`stringify`|`true`|If `true`, connect-mongo will serialize sessions using `JSON.stringify` before setting them, and deserialize them with `JSON.parse` when getting them. This is useful if you are using types that MongoDB doesn't support.|\n|`serialize`||Custom hook for serializing sessions to MongoDB. This is helpful if you need to modify the session before writing it out.|\n|`unserialize`||Custom hook for unserializing sessions from MongoDB. This can be used in scenarios where you need to support different types of serializations (e.g., objects and JSON strings) or need to modify the session before using it in your app.|\n|`writeOperationOptions`||Options object to pass to every MongoDB write operation call that supports it (e.g. `update`, `remove`). Useful for adjusting the write concern. Only exception: If `autoRemove` is set to `'interval'`, the write concern from the `writeOperationOptions` object will get overwritten.|\n|`transformId`||Transform original `sessionId` in whatever you want to use as storage key.|\n|`crypto`||Crypto related options. See below.|\n\n### Crypto-related options\n\n|Option|Default|Description|\n|------|:-----:|-----------|\n|`secret`|`false`|Enables transparent crypto in accordance with [OWASP session management recommendations](https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Session_Management_Cheat_Sheet.md).|\n|`algorithm`|`'aes-256-gcm'`|Allows for changes to the default symmetric encryption cipher. See [`crypto.getCiphers()`](https://nodejs.org/api/crypto.html#crypto_crypto_getciphers) for supported algorithms.|\n|`hashing`|`'sha512'`|May be used to change the default hashing algorithm. See [`crypto.getHashes()`](https://nodejs.org/api/crypto.html#crypto_crypto_gethashes) for supported hashing algorithms.|\n|`encodeas`|`'hex'`|Specify to change the session data cipher text encoding.|\n|`key_size`|`32`|When using varying algorithms the key size may be used. Default value `32` is based on the `AES` blocksize.|\n|`iv_size`|`16`|This can be used to adjust the default [IV](https://csrc.nist.gov/glossary/term/IV) size if a different algorithm requires a different size.|\n|`at_size`|`16`|When using newer `AES` modes such as the default `GCM` or `CCM` an authentication tag size can be defined.|\n\n## Development\n\n```\nyarn install\ndocker-compose up -d\n# Run these 2 lines in 2 shell\nyarn watch:build\nyarn watch:test\n```\n\n### Example application\n\n```\nyarn link\ncd example\nyarn link \"connect-mongo\"\nyarn install\nyarn start\n```\n\n### Release\n\nSince I cannot access the setting page. I can only do it manually.\n\n1. Bump version, update `CHANGELOG.md` and README. Commit and push.\n2. Run `yarn build && yarn test && npm publish`\n3. `git tag vX.Y.Z && git push --tags`\n\n## License\n\nThe MIT License\n","readmeFilename":"README.md","gitHead":"cf20a6e896b54ddfd062bb98cfa835c853163ff7","homepage":"https://github.com/jdesboeufs/connect-mongo#readme","_id":"connect-mongo@4.2.0-rc2","_nodeVersion":"14.15.5","_npmVersion":"6.14.11","dist":{"integrity":"sha512-RS/8seZc9o3Y7bvDkqnvF8GFteje7nFKefV18CwXqXv9fYmhIzDX555BxnHxLN9pH4KzCnOu4UbNK4facDCjfg==","shasum":"39a63f790137fc13a9b128373b96b6e29836b6a3","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-4.2.0-rc2.tgz","fileCount":12,"unpackedSize":84567,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgNNfXCRA9TVsSAnZWagAAhaIP/2DD/VPOA5frVvAIBcv2\nqdis3291ivMlQYdUuvPPcslzoJoPxSuDEVfFujvbzNKIUotQdpn3QCUD1vuj\npuJvSW91DnOGB81r0PBWN3xnlMp9IKnOgepyb2kLsPmz4880rm8ofvo+7c1M\nqie4cib0HeHQHoDd6pWdvKsaw4LpEdSvYQQlcUJeY0vBhk3FSBfIE+KEt9jj\nBoAAaVYRV88bXEIE/rtR/byiKGIACcvc0d2DHcs0HPQBE+YoR60bXpnQSs2m\nM1BtYlMXKI0sxVzDx1+2xXuqnrBq9iFaJ1pZEd6lQDTE6FvVL7qzeHL5JRNg\n25I6uU1YW6SKQX/QUe4bzaQliNVuxNz0/jfLe4a8YDe60JZVDQXtTey7jQD2\n9dPMAToJk70wmNvysNWAa3cXiY7KGnBb5D+zE45m9qgBhEk/mPzrvHoB8pOM\nb6M7KBEuv4KAKOj9lKfY2Z3xouHH08Fzsyt7reNpmLr2U8lvjYl+v/aZl2AS\nS0BcmqE/gYnRv4TUswH7IlF1T9vgCwykXwudWYmi38czrOsiYpXScxYHZFE/\nq9rBhjj8rkjXzSVoOVStGYWAN598w9SuSsuj06Jvp3S9hGrQJ7tb0R+lMXC1\n9FPAczpd6AtloHiIHmXB4EDsZgQ9SrCvYmmGSlaEWBqYwtdWhkpBQuqJch2x\n6LKa\r\n=e1Ic\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"mingchuno","email":"mingchuno@gmail.com"},"directories":{},"maintainers":[{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"},{"name":"mingchuno","email":"mingchuno@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/connect-mongo_4.2.0-rc2_1614075862774_0.41690444374108404"},"_hasShrinkwrap":false},"4.2.0":{"name":"connect-mongo","version":"4.2.0","description":"MongoDB session store for Express and Connect","main":"build/main/index.js","typings":"build/main/index.d.ts","module":"build/module/index.js","keywords":["connect","mongo","mongodb","session","express"],"contributors":[{"name":"Casey Banner","email":"kcbanner@gmail.com"},{"name":"Jerome Desboeufs","email":"jerome.desboeufs@gmail.com"},{"name":"MC Or","email":"mingchuno@gmail.com"}],"license":"MIT","repository":{"type":"git","url":"git+https://github.com/jdesboeufs/connect-mongo.git"},"bugs":{"url":"https://github.com/jdesboeufs/connect-mongo/issues"},"scripts":{"prebuild":"rm -rf build","build":"run-p build:*","build:main":"tsc -p tsconfig.json","build:module":"tsc -p tsconfig.module.json","fix":"run-s fix:*","fix:prettier":"prettier \"src/**/*.ts\" --write","fix:lint":"eslint --cache src --ext .ts --fix","test":"run-s build test:*","test:lint":"eslint --cache src --ext .ts","test:prettier":"prettier \"src/**/*.ts\" --list-different","test:unit":"nyc --silent ava","check-cli":"run-s test diff-integration-tests check-integration-tests","check-integration-tests":"run-s check-integration-test:*","diff-integration-tests":"mkdir -p diff && rm -rf diff/test && cp -r test diff/test && rm -rf diff/test/test-*/.git && cd diff && git init --quiet && git add -A && git commit --quiet --no-verify --allow-empty -m 'WIP' && echo '\\n\\nCommitted most recent integration test output in the \"diff\" directory. Review the changes with \"cd diff && git diff HEAD\" or your preferred git diff viewer.'","watch:build":"tsc -p tsconfig.json -w","watch:test":"nyc --silent ava --watch","cov":"run-s build test:unit cov:html cov:lcov && open-cli coverage/index.html","cov:html":"nyc report --reporter=html","cov:lcov":"nyc report --reporter=lcov","cov:send":"run-s cov:lcov && codecov","cov:check":"nyc report && nyc check-coverage","doc":"run-s doc:html && open-cli build/docs/index.html","doc:html":"typedoc src/ --exclude **/*.spec.ts --target ES6 --mode file --out build/docs","doc:json":"typedoc src/ --exclude **/*.spec.ts --target ES6 --mode file --json build/docs/typedoc.json","doc:publish":"gh-pages -m \"[ci skip] Updates\" -d build/docs","version":"standard-version","reset-hard":"git clean -dfx && git reset --hard && yarn","prepare-release":"run-s reset-hard test cov:check doc:html version doc:publish"},"engines":{"node":">=10"},"dependencies":{"debug":"^4.3.1","kruptein":"^2.2.3","mongodb":"3.6.3"},"devDependencies":{"@ava/typescript":"^1.1.1","@commitlint/cli":"^11.0.0","@commitlint/config-conventional":"^11.0.0","@istanbuljs/nyc-config-typescript":"^1.0.1","@types/express":"^4.17.9","@types/express-session":"^1.17.3","@types/mongodb":"^3.6.3","@types/node":"^14.14.20","@types/supertest":"^2.0.10","@typescript-eslint/eslint-plugin":"^4.12.0","@typescript-eslint/parser":"^4.12.0","ava":"^3.12.1","codecov":"^3.5.0","cspell":"^4.1.0","cz-conventional-changelog":"^3.3.0","eslint":"^7.17.0","eslint-config-prettier":"^7.1.0","eslint-config-prettier-standard":"^3.0.1","eslint-config-standard":"^16.0.2","eslint-plugin-eslint-comments":"^3.2.0","eslint-plugin-import":"^2.22.1","eslint-plugin-node":"^11.1.0","eslint-plugin-prettier":"^3.3.1","eslint-plugin-promise":"^4.2.1","eslint-plugin-standard":"^5.0.0","express":"^4.17.1","express-session":"^1.17.1","gh-pages":"^3.1.0","husky":"4","lint-staged":"^10.5.4","npm-run-all":"^4.1.5","nyc":"^15.1.0","open-cli":"^6.0.1","prettier":"^2.2.1","standard-version":"^9.0.0","supertest":"^6.1.3","ts-node":"^9.0.0","typedoc":"^0.19.0","typescript":"^4.0.2"},"ava":{"failFast":true,"timeout":"60s","typescript":{"rewritePaths":{"src/":"build/main/"}},"files":["!build/module/**","!src/test/testHelper.ts"]},"config":{"commitizen":{"path":"cz-conventional-changelog"}},"prettier":{"singleQuote":true,"semi":false,"trailingComma":"es5"},"nyc":{"extends":"@istanbuljs/nyc-config-typescript","exclude":["**/*.spec.js"]},"husky":{"hooks":{"pre-commit":"lint-staged","commit-msg":"commitlint -E HUSKY_GIT_PARAMS"}},"lint-staged":{"*.{js,ts}":["eslint --fix"]},"gitHead":"3ca6ac75449a3a56a36ffef734267288a663810c","homepage":"https://github.com/jdesboeufs/connect-mongo#readme","_id":"connect-mongo@4.2.0","_nodeVersion":"14.15.5","_npmVersion":"6.14.11","dist":{"integrity":"sha512-2VDqVpzw4ZNExaKt/fRCR+oAxvZlNDg1FnPtxRVo8N8sIFQF2gyg1PgvfB3npIlpuHRcckx5p3KOxpSGKMn+GQ==","shasum":"9c9e6c7bbd521f238b8506ea65985b77b6a8e589","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-4.2.0.tgz","fileCount":12,"unpackedSize":91517,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgNcglCRA9TVsSAnZWagAA8wAP/idqxfpGB6MzNFMsgpxc\nM0xb3suTF02+sU8XcHleFZQuajs/BVgkKG42O/xDVr4vgmtMizXSFSbVDRWg\npIGDMbwLkiGaomvYKHBzmS+z/Jmhga08RURPqg06cKZjBI0OKsPUP6+fTNWs\nHxA8cocYbEVeQFZausdep4t2ZkQChHrr6AwGO1Lm+AywE9bFrPZnf7sDrHEv\ntr4Jbgeqmmlbtx4jxVm2CNAdCoUUH9vXtPbm61ej/xr0b7S318RSLfCuDTO0\nHOvjrGHxAG3gGWoj45Mt2/PQZwAvU3z/SfIv3TFOdOSlpYAVYWHS8UhjFfp3\ns7gdANawmL3R9ySvvxiW1NsQYVxN0GS+gc7Bvjy3nkaLRNghK1DgA48wR8if\noErRt5nmnhRbO8q0E8dg1QWRKr6x/masbFgJWp1qEqcNBj0bb7jIfkcNkaT4\nd3MaO6PIz+qWJ4s2PwM3ZqEnwUXk4N6OU5UBO2jdEYRGbM0hC4FP6Ox5wpjp\naww/xC4dQUEWppi/cvmANPhq3O9wATPJbBiGEjdiond5DZW03bkvXTq2w8J7\nYlFN5K4nlyK9AcWoo2wezWQwnHfTuQ/7Hwp6f+oVX5giCNHc6ZcurI8lju19\nJRHYeslSC7dzfnZjy1RVCw/Lu1Npx7trU7hfX2OqbiZk5NkzqTts0CCwLm7N\nyr1j\r\n=QTL7\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"mingchuno","email":"mingchuno@gmail.com"},"directories":{},"maintainers":[{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"},{"name":"mingchuno","email":"mingchuno@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/connect-mongo_4.2.0_1614137380760_0.7187149537296502"},"_hasShrinkwrap":false},"4.2.1":{"name":"connect-mongo","version":"4.2.1","description":"MongoDB session store for Express and Connect","main":"build/main/index.js","typings":"build/main/index.d.ts","module":"build/module/index.js","keywords":["connect","mongo","mongodb","session","express"],"contributors":[{"name":"Casey Banner","email":"kcbanner@gmail.com"},{"name":"Jerome Desboeufs","email":"jerome.desboeufs@gmail.com"},{"name":"MC Or","email":"mingchuno@gmail.com"}],"license":"MIT","repository":{"type":"git","url":"git+https://github.com/jdesboeufs/connect-mongo.git"},"bugs":{"url":"https://github.com/jdesboeufs/connect-mongo/issues"},"scripts":{"prebuild":"rm -rf build","build":"run-p build:*","build:main":"tsc -p tsconfig.json","build:module":"tsc -p tsconfig.module.json","fix":"run-s fix:*","fix:prettier":"prettier \"src/**/*.ts\" --write","fix:lint":"eslint --cache src --ext .ts --fix","test":"run-s build test:*","test:lint":"eslint --cache src --ext .ts","test:prettier":"prettier \"src/**/*.ts\" --list-different","test:unit":"nyc ava","check-cli":"run-s test diff-integration-tests check-integration-tests","check-integration-tests":"run-s check-integration-test:*","diff-integration-tests":"mkdir -p diff && rm -rf diff/test && cp -r test diff/test && rm -rf diff/test/test-*/.git && cd diff && git init --quiet && git add -A && git commit --quiet --no-verify --allow-empty -m 'WIP' && echo '\\n\\nCommitted most recent integration test output in the \"diff\" directory. Review the changes with \"cd diff && git diff HEAD\" or your preferred git diff viewer.'","watch:build":"tsc -p tsconfig.json -w","watch:test":"nyc --silent ava --watch","cov":"run-s build test:unit cov:html cov:lcov && open-cli coverage/index.html","cov:html":"nyc report --reporter=html","cov:lcov":"nyc report --reporter=lcov","cov:send":"run-s cov:lcov && codecov","cov:check":"nyc report && nyc check-coverage","doc":"run-s doc:html && open-cli build/docs/index.html","doc:html":"typedoc src/ --exclude **/*.spec.ts --target ES6 --mode file --out build/docs","doc:json":"typedoc src/ --exclude **/*.spec.ts --target ES6 --mode file --json build/docs/typedoc.json","doc:publish":"gh-pages -m \"[ci skip] Updates\" -d build/docs","version":"standard-version","reset-hard":"git clean -dfx && git reset --hard && yarn","prepare-release":"run-s reset-hard test cov:check doc:html version doc:publish"},"engines":{"node":">=10"},"dependencies":{"debug":"^4.3.1","kruptein":"^3.0.0","mongodb":"3.6.3"},"devDependencies":{"@ava/typescript":"^1.1.1","@commitlint/cli":"^11.0.0","@commitlint/config-conventional":"^11.0.0","@istanbuljs/nyc-config-typescript":"^1.0.1","@types/express":"^4.17.9","@types/express-session":"^1.17.3","@types/mongodb":"^3.6.3","@types/node":"^14.14.20","@types/supertest":"^2.0.10","@typescript-eslint/eslint-plugin":"^4.12.0","@typescript-eslint/parser":"^4.12.0","ava":"^3.12.1","codecov":"^3.5.0","cspell":"^4.1.0","cz-conventional-changelog":"^3.3.0","eslint":"^7.17.0","eslint-config-prettier":"^7.1.0","eslint-config-prettier-standard":"^3.0.1","eslint-config-standard":"^16.0.2","eslint-plugin-eslint-comments":"^3.2.0","eslint-plugin-import":"^2.22.1","eslint-plugin-node":"^11.1.0","eslint-plugin-prettier":"^3.3.1","eslint-plugin-promise":"^4.2.1","eslint-plugin-standard":"^5.0.0","express":"^4.17.1","express-session":"^1.17.1","gh-pages":"^3.1.0","husky":"4","lint-staged":"^10.5.4","npm-run-all":"^4.1.5","nyc":"^15.1.0","open-cli":"^6.0.1","prettier":"^2.2.1","standard-version":"^9.0.0","supertest":"^6.1.3","ts-node":"^9.0.0","typedoc":"^0.19.0","typescript":"^4.0.2"},"ava":{"failFast":true,"timeout":"60s","typescript":{"rewritePaths":{"src/":"build/main/"}},"files":["!build/module/**","!src/test/testHelper.ts"]},"config":{"commitizen":{"path":"cz-conventional-changelog"}},"prettier":{"singleQuote":true,"semi":false,"trailingComma":"es5"},"nyc":{"extends":"@istanbuljs/nyc-config-typescript","exclude":["**/*.spec.js"]},"husky":{"hooks":{"pre-commit":"lint-staged","commit-msg":"commitlint -E HUSKY_GIT_PARAMS"}},"lint-staged":{"*.{js,ts}":["eslint --fix"]},"gitHead":"2c6db0a55cf6db853a619981df9304cbfc438dcc","homepage":"https://github.com/jdesboeufs/connect-mongo#readme","_id":"connect-mongo@4.2.1","_nodeVersion":"14.15.5","_npmVersion":"6.14.11","dist":{"integrity":"sha512-Jaq77o2NLijg2JtdlAFSGfnW9zHnkciP2/RJh16ErBILMfFrQtkNIA7A2hQ8A3CGjije2Lvb6yXKrcVD1mlcvg==","shasum":"6b7a0c8cf0f8a4007a5dd434ca7735f8c2e767e2","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-4.2.1.tgz","fileCount":4,"unpackedSize":25984,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgPaldCRA9TVsSAnZWagAACm8QAJVUJfjoV0Ji3jBddaEB\nsVMOwQMdbZg/ZUgreBi8TYmnM6YztmNs2ka9MUr4ZNLS9V26E/wgEnR/SfLI\nyWF7Wj8oEXlWYSNlotGtPJ5VfgIbrP3VqzUW4Qy07NPOFMEn8LlBFRjeXKKJ\nYojqkYa2ROBK5au3v+O3zIg16iFrFQ8iHGXZN1ZTRcuEOGJhOZObqPwQRe9n\notH+V4vrPF1jVogkqCc6sQ+UkSR13KElUEVqP+Z3YNzWEOsJrtAml00a8yBB\njXKHkL24xeC2iZj1igYR32As5/PTCen4LV/0ag04kD6KA5LUftN7/4mU6Nef\nCSDND3Qs/cad5oCvixYBm31+jB2Zy2+LVQaR0dqKAP+DYvCDMgnQGp9GfpI8\n3EHh3XLN7gwqtB1NGYPS7TmrQnJ71/ya4NShxQ6AsCKJNFEuUKuH+9Cze0bz\ngtPGrkgJT3vyvkVEUY28SvzFLT3iU5UY8hc5Xg7DcG5avAqgZVlnogmQdZPj\n6xOnCeRRQFf5Sh5K41VKsnfo4Md/9gzbKWPeax+rdnWkL4oTd3QRi1H5f02G\nVwjAjqvn6uP7DrYy1PGEWoLcVv3EAu0AGX7qaaD5P+wVy4cDAnYX2ACWwpU/\n5RT663g0kZpNDWQYkw516Gn1g+RKQfUzEDbyUUMhlw0xuz8ZgrSmp+/ce3i3\nrcog\r\n=5YBc\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"mingchuno","email":"mingchuno@gmail.com"},"directories":{},"maintainers":[{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"},{"name":"mingchuno","email":"mingchuno@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/connect-mongo_4.2.1_1614653788902_0.4854339382857509"},"_hasShrinkwrap":false,"deprecated":"this package has been deprecated"},"4.2.2":{"name":"connect-mongo","version":"4.2.2","description":"MongoDB session store for Express and Connect","main":"build/main/index.js","typings":"build/main/index.d.ts","module":"build/module/index.js","keywords":["connect","mongo","mongodb","session","express"],"contributors":[{"name":"Casey Banner","email":"kcbanner@gmail.com"},{"name":"Jerome Desboeufs","email":"jerome.desboeufs@gmail.com"},{"name":"MC Or","email":"mingchuno@gmail.com"}],"license":"MIT","repository":{"type":"git","url":"git+https://github.com/jdesboeufs/connect-mongo.git"},"bugs":{"url":"https://github.com/jdesboeufs/connect-mongo/issues"},"scripts":{"prebuild":"rm -rf build","build":"run-p build:*","build:main":"tsc -p tsconfig.json","build:module":"tsc -p tsconfig.module.json","fix":"run-s fix:*","fix:prettier":"prettier \"src/**/*.ts\" --write","fix:lint":"eslint --cache src --ext .ts --fix","test":"run-s build test:*","test:lint":"eslint --cache src --ext .ts","test:prettier":"prettier \"src/**/*.ts\" --list-different","test:unit":"nyc ava","check-cli":"run-s test diff-integration-tests check-integration-tests","check-integration-tests":"run-s check-integration-test:*","diff-integration-tests":"mkdir -p diff && rm -rf diff/test && cp -r test diff/test && rm -rf diff/test/test-*/.git && cd diff && git init --quiet && git add -A && git commit --quiet --no-verify --allow-empty -m 'WIP' && echo '\\n\\nCommitted most recent integration test output in the \"diff\" directory. Review the changes with \"cd diff && git diff HEAD\" or your preferred git diff viewer.'","watch:build":"tsc -p tsconfig.json -w","watch:test":"nyc --silent ava --watch","cov":"run-s build test:unit cov:html cov:lcov && open-cli coverage/index.html","cov:html":"nyc report --reporter=html","cov:lcov":"nyc report --reporter=lcov","cov:send":"run-s cov:lcov && codecov","cov:check":"nyc report && nyc check-coverage","doc":"run-s doc:html && open-cli build/docs/index.html","doc:html":"typedoc src/ --exclude **/*.spec.ts --target ES6 --mode file --out build/docs","doc:json":"typedoc src/ --exclude **/*.spec.ts --target ES6 --mode file --json build/docs/typedoc.json","doc:publish":"gh-pages -m \"[ci skip] Updates\" -d build/docs","version":"standard-version","reset-hard":"git clean -dfx && git reset --hard && yarn","prepare-release":"run-s reset-hard test cov:check doc:html version doc:publish"},"engines":{"node":">=10"},"dependencies":{"debug":"^4.3.1","kruptein":"^3.0.0","mongodb":"3.6.3"},"devDependencies":{"@ava/typescript":"^1.1.1","@commitlint/cli":"^11.0.0","@commitlint/config-conventional":"^11.0.0","@istanbuljs/nyc-config-typescript":"^1.0.1","@types/express":"^4.17.9","@types/express-session":"^1.17.3","@types/mongodb":"^3.6.3","@types/node":"^14.14.20","@types/supertest":"^2.0.10","@typescript-eslint/eslint-plugin":"^4.12.0","@typescript-eslint/parser":"^4.12.0","ava":"^3.12.1","codecov":"^3.5.0","cspell":"^4.1.0","cz-conventional-changelog":"^3.3.0","eslint":"^7.17.0","eslint-config-prettier":"^7.1.0","eslint-config-prettier-standard":"^3.0.1","eslint-config-standard":"^16.0.2","eslint-plugin-eslint-comments":"^3.2.0","eslint-plugin-import":"^2.22.1","eslint-plugin-node":"^11.1.0","eslint-plugin-prettier":"^3.3.1","eslint-plugin-promise":"^4.2.1","eslint-plugin-standard":"^5.0.0","express":"^4.17.1","express-session":"^1.17.1","gh-pages":"^3.1.0","husky":"4","lint-staged":"^10.5.4","npm-run-all":"^4.1.5","nyc":"^15.1.0","open-cli":"^6.0.1","prettier":"^2.2.1","standard-version":"^9.0.0","supertest":"^6.1.3","ts-node":"^9.0.0","typedoc":"^0.19.0","typescript":"^4.0.2"},"ava":{"failFast":true,"timeout":"60s","typescript":{"rewritePaths":{"src/":"build/main/"}},"files":["!build/module/**","!src/test/testHelper.ts"]},"config":{"commitizen":{"path":"cz-conventional-changelog"}},"prettier":{"singleQuote":true,"semi":false,"trailingComma":"es5"},"nyc":{"extends":"@istanbuljs/nyc-config-typescript","exclude":["**/*.spec.js"]},"husky":{"hooks":{"pre-commit":"lint-staged","commit-msg":"commitlint -E HUSKY_GIT_PARAMS"}},"lint-staged":{"*.{js,ts}":["eslint --fix"]},"gitHead":"72538719a85392754415318b73bdd336f161ea6d","homepage":"https://github.com/jdesboeufs/connect-mongo#readme","_id":"connect-mongo@4.2.2","_nodeVersion":"14.15.5","_npmVersion":"6.14.11","dist":{"integrity":"sha512-HueEAPZoeGpzbfLTHBXSs6SwNZv275nz3Kxyak5aT+RlBz8/ljTw0wO1f3NwjWxkJdBd12mVb7/aYopS7tzq4A==","shasum":"2fe82250b34c29c31cdf4f379b6ded2375bae8b8","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-4.2.2.tgz","fileCount":12,"unpackedSize":91643,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgPapHCRA9TVsSAnZWagAAARgQAJrWC1R9WpmGaili3vUN\naIAZ6B8umrILLEak3w3ubgNPSXLXhoNuf6ZArXr5FHXxY+D02mwiVqdihH73\nIxXOiTc7Kmq3ta07WceubXERbCQf79WZxBkEdVPENv7bHFHjQBZKrLyNtcCS\nqYhEt2uKDcrwFKW++KRRNdFVtaZOf9xyeWqSGY9yGSzogcTj0iPj8I/oGYzu\nSqoA9Ks/sLgpFDy0M2bMe9qlPSYvZFMcDeVxsT3v3Wmt9FyewWuNTMbZgzbF\n4KSp8ngCvRl16bvs27rv70JieGj5m5WFY9O1v/Aztf/pZWQdWS1lYxtIf7fi\nbGtfa9gWOfDDyxeuHyfyEva0Bj94nzSi0WKZMSZ5/0dGzXAv0dRc905OiWb+\njT2SUoG0e4dDWUESkutujdzExzpDwHnPXRhRxf4YGvM80DhQWmQpvQoWwGFA\nZuDFfnhCpeiQZLywO7dYpVX1MoGxC+hOlnYQ1guasxOrYPY3rvL6lNQXOs4s\nfUUsSMpJAz1kXrfxQlsg+PaAf+/jIyOuw57EFXOIL/rNFMBcJu4hTq5Bytko\nvJvkI+Jzqy4ZA0B47l2dJSFT0K6bfG5OR62cdQJqu1/vor4NiAPRZ/bZ1qaO\nrNlR3vLvnlhgau2iPjxalRs8nf6mdK9jNYclvLqWW55bZ5kHw5/0qt9KrnTN\nvbnT\r\n=+b8b\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"mingchuno","email":"mingchuno@gmail.com"},"directories":{},"maintainers":[{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"},{"name":"mingchuno","email":"mingchuno@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/connect-mongo_4.2.2_1614654023488_0.2621962957830515"},"_hasShrinkwrap":false},"4.3.0":{"name":"connect-mongo","version":"4.3.0","description":"MongoDB session store for Express and Connect","main":"build/main/index.js","typings":"build/main/index.d.ts","module":"build/module/index.js","keywords":["connect","mongo","mongodb","session","express"],"contributors":[{"name":"Casey Banner","email":"kcbanner@gmail.com"},{"name":"Jerome Desboeufs","email":"jerome.desboeufs@gmail.com"},{"name":"MC Or","email":"mingchuno@gmail.com"}],"license":"MIT","repository":{"type":"git","url":"git+https://github.com/jdesboeufs/connect-mongo.git"},"bugs":{"url":"https://github.com/jdesboeufs/connect-mongo/issues"},"scripts":{"prebuild":"rm -rf build","build":"run-p build:*","build:main":"tsc -p tsconfig.json","build:module":"tsc -p tsconfig.module.json","fix":"run-s fix:*","fix:prettier":"prettier \"src/**/*.ts\" --write","fix:lint":"eslint --cache src --ext .ts --fix","test":"run-s build test:*","test:lint":"eslint --cache src --ext .ts","test:prettier":"prettier \"src/**/*.ts\" --list-different","test:unit":"nyc ava","check-cli":"run-s test diff-integration-tests check-integration-tests","check-integration-tests":"run-s check-integration-test:*","diff-integration-tests":"mkdir -p diff && rm -rf diff/test && cp -r test diff/test && rm -rf diff/test/test-*/.git && cd diff && git init --quiet && git add -A && git commit --quiet --no-verify --allow-empty -m 'WIP' && echo '\\n\\nCommitted most recent integration test output in the \"diff\" directory. Review the changes with \"cd diff && git diff HEAD\" or your preferred git diff viewer.'","watch:build":"tsc -p tsconfig.json -w","watch:test":"nyc --silent ava --watch","cov":"run-s build test:unit cov:html cov:lcov && open-cli coverage/index.html","cov:html":"nyc report --reporter=html","cov:lcov":"nyc report --reporter=lcov","cov:send":"run-s cov:lcov && codecov","cov:check":"nyc report && nyc check-coverage","doc":"run-s doc:html && open-cli build/docs/index.html","doc:html":"typedoc src/ --exclude **/*.spec.ts --target ES6 --mode file --out build/docs","doc:json":"typedoc src/ --exclude **/*.spec.ts --target ES6 --mode file --json build/docs/typedoc.json","doc:publish":"gh-pages -m \"[ci skip] Updates\" -d build/docs","version":"standard-version","reset-hard":"git clean -dfx && git reset --hard && yarn","prepare-release":"run-s reset-hard test cov:check doc:html version doc:publish"},"engines":{"node":">=10"},"dependencies":{"debug":"^4.3.1","kruptein":"^3.0.0","mongodb":"3.6.3"},"devDependencies":{"@ava/typescript":"^1.1.1","@commitlint/cli":"^11.0.0","@commitlint/config-conventional":"^11.0.0","@istanbuljs/nyc-config-typescript":"^1.0.1","@types/express":"^4.17.9","@types/express-session":"^1.17.3","@types/mongodb":"^3.6.3","@types/node":"^14.14.20","@types/supertest":"^2.0.10","@typescript-eslint/eslint-plugin":"^4.12.0","@typescript-eslint/parser":"^4.12.0","ava":"^3.12.1","codecov":"^3.5.0","cspell":"^4.1.0","cz-conventional-changelog":"^3.3.0","eslint":"^7.17.0","eslint-config-prettier":"^7.1.0","eslint-config-prettier-standard":"^3.0.1","eslint-config-standard":"^16.0.2","eslint-plugin-eslint-comments":"^3.2.0","eslint-plugin-import":"^2.22.1","eslint-plugin-node":"^11.1.0","eslint-plugin-prettier":"^3.3.1","eslint-plugin-promise":"^4.2.1","eslint-plugin-standard":"^5.0.0","express":"^4.17.1","express-session":"^1.17.1","gh-pages":"^3.1.0","husky":"4","lint-staged":"^10.5.4","npm-run-all":"^4.1.5","nyc":"^15.1.0","open-cli":"^6.0.1","prettier":"^2.2.1","standard-version":"^9.0.0","supertest":"^6.1.3","ts-node":"^9.0.0","typedoc":"^0.19.0","typescript":"^4.0.2"},"ava":{"failFast":true,"timeout":"60s","typescript":{"rewritePaths":{"src/":"build/main/"}},"files":["!build/module/**","!src/test/testHelper.ts"]},"config":{"commitizen":{"path":"cz-conventional-changelog"}},"prettier":{"singleQuote":true,"semi":false,"trailingComma":"es5"},"nyc":{"extends":"@istanbuljs/nyc-config-typescript","exclude":["**/*.spec.js"]},"husky":{"hooks":{"pre-commit":"lint-staged","commit-msg":"commitlint -E HUSKY_GIT_PARAMS"}},"lint-staged":{"*.{js,ts}":["eslint --fix"]},"gitHead":"aa0bf1f7c341977f22f7a3550df567bd1c93406c","homepage":"https://github.com/jdesboeufs/connect-mongo#readme","_id":"connect-mongo@4.3.0","_nodeVersion":"14.15.5","_npmVersion":"6.14.11","dist":{"integrity":"sha512-TsZ7FlMX/RxVv3xIcvL3GZXT6pqmQ6kmw8hEkEVqm8rvy6I8O4jNSVSNai5jXBFCf42EuQGCYYW5CgDkBsN3Xg==","shasum":"80277cf8bd79e6863eb3eff5071b11db67f8daed","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-4.3.0.tgz","fileCount":12,"unpackedSize":92772,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgRZjcCRA9TVsSAnZWagAAYcQQAIRpV/utBdt0quHMUFo/\nY+eHiTffMZIf3NtkzPI4ocPp7fn2weN/4KwQKeMmlaWLPAX69y01EkIWq+K5\n7Lz/pj4ugvDC3eEvuI0JGDGU+Tkv0Vo2TyVqWxFX8I+IS4fStDqcxnAzVLHQ\nsiIMucwom21CRaO5a4Qi3n9ki+A/pLlhuw5SXmV+GfTQ1wHCTa8Nt2lKqjAA\nzxtR3FLH76yJYZcYHGzsa/tStpTl/cvW6D9qmiNObiD0DvneLFN0qyv4Lhmv\nUPZr5OujvpZg1K3f0z6VzjRWe8Hnn4r4wkn/xEcf3lv15kb9PHRbDsTpyxsR\nRP6QkgDUxGqGYeZ7J/N2Chi+CdS+IS8SlmvYzpPBOrRNbdyWPggg3B/sCcnZ\ne/oWoVx6Kpg/1Vu0pzs3IqWAfUj2WyiS/YorEhBmwcejzI6zYFr5IUXwTI1V\nVNe2OJnkOhUit+8fow1F88xvjN3Jx4VY+9FkbZp1dKBufCz5jubfZA0MxHw7\nizTCbvm9jK11yCMiRNZHi0GACDhDafcPvdJNmPUqJpJX5SEBf0uLJYh9RVo+\n15c2z/6EYnspVu/lYHSIOmK1uB1fiDt6f7UgdK8oZe7H9GU3B7U+LOPh3Dqn\nDblibUXpQLcx3cO967H0lr+0ZxAAotbpOFQJCc4gG/k6DpJKpZ4M96WRoohC\nuG7U\r\n=vty4\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"mingchuno","email":"mingchuno@gmail.com"},"directories":{},"maintainers":[{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"},{"name":"mingchuno","email":"mingchuno@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/connect-mongo_4.3.0_1615173852378_0.9276595275992803"},"_hasShrinkwrap":false},"4.3.1":{"name":"connect-mongo","version":"4.3.1","description":"MongoDB session store for Express and Connect","main":"build/main/index.js","typings":"build/main/index.d.ts","module":"build/module/index.js","keywords":["connect","mongo","mongodb","session","express"],"contributors":[{"name":"Casey Banner","email":"kcbanner@gmail.com"},{"name":"Jerome Desboeufs","email":"jerome.desboeufs@gmail.com"},{"name":"MC Or","email":"mingchuno@gmail.com"}],"license":"MIT","repository":{"type":"git","url":"git+https://github.com/jdesboeufs/connect-mongo.git"},"bugs":{"url":"https://github.com/jdesboeufs/connect-mongo/issues"},"scripts":{"prebuild":"rm -rf build","build":"run-p build:*","build:main":"tsc -p tsconfig.json","build:module":"tsc -p tsconfig.module.json","fix":"run-s fix:*","fix:prettier":"prettier \"src/**/*.ts\" --write","fix:lint":"eslint --cache src --ext .ts --fix","test":"run-s build test:*","test:lint":"eslint --cache src --ext .ts","test:prettier":"prettier \"src/**/*.ts\" --list-different","test:unit":"nyc ava","check-cli":"run-s test diff-integration-tests check-integration-tests","check-integration-tests":"run-s check-integration-test:*","diff-integration-tests":"mkdir -p diff && rm -rf diff/test && cp -r test diff/test && rm -rf diff/test/test-*/.git && cd diff && git init --quiet && git add -A && git commit --quiet --no-verify --allow-empty -m 'WIP' && echo '\\n\\nCommitted most recent integration test output in the \"diff\" directory. Review the changes with \"cd diff && git diff HEAD\" or your preferred git diff viewer.'","watch:build":"tsc -p tsconfig.json -w","watch:test":"nyc --silent ava --watch","cov":"run-s build test:unit cov:html cov:lcov && open-cli coverage/index.html","cov:html":"nyc report --reporter=html","cov:lcov":"nyc report --reporter=lcov","cov:send":"run-s cov:lcov && codecov","cov:check":"nyc report && nyc check-coverage","doc":"run-s doc:html && open-cli build/docs/index.html","doc:html":"typedoc src/ --exclude **/*.spec.ts --target ES6 --mode file --out build/docs","doc:json":"typedoc src/ --exclude **/*.spec.ts --target ES6 --mode file --json build/docs/typedoc.json","doc:publish":"gh-pages -m \"[ci skip] Updates\" -d build/docs","version":"standard-version","reset-hard":"git clean -dfx && git reset --hard && yarn","prepare-release":"run-s reset-hard test cov:check doc:html version doc:publish"},"engines":{"node":">=10"},"dependencies":{"debug":"^4.3.1","kruptein":"^3.0.0","mongodb":"3.6.3"},"devDependencies":{"@ava/typescript":"^1.1.1","@commitlint/cli":"^11.0.0","@commitlint/config-conventional":"^11.0.0","@istanbuljs/nyc-config-typescript":"^1.0.1","@types/express":"^4.17.9","@types/express-session":"^1.17.3","@types/mongodb":"^3.6.3","@types/node":"^14.14.20","@types/supertest":"^2.0.10","@typescript-eslint/eslint-plugin":"^4.12.0","@typescript-eslint/parser":"^4.12.0","ava":"^3.12.1","codecov":"^3.5.0","cspell":"^4.1.0","cz-conventional-changelog":"^3.3.0","eslint":"^7.17.0","eslint-config-prettier":"^7.1.0","eslint-config-prettier-standard":"^3.0.1","eslint-config-standard":"^16.0.2","eslint-plugin-eslint-comments":"^3.2.0","eslint-plugin-import":"^2.22.1","eslint-plugin-node":"^11.1.0","eslint-plugin-prettier":"^3.3.1","eslint-plugin-promise":"^4.2.1","eslint-plugin-standard":"^5.0.0","express":"^4.17.1","express-session":"^1.17.1","gh-pages":"^3.1.0","husky":"4","lint-staged":"^10.5.4","npm-run-all":"^4.1.5","nyc":"^15.1.0","open-cli":"^6.0.1","prettier":"^2.2.1","standard-version":"^9.0.0","supertest":"^6.1.3","ts-node":"^9.0.0","typedoc":"^0.19.0","typescript":"^4.0.2"},"ava":{"failFast":true,"timeout":"60s","typescript":{"rewritePaths":{"src/":"build/main/"}},"files":["!build/module/**","!src/test/testHelper.ts"]},"config":{"commitizen":{"path":"cz-conventional-changelog"}},"prettier":{"singleQuote":true,"semi":false,"trailingComma":"es5"},"nyc":{"extends":"@istanbuljs/nyc-config-typescript","exclude":["**/*.spec.js"]},"husky":{"hooks":{"pre-commit":"lint-staged","commit-msg":"commitlint -E HUSKY_GIT_PARAMS"}},"lint-staged":{"*.{js,ts}":["eslint --fix"]},"gitHead":"a7eb47378728c0bd898de6ce4504b5f29d4d8540","homepage":"https://github.com/jdesboeufs/connect-mongo#readme","_id":"connect-mongo@4.3.1","_nodeVersion":"14.15.5","_npmVersion":"6.14.11","dist":{"integrity":"sha512-R8X9vQ3ahHLd9ZYzjKbtfnGdW/ReY6EmjJv1IOKaT3v9ZJQdV1cE6peDBoNW4Pd2XmNqOVCywvy2ov2a5/Cnsg==","shasum":"9974cf13dda1a515f06fe97c7c0c9f161882aea9","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-4.3.1.tgz","fileCount":12,"unpackedSize":92976,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgRtsOCRA9TVsSAnZWagAAdvwP/2zmPzI/A+FPV0pee8qN\nAREJOWvjUGQlJ4KCdawlZ8wXPvnmERQuaUNN38t0wPkaS5wpOkuzSyFsSskO\nPKnDmZKGgTsqMp7NaA9dEujEiRtfyQPZWDrM5crAiTCbzSRdDf/I/ifD/GuG\nOEfDIZtt7CcqsKgrIrsOj16WlTpb92BrEWqCrc/985U9ttSq7jr4yG6zWaDd\nz8uRnQhlZffYhys0Ee4MEPR9n6mBXobr14FROREjLKhSWynyRwmIzbUWNxHs\nki/Z3WSkKJVVrDBny0vyUzwksctSPwHytsjIdlqjfRNuvZut3mJ1JsDItpxH\ntMx+mG13tX5LluYx0/0k3/Lg5bLO+DBL8ohR5SiyaMMKwWWkyL9Iak/P5m7c\ntnH0re5+OdjldZj4MpFLYEv64sGZV5UjMb9vccZWvG11i6FAGsHyXVZYzoQQ\nCIsI0iDhyHoTwXNa7t5u4S56k2B+5PoNSWfuTRFpDLOWQ5RkzzOhqGaDVzD5\nHWubv7+sRKvtZeSZyYTS3mSNWbjVKbHlGHfZsi5ezwBz8GYsq2gINVG0RjOI\npSu0QCt98DUxMcunmy6DeotRGCkrkRga2kKczWd9QZg6ix4MDgTS8bxEyptX\niaRUkOMkJm0W1cZZZLyZCw22yYnnTES+v17k0Fl1HSHeLCWXHUUkvnYK4pcH\nnwnp\r\n=cu+m\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"mingchuno","email":"mingchuno@gmail.com"},"directories":{},"maintainers":[{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"},{"name":"mingchuno","email":"mingchuno@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/connect-mongo_4.3.1_1615256333676_0.6021268464729701"},"_hasShrinkwrap":false},"4.4.0-rc1":{"name":"connect-mongo","version":"4.4.0-rc1","description":"MongoDB session store for Express and Connect","main":"build/main/index.js","typings":"build/main/index.d.ts","keywords":["connect","mongo","mongodb","session","express"],"contributors":[{"name":"Casey Banner","email":"kcbanner@gmail.com"},{"name":"Jerome Desboeufs","email":"jerome.desboeufs@gmail.com"},{"name":"MC Or","email":"mingchuno@gmail.com"}],"license":"MIT","repository":{"type":"git","url":"git+https://github.com/jdesboeufs/connect-mongo.git"},"bugs":{"url":"https://github.com/jdesboeufs/connect-mongo/issues"},"scripts":{"prebuild":"rm -rf build","build":"run-p build:*","build:main":"tsc -p tsconfig.json","fix":"run-s fix:*","fix:prettier":"prettier \"src/**/*.ts\" --write","fix:lint":"eslint --cache src --ext .ts --fix","test":"run-s build test:*","test:lint":"eslint --cache src --ext .ts","test:prettier":"prettier \"src/**/*.ts\" --list-different","test:unit":"nyc ava","check-cli":"run-s test diff-integration-tests check-integration-tests","check-integration-tests":"run-s check-integration-test:*","diff-integration-tests":"mkdir -p diff && rm -rf diff/test && cp -r test diff/test && rm -rf diff/test/test-*/.git && cd diff && git init --quiet && git add -A && git commit --quiet --no-verify --allow-empty -m 'WIP' && echo '\\n\\nCommitted most recent integration test output in the \"diff\" directory. Review the changes with \"cd diff && git diff HEAD\" or your preferred git diff viewer.'","watch:build":"tsc -p tsconfig.json -w","watch:test":"nyc --silent ava --watch","cov":"run-s build test:unit cov:html cov:lcov && open-cli coverage/index.html","cov:html":"nyc report --reporter=html","cov:lcov":"nyc report --reporter=lcov","cov:send":"run-s cov:lcov && codecov","cov:check":"nyc report && nyc check-coverage","doc":"run-s doc:html && open-cli build/docs/index.html","doc:html":"typedoc src/ --exclude **/*.spec.ts --target ES6 --mode file --out build/docs","doc:json":"typedoc src/ --exclude **/*.spec.ts --target ES6 --mode file --json build/docs/typedoc.json","doc:publish":"gh-pages -m \"[ci skip] Updates\" -d build/docs","version":"standard-version","reset-hard":"git clean -dfx && git reset --hard && yarn","prepare-release":"run-s reset-hard test cov:check doc:html version doc:publish"},"engines":{"node":">=10"},"dependencies":{"debug":"^4.3.1","kruptein":"^3.0.0","mongodb":"3.6.3"},"devDependencies":{"@ava/typescript":"^1.1.1","@commitlint/cli":"^11.0.0","@commitlint/config-conventional":"^11.0.0","@istanbuljs/nyc-config-typescript":"^1.0.1","@types/express":"^4.17.9","@types/express-session":"^1.17.3","@types/mongodb":"^3.6.3","@types/node":"^14.14.20","@types/supertest":"^2.0.10","@typescript-eslint/eslint-plugin":"^4.12.0","@typescript-eslint/parser":"^4.12.0","ava":"^3.12.1","codecov":"^3.5.0","cspell":"^4.1.0","cz-conventional-changelog":"^3.3.0","eslint":"^7.17.0","eslint-config-prettier":"^7.1.0","eslint-config-prettier-standard":"^3.0.1","eslint-config-standard":"^16.0.2","eslint-plugin-eslint-comments":"^3.2.0","eslint-plugin-import":"^2.22.1","eslint-plugin-node":"^11.1.0","eslint-plugin-prettier":"^3.3.1","eslint-plugin-promise":"^4.2.1","eslint-plugin-standard":"^5.0.0","express":"^4.17.1","express-session":"^1.17.1","gh-pages":"^3.1.0","husky":"4","lint-staged":"^10.5.4","npm-run-all":"^4.1.5","nyc":"^15.1.0","open-cli":"^6.0.1","prettier":"^2.2.1","standard-version":"^9.0.0","supertest":"^6.1.3","ts-node":"^9.0.0","typedoc":"^0.19.0","typescript":"^4.0.2"},"ava":{"failFast":true,"timeout":"60s","typescript":{"rewritePaths":{"src/":"build/main/"}},"files":["!build/module/**","!src/test/testHelper.ts"]},"config":{"commitizen":{"path":"cz-conventional-changelog"}},"prettier":{"singleQuote":true,"semi":false,"trailingComma":"es5"},"nyc":{"extends":"@istanbuljs/nyc-config-typescript","exclude":["**/*.spec.js"]},"husky":{"hooks":{"pre-commit":"lint-staged","commit-msg":"commitlint -E HUSKY_GIT_PARAMS"}},"lint-staged":{"*.{js,ts}":["eslint --fix"]},"readme":"# connect-mongo\n\nMongoDB session store for [Connect](https://github.com/senchalabs/connect) and [Express](http://expressjs.com/) written in Typescript.\n\n[![npm version](https://img.shields.io/npm/v/connect-mongo.svg)](https://www.npmjs.com/package/connect-mongo)\n[![downloads](https://img.shields.io/npm/dm/connect-mongo.svg)](https://www.npmjs.com/package/connect-mongo)\n[![Sanity check](https://github.com/jdesboeufs/connect-mongo/actions/workflows/sanity.yml/badge.svg)](https://github.com/jdesboeufs/connect-mongo/actions/workflows/sanity.yml)\n[![Coverage Status](https://coveralls.io/repos/jdesboeufs/connect-mongo/badge.svg?branch=master&service=github)](https://coveralls.io/github/jdesboeufs/connect-mongo?branch=master)\n\n> Breaking change in V4 and rewritten the whole project using Typescript. Please checkout the [migration guide](MIGRATION_V4.md) and [changelog](CHANGELOG.md) for details.\n\n- [Install](#install)\n- [Compatibility](#compatibility)\n- [Usage](#usage)\n  - [Express or Connect integration](#express-or-connect-integration)\n  - [Connection to MongoDB](#connection-to-mongodb)\n- [Known issues](#known-issues)\n  - [MongoError exports circular dependency](#mongoerror-exports-circular-dependency)\n- [Events](#events)\n- [Session expiration](#session-expiration)\n- [Remove expired sessions](#remove-expired-sessions)\n  - [Set MongoDB to clean expired sessions (default mode)](#set-mongodb-to-clean-expired-sessions-default-mode)\n  - [Set the compatibility mode](#set-the-compatibility-mode)\n  - [Disable expired sessions cleaning](#disable-expired-sessions-cleaning)\n- [Lazy session update](#lazy-session-update)\n- [Transparent encryption/decryption of session data](#transparent-encryptiondecryption-of-session-data)\n- [Options](#options)\n  - [Connection-related options (required)](#connection-related-options-required)\n  - [More options](#more-options)\n  - [Crypto-related options](#crypto-related-options)\n- [Development](#development)\n  - [Example application](#example-application)\n  - [Release](#release)\n- [License](#license)\n\n## Install\n\n```\nnpm install connect-mongo\nyarn add connect-mongo\n```\n\n## Compatibility\n\n* Support Express up to `5.0`\n* Support [native MongoDB driver](http://mongodb.github.io/node-mongodb-native/) `>= 3.0`\n* Support Node.js 10, 12 and 14\n* Support [MongoDB](https://www.mongodb.com/) `3.2+`\n\nFor extended compatibility, see previous versions [v3.x](https://github.com/jdesboeufs/connect-mongo/tree/v3.x).\nBut please note that we are not maintaining v3.x anymore.\n\n## Usage\n\n### Express or Connect integration\n\nExpress `4.x`, `5.0` and Connect `3.x`:\n\n```js\nconst session = require('express-session');\nconst MongoStore = require('connect-mongo');\n\napp.use(session({\n  secret: 'foo',\n  store: MongoStore.create(options)\n}));\n```\n\n### Connection to MongoDB\n\nIn many circumstances, `connect-mongo` will not be the only part of your application which need a connection to a MongoDB database. It could be interesting to re-use an existing connection.\n\nAlternatively, you can configure `connect-mongo` to establish a new connection.\n\n#### Create a new connection from a MongoDB connection string\n\n[MongoDB connection strings](http://docs.mongodb.org/manual/reference/connection-string/) are __the best way__ to configure a new connection. For advanced usage, [more options](http://mongodb.github.io/node-mongodb-native/driver-articles/mongoclient.html#mongoclient-connect-options) can be configured with `mongoOptions` property.\n\n```js\n// Basic usage\napp.use(session({\n  store: MongoStore.create({ mongoUrl: 'mongodb://localhost/test-app' })\n}));\n\n// Advanced usage\napp.use(session({\n  store: MongoStore.create({\n    mongoUrl: 'mongodb://user12345:foobar@localhost/test-app?authSource=admin&w=1',\n    mongoOptions: advancedOptions // See below for details\n  })\n}));\n```\n\n#### Re-use an existing native MongoDB driver client promise\n\nIn this case, you just have to give your `MongoClient` instance to `connect-mongo`.\n\n```js\n/*\n** There are many ways to create MongoClient.\n** You should refer to the driver documentation.\n*/\n\n// Database name present in the connection string will be used\napp.use(session({\n  store: MongoStore.create({ clientPromise })\n}));\n\n// Explicitly specifying database name\napp.use(session({\n  store: MongoStore.create({\n    clientPromise,\n    dbName: 'test-app'\n  })\n}));\n```\n\n## Known issues\n\n[Known issues](https://github.com/jdesboeufs/connect-mongo/issues?q=is%3Aopen+is%3Aissue+label%3Abug) in GitHub Issues page.\n\n### MongoError exports circular dependency\n\nThe following error can be safely ignore from [official reply](https://developer.mongodb.com/community/forums/t/warning-accessing-non-existent-property-mongoerror-of-module-exports-inside-circular-dependency/15411/5).\n\n```\n(node:16580) Warning: Accessing non-existent property 'MongoError' of module exports inside circular dependency\n(Use `node --trace-warnings ...` to show where the warning was created)\n```\n\n## Events\n\nA `MongoStore` instance will emit the following events:\n\n| Event name | Description | Payload\n| ----- | ----- | ----- |\n| `create` | A session has been created | `sessionId` |\n| `touch` | A session has been touched (but not modified) | `sessionId` |\n| `update` | A session has been updated | `sessionId` |\n| `set` | A session has been created OR updated _(for compatibility purpose)_ | `sessionId` |\n| `destroy` | A session has been destroyed manually | `sessionId` |\n\n## Session expiration\n\nWhen the session cookie has an expiration date, `connect-mongo` will use it.\n\nOtherwise, it will create a new one, using `ttl` option.\n\n```js\napp.use(session({\n  store: MongoStore.create({\n    mongoUrl: 'mongodb://localhost/test-app',\n    ttl: 14 * 24 * 60 * 60 // = 14 days. Default\n  })\n}));\n```\n\n__Note:__ Each time an user interacts with the server, its session expiration date is refreshed.\n\n## Remove expired sessions\n\nBy default, `connect-mongo` uses MongoDB's TTL collection feature (2.2+) to have mongod automatically remove expired sessions. But you can change this behavior.\n\n### Set MongoDB to clean expired sessions (default mode)\n\n`connect-mongo` will create a TTL index for you at startup. You MUST have MongoDB 2.2+ and administration permissions.\n\n```js\napp.use(session({\n  store: MongoStore.create({\n    mongoUrl: 'mongodb://localhost/test-app',\n    autoRemove: 'native' // Default\n  })\n}));\n```\n\n__Note:__ If you use `connect-mongo` in a very concurrent environment, you should avoid this mode and prefer setting the index yourself, once!\n\n### Set the compatibility mode\n\nIn some cases you can't or don't want to create a TTL index, e.g. Azure Cosmos DB.\n\n`connect-mongo` will take care of removing expired sessions, using defined interval.\n\n```js\napp.use(session({\n  store: MongoStore.create({\n    mongoUrl: 'mongodb://localhost/test-app',\n    autoRemove: 'interval',\n    autoRemoveInterval: 10 // In minutes. Default\n  })\n}));\n```\n\n### Disable expired sessions cleaning\n\nYou are in production environnement and/or you manage the TTL index elsewhere.\n\n```js\napp.use(session({\n  store: MongoStore.create({\n    mongoUrl: 'mongodb://localhost/test-app',\n    autoRemove: 'disabled'\n  })\n}));\n```\n\n## Lazy session update\n\nIf you are using [express-session](https://github.com/expressjs/session) >= [1.10.0](https://github.com/expressjs/session/releases/tag/v1.10.0) and don't want to resave all the session on database every single time that the user refresh the page, you can lazy update the session, by limiting a period of time.\n\n```js\napp.use(express.session({\n  secret: 'keyboard cat',\n  saveUninitialized: false, // don't create session until something stored\n  resave: false, //don't save session if unmodified\n  store: MongoStore.create({\n    mongoUrl: 'mongodb://localhost/test-app',\n    touchAfter: 24 * 3600 // time period in seconds\n  })\n}));\n```\n\nby doing this, setting `touchAfter: 24 * 3600` you are saying to the session be updated only one time in a period of 24 hours, does not matter how many request's are made (with the exception of those that change something on the session data)\n\n\n## Transparent encryption/decryption of session data\n\nWhen working with sensitive session data it is [recommended](https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Session_Management_Cheat_Sheet.md) to use encryption\n\n```js\nconst store = MongoStore.create({\n  mongoUrl: 'mongodb://localhost/test-app',\n  crypto: {\n    secret: 'squirrel'\n  }\n})\n```\n\n## Options\n\n### Connection-related options (required)\n\nOne of the following options should be provided. If more than one option are provided, each option will take precedence over others according to priority.\n\n|Priority|Option|Description|\n|:------:|------|-----------|\n|1|`mongoUrl`|A [connection string](https://docs.mongodb.com/manual/reference/connection-string/) for creating a new MongoClient connection. If database name is not present in the connection string, database name should be provided using `dbName` option. |\n|2|`clientPromise`|A Promise that is resolved with MongoClient connection. If the connection was established without database name being present in the connection string, database name should be provided using `dbName` option.|\n|3|`client`|An existing MongoClient connection. If the connection was established without database name being present in the connection string, database name should be provided using `dbName` option.|\n\n### More options\n\n|Option|Default|Description|\n|------|:-----:|-----------|\n|`mongoOptions`|`{ useUnifiedTopology: true }`|Options object for [`MongoClient.connect()`](https://mongodb.github.io/node-mongodb-native/3.3/api/MongoClient.html#.connect) method. Can be used with `mongoUrl` option.|\n|`dbName`||A name of database used for storing sessions. Can be used with `mongoUrl`, or `clientPromise` options. Takes precedence over database name present in the connection string.|\n|`collectionName`|`'sessions'`|A name of collection used for storing sessions.|\n|`ttl`|`1209600`|The maximum lifetime (in seconds) of the session which will be used to set `session.cookie.expires` if it is not yet set. Default is 14 days.|\n|`autoRemove`|`'native'`|Behavior for removing expired sessions. Possible values: `'native'`, `'interval'` and `'disabled'`.|\n|`autoRemoveInterval`|`10`|Interval (in minutes) used when `autoRemove` option is set to `interval`.|\n|`touchAfter`|`0`|Interval (in seconds) between session updates.|\n|`stringify`|`true`|If `true`, connect-mongo will serialize sessions using `JSON.stringify` before setting them, and deserialize them with `JSON.parse` when getting them. This is useful if you are using types that MongoDB doesn't support.|\n|`serialize`||Custom hook for serializing sessions to MongoDB. This is helpful if you need to modify the session before writing it out.|\n|`unserialize`||Custom hook for unserializing sessions from MongoDB. This can be used in scenarios where you need to support different types of serializations (e.g., objects and JSON strings) or need to modify the session before using it in your app.|\n|`writeOperationOptions`||Options object to pass to every MongoDB write operation call that supports it (e.g. `update`, `remove`). Useful for adjusting the write concern. Only exception: If `autoRemove` is set to `'interval'`, the write concern from the `writeOperationOptions` object will get overwritten.|\n|`transformId`||Transform original `sessionId` in whatever you want to use as storage key.|\n|`crypto`||Crypto related options. See below.|\n\n### Crypto-related options\n\n|Option|Default|Description|\n|------|:-----:|-----------|\n|`secret`|`false`|Enables transparent crypto in accordance with [OWASP session management recommendations](https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Session_Management_Cheat_Sheet.md).|\n|`algorithm`|`'aes-256-gcm'`|Allows for changes to the default symmetric encryption cipher. See [`crypto.getCiphers()`](https://nodejs.org/api/crypto.html#crypto_crypto_getciphers) for supported algorithms.|\n|`hashing`|`'sha512'`|May be used to change the default hashing algorithm. See [`crypto.getHashes()`](https://nodejs.org/api/crypto.html#crypto_crypto_gethashes) for supported hashing algorithms.|\n|`encodeas`|`'hex'`|Specify to change the session data cipher text encoding.|\n|`key_size`|`32`|When using varying algorithms the key size may be used. Default value `32` is based on the `AES` blocksize.|\n|`iv_size`|`16`|This can be used to adjust the default [IV](https://csrc.nist.gov/glossary/term/IV) size if a different algorithm requires a different size.|\n|`at_size`|`16`|When using newer `AES` modes such as the default `GCM` or `CCM` an authentication tag size can be defined.|\n\n## Development\n\n```\nyarn install\ndocker-compose up -d\n# Run these 2 lines in 2 shell\nyarn watch:build\nyarn watch:test\n```\n\n### Example application\n\n```\nyarn link\ncd example\nyarn link \"connect-mongo\"\nyarn install\nyarn start\n```\n\n### Release\n\nSince I cannot access the setting page. I can only do it manually.\n\n1. Bump version, update `CHANGELOG.md` and README. Commit and push.\n2. Run `yarn build && yarn test && npm publish`\n3. `git tag vX.Y.Z && git push --tags`\n\n## License\n\nThe MIT License\n","readmeFilename":"README.md","gitHead":"b91973c83dcad8d76f54582a13356a594aad296e","homepage":"https://github.com/jdesboeufs/connect-mongo#readme","_id":"connect-mongo@4.4.0-rc1","_nodeVersion":"14.15.5","_npmVersion":"6.14.11","dist":{"integrity":"sha512-XQPg5OjH6YVuBC2SltyCTKTH3qNPkIX1D+ANsVWIM9z14me7wna2A0Byf5tY5tjYT7h8mMV7He5wdLCm3U25gw==","shasum":"ec61007e06d8dbcf832a2314d3ff64fa9404963b","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-4.4.0-rc1.tgz","fileCount":8,"unpackedSize":60911,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgSaRYCRA9TVsSAnZWagAAz5oP/3wBm4hkcSl6fse/pjdK\nPZqEJ8Hl7hMweVq9WyOP4QR44PcCOcS6PO0VHE2U5u4Fo26tACFgsUVHpe6a\nJRlEPviFYgNa1r2xXwZGitIrICCQmVxKlGFs2g6h6126XRDLCdDvfe5yHQUY\nFTeh/hmNZuiaZhoXFvmCc2k3bWdXBx0/SOHOaUipy13bVhuOgy+YMA2k3rJc\nIXKXtvap7UrBAlmAW2I+tRUBU59Wr/nxpWHiDZrGSwPuq3WLidsg3DNzGtZ7\n32koRTneScWG5ntGKDKVVRb+Cfr/fgLGe5LahQogUkL14Apx4tFMGUiheMQX\nrsdIfP5G+PjShkiG8I5oS8yzf6V3F9IoVWi1wQQsTxgOW69eS8M35Vyfq4/1\nbl0vAussQfzFGP4UZdn8xeg8cVz++CV91YsjFum2SBV1Qgh7fD6nsrSajD+i\nvZPyDTJeyDG1DjW6oTeNEBw8y6GZWZI0NonQy+CBKDq5fOYfPOfZKH3fuOsP\nwxCBxDm6+RSgCJRicSJ9DydOCUZXGFAJabFjPCNWtmEv7hnxUwwmXQ6pRkG4\nLk7qPL9MEbPW0gPl6j7hgLWz0Hl7NiMlZgp1O95V51spY2jBtoN3p83/zoPG\n5+XtSJVbt+xPPELP7xKxsE0kgQfYcYbKpZ9dwPTwjSIqe+mR7m5mRVZ9BVoj\nsFtc\r\n=oeqM\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"mingchuno","email":"mingchuno@gmail.com"},"directories":{},"maintainers":[{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"},{"name":"mingchuno","email":"mingchuno@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/connect-mongo_4.4.0-rc1_1615438936217_0.2645168547446035"},"_hasShrinkwrap":false},"4.4.0":{"name":"connect-mongo","version":"4.4.0","description":"MongoDB session store for Express and Connect","main":"build/main/index.js","typings":"build/main/index.d.ts","keywords":["connect","mongo","mongodb","session","express"],"contributors":[{"name":"Casey Banner","email":"kcbanner@gmail.com"},{"name":"Jerome Desboeufs","email":"jerome.desboeufs@gmail.com"},{"name":"MC Or","email":"mingchuno@gmail.com"}],"license":"MIT","repository":{"type":"git","url":"git+https://github.com/jdesboeufs/connect-mongo.git"},"bugs":{"url":"https://github.com/jdesboeufs/connect-mongo/issues"},"scripts":{"prebuild":"rm -rf build","build":"run-p build:*","build:main":"tsc -p tsconfig.json","fix":"run-s fix:*","fix:prettier":"prettier \"src/**/*.ts\" --write","fix:lint":"eslint --cache src --ext .ts --fix","test":"run-s build test:*","test:lint":"eslint --cache src --ext .ts","test:prettier":"prettier \"src/**/*.ts\" --list-different","test:unit":"nyc ava","check-cli":"run-s test diff-integration-tests check-integration-tests","check-integration-tests":"run-s check-integration-test:*","diff-integration-tests":"mkdir -p diff && rm -rf diff/test && cp -r test diff/test && rm -rf diff/test/test-*/.git && cd diff && git init --quiet && git add -A && git commit --quiet --no-verify --allow-empty -m 'WIP' && echo '\\n\\nCommitted most recent integration test output in the \"diff\" directory. Review the changes with \"cd diff && git diff HEAD\" or your preferred git diff viewer.'","watch:build":"tsc -p tsconfig.json -w","watch:test":"nyc --silent ava --watch","cov":"run-s build test:unit cov:html cov:lcov && open-cli coverage/index.html","cov:html":"nyc report --reporter=html","cov:lcov":"nyc report --reporter=lcov","cov:send":"run-s cov:lcov && codecov","cov:check":"nyc report && nyc check-coverage","doc":"run-s doc:html && open-cli build/docs/index.html","doc:html":"typedoc src/ --exclude **/*.spec.ts --target ES6 --mode file --out build/docs","doc:json":"typedoc src/ --exclude **/*.spec.ts --target ES6 --mode file --json build/docs/typedoc.json","doc:publish":"gh-pages -m \"[ci skip] Updates\" -d build/docs","version":"standard-version","reset-hard":"git clean -dfx && git reset --hard && yarn","prepare-release":"run-s reset-hard test cov:check doc:html version doc:publish"},"engines":{"node":">=10"},"dependencies":{"debug":"^4.3.1","kruptein":"^3.0.0","mongodb":"3.6.3"},"devDependencies":{"@ava/typescript":"^1.1.1","@commitlint/cli":"^11.0.0","@commitlint/config-conventional":"^11.0.0","@istanbuljs/nyc-config-typescript":"^1.0.1","@types/express":"^4.17.9","@types/express-session":"^1.17.3","@types/mongodb":"^3.6.3","@types/node":"^14.14.20","@types/supertest":"^2.0.10","@typescript-eslint/eslint-plugin":"^4.12.0","@typescript-eslint/parser":"^4.12.0","ava":"^3.12.1","codecov":"^3.5.0","cspell":"^4.1.0","cz-conventional-changelog":"^3.3.0","eslint":"^7.17.0","eslint-config-prettier":"^7.1.0","eslint-config-prettier-standard":"^3.0.1","eslint-config-standard":"^16.0.2","eslint-plugin-eslint-comments":"^3.2.0","eslint-plugin-import":"^2.22.1","eslint-plugin-node":"^11.1.0","eslint-plugin-prettier":"^3.3.1","eslint-plugin-promise":"^4.2.1","eslint-plugin-standard":"^5.0.0","express":"^4.17.1","express-session":"^1.17.1","gh-pages":"^3.1.0","husky":"4","lint-staged":"^10.5.4","npm-run-all":"^4.1.5","nyc":"^15.1.0","open-cli":"^6.0.1","prettier":"^2.2.1","standard-version":"^9.0.0","supertest":"^6.1.3","ts-node":"^9.0.0","typedoc":"^0.19.0","typescript":"^4.0.2"},"ava":{"failFast":true,"timeout":"60s","typescript":{"rewritePaths":{"src/":"build/main/"}},"files":["!build/module/**","!src/test/testHelper.ts"]},"config":{"commitizen":{"path":"cz-conventional-changelog"}},"prettier":{"singleQuote":true,"semi":false,"trailingComma":"es5"},"nyc":{"extends":"@istanbuljs/nyc-config-typescript","exclude":["**/*.spec.js"]},"husky":{"hooks":{"pre-commit":"lint-staged","commit-msg":"commitlint -E HUSKY_GIT_PARAMS"}},"lint-staged":{"*.{js,ts}":["eslint --fix"]},"gitHead":"93be37d4a32c56db17d969ca10d97fb51fb226e1","homepage":"https://github.com/jdesboeufs/connect-mongo#readme","_id":"connect-mongo@4.4.0","_nodeVersion":"14.15.5","_npmVersion":"6.14.11","dist":{"integrity":"sha512-TTv9SUeLazm7eAvrzDfcIbiRcgeK8Dhif6XLDxnL41S3/1+EtFUgdI+kx6lcZtEdobMY/ehLWtJ6+WTXtsQDvg==","shasum":"08b3deaadcd2b27c9f154784f8ff697d1ca3681b","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-4.4.0.tgz","fileCount":8,"unpackedSize":61306,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgSaZ3CRA9TVsSAnZWagAA0a8P/2FCpBjp22V7YSInIzp0\nKI/0/dzChwq1J6ZaIf9SYxU0VD+VJjKT3Tm1i8c7WssVJ4IQ0ld71bEnzvm7\nLJOJDSj1ZOn3JKR+TtMbfy/3f9UlK64ZokR22EYZ0ONm27q0Fq2zzTCpMldw\nHp/fUbNam3KxVtBPK8jNGOhRgABiuHzd3DHQvnzKtgp5VzMzPdP9AtAXXCMF\nVsemst0FoNLOAG4EainJs6Q22xMrjsSTQC62tVyeJtuh0iM7KfO5vfndTfYp\nqvAbuW8wh50ACDk/h8VaEpxMUpwZTqKY96rM0Ppt5x4UBgPG06bp61b17Fbc\neQaePyccNXRW81YU66FK+IfXetEsUAlMaXdx9pj0RyZfxi1GZ73QK3cq3fZr\nVokaNWWRXpSJT/vwZn0+ZAzsCY45OcKYYiyQ1s3UGXF1bYgEp5+tEj1NoQv+\nRD7HRzigGj6fy7uVvWnQHXeFZUhbjGxHAAeyhDLUdfVZeU/fdmsxepmuHzGZ\nqfcscPjf3S+Tu/0ltBjswYnS3cSgTowdAO8w1JkRRXiUVXS/RQgM6+4jm0Rx\nw6bIrzzkOadP/t3Ea95PePn9TPKcooNJ7emoJ1uZShOHrgLYpPGMxPCELNBj\nKB0SbgJ/o+hY4tPvN59lg08kZF5KfhA7s7QhpNYpBqD2iS7WoQa+LlwLTIVf\n+eII\r\n=806d\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"mingchuno","email":"mingchuno@gmail.com"},"directories":{},"maintainers":[{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"},{"name":"mingchuno","email":"mingchuno@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/connect-mongo_4.4.0_1615439479447_0.8865157897707379"},"_hasShrinkwrap":false},"4.4.1":{"name":"connect-mongo","version":"4.4.1","description":"MongoDB session store for Express and Connect","main":"build/main/index.js","typings":"build/main/index.d.ts","keywords":["connect","mongo","mongodb","session","express"],"contributors":[{"name":"Casey Banner","email":"kcbanner@gmail.com"},{"name":"Jerome Desboeufs","email":"jerome.desboeufs@gmail.com"},{"name":"MC Or","email":"mingchuno@gmail.com"}],"license":"MIT","repository":{"type":"git","url":"git+https://github.com/jdesboeufs/connect-mongo.git"},"bugs":{"url":"https://github.com/jdesboeufs/connect-mongo/issues"},"scripts":{"prebuild":"rm -rf build","build":"run-p build:*","build:main":"tsc -p tsconfig.json","fix":"run-s fix:*","fix:prettier":"prettier \"src/**/*.ts\" --write","fix:lint":"eslint --cache src --ext .ts --fix","test":"run-s build test:*","test:lint":"eslint --cache src --ext .ts","test:prettier":"prettier \"src/**/*.ts\" --list-different","test:unit":"nyc ava","check-cli":"run-s test diff-integration-tests check-integration-tests","check-integration-tests":"run-s check-integration-test:*","diff-integration-tests":"mkdir -p diff && rm -rf diff/test && cp -r test diff/test && rm -rf diff/test/test-*/.git && cd diff && git init --quiet && git add -A && git commit --quiet --no-verify --allow-empty -m 'WIP' && echo '\\n\\nCommitted most recent integration test output in the \"diff\" directory. Review the changes with \"cd diff && git diff HEAD\" or your preferred git diff viewer.'","watch:build":"tsc -p tsconfig.json -w","watch:test":"nyc --silent ava --watch","cov":"run-s build test:unit cov:html cov:lcov && open-cli coverage/index.html","cov:html":"nyc report --reporter=html","cov:lcov":"nyc report --reporter=lcov","cov:send":"run-s cov:lcov && codecov","cov:check":"nyc report && nyc check-coverage","doc":"run-s doc:html && open-cli build/docs/index.html","doc:html":"typedoc src/ --exclude **/*.spec.ts --target ES6 --mode file --out build/docs","doc:json":"typedoc src/ --exclude **/*.spec.ts --target ES6 --mode file --json build/docs/typedoc.json","doc:publish":"gh-pages -m \"[ci skip] Updates\" -d build/docs","version":"standard-version","reset-hard":"git clean -dfx && git reset --hard && yarn","prepare-release":"run-s reset-hard test cov:check doc:html version doc:publish"},"engines":{"node":">=10"},"dependencies":{"debug":"^4.3.1","kruptein":"^3.0.0","mongodb":"3.6.5"},"devDependencies":{"@ava/typescript":"^1.1.1","@commitlint/cli":"^11.0.0","@commitlint/config-conventional":"^11.0.0","@istanbuljs/nyc-config-typescript":"^1.0.1","@types/express":"^4.17.9","@types/express-session":"^1.17.3","@types/mongodb":"^3.6.3","@types/node":"^14.14.20","@types/supertest":"^2.0.10","@typescript-eslint/eslint-plugin":"^4.12.0","@typescript-eslint/parser":"^4.12.0","ava":"^3.12.1","codecov":"^3.5.0","cspell":"^4.1.0","cz-conventional-changelog":"^3.3.0","eslint":"^7.17.0","eslint-config-prettier":"^7.1.0","eslint-config-prettier-standard":"^3.0.1","eslint-config-standard":"^16.0.2","eslint-plugin-eslint-comments":"^3.2.0","eslint-plugin-import":"^2.22.1","eslint-plugin-node":"^11.1.0","eslint-plugin-prettier":"^3.3.1","eslint-plugin-promise":"^4.2.1","eslint-plugin-standard":"^5.0.0","express":"^4.17.1","express-session":"^1.17.1","gh-pages":"^3.1.0","husky":"4","lint-staged":"^10.5.4","npm-run-all":"^4.1.5","nyc":"^15.1.0","open-cli":"^6.0.1","prettier":"^2.2.1","standard-version":"^9.0.0","supertest":"^6.1.3","ts-node":"^9.0.0","typedoc":"^0.19.0","typescript":"^4.0.2"},"ava":{"failFast":true,"timeout":"60s","typescript":{"rewritePaths":{"src/":"build/main/"}},"files":["!build/module/**","!src/test/testHelper.ts"]},"config":{"commitizen":{"path":"cz-conventional-changelog"}},"prettier":{"singleQuote":true,"semi":false,"trailingComma":"es5"},"nyc":{"extends":"@istanbuljs/nyc-config-typescript","exclude":["**/*.spec.js"]},"husky":{"hooks":{"pre-commit":"lint-staged","commit-msg":"commitlint -E HUSKY_GIT_PARAMS"}},"lint-staged":{"*.{js,ts}":["eslint --fix"]},"gitHead":"6ba9af7978b5a745a501ab7faf55d1d563d876c9","homepage":"https://github.com/jdesboeufs/connect-mongo#readme","_id":"connect-mongo@4.4.1","_nodeVersion":"14.15.5","_npmVersion":"6.14.11","dist":{"integrity":"sha512-I1QUE2tSGPtIBDAL2sFqUEPspDeJOR0u4g+N41ARJZk958pncu2PBG48Ev++fnldljobpIfdafak7hSlPYarvA==","shasum":"b817f97940539b46c9116e92cf2f344c120fae7d","tarball":"https://registry.npmjs.org/connect-mongo/-/connect-mongo-4.4.1.tgz","fileCount":8,"unpackedSize":62693,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgWXOyCRA9TVsSAnZWagAAJDcP/iRlmYDbekbbw+nVB7LC\nwInt0xDsEYDWxuCX+RIhJDAzE3Ep6/Qe9qfJV2NFwi6F/jmIS56xUQRBDouH\nzYvrcSIhPODjc2dkAKJGZkoBDY/9vtMLYinHf+61M2JaBblRPaH7MRRqQDgg\nKRXIXn3n43qOz56pOOF4AS9jUDd64vn74c/fJdxHPKSpAnlori6kmiEapBaM\nAHz/I9r84YxbplR5uClxsit0EfASpRu0Jera5q55+yZq9nutY+xHuhNTz0dl\npRS2uzt7QTme0uD0xcuYwOAxLmr2ysdCiZruFAzefS4FVAuVzMoLvroITUx/\n975TE7D/jFScPwod3I7DRBqWI3Lbj94/zvgZaX0bTWT6vP7FH9e9iboO9dYi\nD2cU6LqRJRxKfJXGt1pL4zp7X18AVNXXHxhuE9ajGE4NWYVkS/lrva0z8yHu\nbYeqCAUOrVHnj6D0ey7t4vvDolBDTxegE4MegNDScE+mRnRA657WTsRqkvMt\nR2hZEOWVK+DKH62iie4IE4uirYcueYpl1O47ETg0a0nB7N5By3mciedy03Oh\n413x7Q35m1ijAplguXAYjZlX3VGVYytzM0jsT2qBXtiIRkvJmmcANoRsBOpT\nYU7bddzlFMcaOVLV12LzMwCwpKXsNQg32rk4miAbwHuYkegDLrodubwYgHLb\nw/zq\r\n=xOi7\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"mingchuno","email":"mingchuno@gmail.com"},"directories":{},"maintainers":[{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"},{"name":"mingchuno","email":"mingchuno@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/connect-mongo_4.4.1_1616475058315_0.9476896156444055"},"_hasShrinkwrap":false}},"maintainers":[{"name":"jdesboeufs","email":"jerome.desboeufs@gmail.com"},{"name":"mingchuno","email":"mingchuno@gmail.com"}],"time":{"modified":"2021-03-23T04:51:00.749Z","created":"2011-03-08T05:36:36.406Z","0.1.0":"2011-03-08T05:36:36.605Z","0.1.1":"2011-03-18T01:01:09.965Z","0.1.2":"2011-05-18T02:09:51.633Z","0.1.3":"2011-06-28T21:50:29.520Z","0.1.4":"2011-06-29T04:15:34.515Z","0.1.5":"2011-07-08T01:42:40.255Z","0.1.6":"2011-12-14T18:37:08.042Z","0.1.7":"2012-01-11T16:41:54.691Z","0.1.8":"2012-04-14T17:53:10.793Z","0.1.9":"2012-04-14T19:25:34.663Z","0.2.0":"2012-09-09T22:12:23.216Z","0.3.0":"2013-01-20T22:45:47.683Z","0.3.1":"2013-01-21T14:37:51.052Z","0.3.2":"2013-01-21T15:00:43.971Z","0.3.3":"2013-07-05T04:31:51.201Z","0.4.0":"2013-11-09T03:52:30.767Z","0.4.1":"2014-05-02T13:18:48.320Z","0.4.2":"2014-12-18T11:10:23.243Z","0.5.0":"2014-12-25T17:49:49.008Z","0.5.1":"2014-12-28T16:51:00.328Z","0.5.2":"2014-12-29T15:41:01.984Z","0.5.3":"2014-12-30T22:33:19.557Z","0.6.0":"2015-01-12T21:37:15.669Z","0.7.0":"2015-01-24T13:55:46.392Z","0.8.0":"2015-03-24T21:08:43.832Z","0.8.1":"2015-04-21T20:29:16.514Z","0.8.2":"2015-07-14T15:24:05.128Z","1.0.0-beta":"2015-07-17T12:47:35.020Z","1.0.0-beta.1":"2015-07-17T12:53:53.279Z","1.0.0":"2015-12-17T16:53:12.381Z","1.0.1":"2015-12-17T19:55:02.768Z","1.0.2":"2015-12-18T10:09:33.931Z","1.1.0":"2015-12-24T10:39:18.009Z","1.2.0":"2016-05-13T20:42:56.783Z","1.2.1":"2016-06-20T21:25:29.690Z","1.3.0":"2016-07-23T16:22:16.822Z","1.3.1":"2016-07-23T16:47:13.395Z","1.3.2":"2016-07-27T09:59:00.478Z","2.0.0":"2017-10-09T00:07:00.180Z","2.0.1":"2018-01-04T11:56:45.909Z","2.0.2":"2018-11-20T20:44:55.736Z","2.0.3":"2018-12-03T09:48:00.335Z","3.0.0-rc.1":"2019-06-15T08:47:12.747Z","3.0.0-rc.2":"2019-06-15T15:13:35.422Z","3.0.0":"2019-06-17T08:16:20.377Z","3.1.0":"2019-10-23T15:16:00.988Z","3.1.1":"2019-10-29T16:11:14.256Z","3.1.2":"2019-11-01T07:38:56.509Z","3.2.0":"2019-11-28T17:24:51.937Z","4.0.0":"2021-02-21T13:30:21.575Z","4.0.0-rc1":"2021-02-21T13:32:04.293Z","4.0.0-rc2":"2021-02-21T13:33:28.629Z","4.1.0-rc1":"2021-02-22T09:27:16.995Z","4.1.0":"2021-02-22T09:33:15.637Z","4.2.0-rc1":"2021-02-23T03:06:46.842Z","4.2.0-rc2":"2021-02-23T10:24:22.949Z","4.2.0":"2021-02-24T03:29:40.953Z","4.2.1":"2021-03-02T02:56:29.142Z","4.2.2":"2021-03-02T03:00:23.649Z","4.3.0":"2021-03-08T03:24:12.511Z","4.3.1":"2021-03-09T02:18:53.909Z","4.4.0-rc1":"2021-03-11T05:02:16.365Z","4.4.0":"2021-03-11T05:11:19.635Z","4.4.1":"2021-03-23T04:50:58.459Z"},"users":{"troygoode":true,"ljharb":true,"tmaximini":true,"pana":true,"davidhalldor":true,"qiuzuhui":true,"mr.raindrop":true,"mswanson1524":true,"franck.lahaye":true,"rickhuizinga":true,"dlpowless":true,"maxidev":true,"santihbc":true,"j3kz":true,"leonning":true,"awzm":true,"jimster305":true,"flyslow":true,"nhutle":true,"qqqppp9998":true,"sanketss84":true,"tomasy":true,"fazil":true,"nikitka_m":true,"koslun":true,"jota":true,"52u":true,"akic4op4":true,"crazyjingling":true,"dereklakin":true,"kolomiichenko":true,"laurentknauss":true,"windhamdavid":true,"elessarkrin":true,"zhiquan.yu":true,"richardcfelix":true,"iroc":true,"snowdream":true,"wut":true,"calmwinds":true,"antjw":true,"wangnan0610":true,"animustechnology":true,"algonzo":true,"hyteer":true,"bushuai":true,"meta-d":true,"philiiiiiipp":true,"clisun":true,"samlaudev":true,"hiu_yan_chong":true,"krobing":true,"icerainnuaa":true,"hugovila":true,"akod3vs":true,"rafalt":true,"ymk":true,"xiaochao":true,"vchouhan":true,"leshik":true,"ghostcode521":true,"darklake":true,"khurshedyu":true,"hibrahimsafak":true,"petersong":true,"langri-sha":true,"mhaidarh":true,"rwaness":true,"ww522413622":true,"ambdxtrch":true,"chirag8642":true,"iseif":true,"evdokimovm":true,"escapeimagery":true,"panlw":true,"xfloops":true,"yong_a":true,"xngiser":true,"thomas.li":true,"hecto932":true,"haihepeng":true,"tomchao":true,"dmitr":true,"nazhmik":true,"edwardxyt":true,"ivan.marquez":true,"rethinkflash":true,"dpjayasekara":true,"gbits":true,"asfrom30":true,"superchenney":true,"wozhizui":true,"themadjoker":true,"johnsmithcoder":true,"blakeredwolf":true,"rascalquan":true,"markh817":true,"he313572052":true,"obsessiveprogrammer":true,"71emj1":true,"jk0":true,"edmondnow":true,"jps78":true,"william_an2000":true,"beytek":true},"repository":{"type":"git","url":"git+https://github.com/jdesboeufs/connect-mongo.git"},"readme":"# connect-mongo\n\nMongoDB session store for [Connect](https://github.com/senchalabs/connect) and [Express](http://expressjs.com/) written in Typescript.\n\n[![npm version](https://img.shields.io/npm/v/connect-mongo.svg)](https://www.npmjs.com/package/connect-mongo)\n[![downloads](https://img.shields.io/npm/dm/connect-mongo.svg)](https://www.npmjs.com/package/connect-mongo)\n[![Sanity check](https://github.com/jdesboeufs/connect-mongo/actions/workflows/sanity.yml/badge.svg)](https://github.com/jdesboeufs/connect-mongo/actions/workflows/sanity.yml)\n[![Coverage Status](https://coveralls.io/repos/jdesboeufs/connect-mongo/badge.svg?branch=master&service=github)](https://coveralls.io/github/jdesboeufs/connect-mongo?branch=master)\n\n> Breaking change in V4 and rewritten the whole project using Typescript. Please checkout the [migration guide](MIGRATION_V4.md) and [changelog](CHANGELOG.md) for details.\n\n- [Install](#install)\n- [Compatibility](#compatibility)\n- [Usage](#usage)\n  - [Express or Connect integration](#express-or-connect-integration)\n  - [Connection to MongoDB](#connection-to-mongodb)\n- [Known issues](#known-issues)\n  - [MongoError exports circular dependency](#mongoerror-exports-circular-dependency)\n- [Events](#events)\n- [Session expiration](#session-expiration)\n- [Remove expired sessions](#remove-expired-sessions)\n  - [Set MongoDB to clean expired sessions (default mode)](#set-mongodb-to-clean-expired-sessions-default-mode)\n  - [Set the compatibility mode](#set-the-compatibility-mode)\n  - [Disable expired sessions cleaning](#disable-expired-sessions-cleaning)\n- [Lazy session update](#lazy-session-update)\n- [Transparent encryption/decryption of session data](#transparent-encryptiondecryption-of-session-data)\n- [Options](#options)\n  - [Connection-related options (required)](#connection-related-options-required)\n  - [More options](#more-options)\n  - [Crypto-related options](#crypto-related-options)\n- [Development](#development)\n  - [Example application](#example-application)\n  - [Release](#release)\n- [License](#license)\n\n## Install\n\n```\nnpm install connect-mongo\nyarn add connect-mongo\n```\n\n* If you are upgrading from v3.x to v4, please checkout the [migration guide](./MIGRATION_V4.md) for details.\n* If you are upgrading v4.x to latest version, you may check the [example](./example) and [options](#options) for details.\n\n## Compatibility\n\n* Support Express up to `5.0`\n* Support [native MongoDB driver](http://mongodb.github.io/node-mongodb-native/) `>= 3.0`\n* Support Node.js 10, 12 and 14\n* Support [MongoDB](https://www.mongodb.com/) `3.2+`\n\nFor extended compatibility, see previous versions [v3.x](https://github.com/jdesboeufs/connect-mongo/tree/v3.x).\nBut please note that we are not maintaining v3.x anymore.\n\n## Usage\n\n### Express or Connect integration\n\nExpress `4.x`, `5.0` and Connect `3.x`:\n\n```js\nconst session = require('express-session');\nconst MongoStore = require('connect-mongo');\n\napp.use(session({\n  secret: 'foo',\n  store: MongoStore.create(options)\n}));\n```\n\n```ts\nimport session from 'express-session'\nimport MongoStore from 'connect-mongo'\n\napp.use(session({\n  secret: 'foo',\n  store: MongoStore.create(options)\n}));\n```\n\n### Connection to MongoDB\n\nIn many circumstances, `connect-mongo` will not be the only part of your application which need a connection to a MongoDB database. It could be interesting to re-use an existing connection.\n\nAlternatively, you can configure `connect-mongo` to establish a new connection.\n\n#### Create a new connection from a MongoDB connection string\n\n[MongoDB connection strings](http://docs.mongodb.org/manual/reference/connection-string/) are __the best way__ to configure a new connection. For advanced usage, [more options](http://mongodb.github.io/node-mongodb-native/driver-articles/mongoclient.html#mongoclient-connect-options) can be configured with `mongoOptions` property.\n\n```js\n// Basic usage\napp.use(session({\n  store: MongoStore.create({ mongoUrl: 'mongodb://localhost/test-app' })\n}));\n\n// Advanced usage\napp.use(session({\n  store: MongoStore.create({\n    mongoUrl: 'mongodb://user12345:foobar@localhost/test-app?authSource=admin&w=1',\n    mongoOptions: advancedOptions // See below for details\n  })\n}));\n```\n\n#### Re-use an existing native MongoDB driver client promise\n\nIn this case, you just have to give your `MongoClient` instance to `connect-mongo`.\n\n```js\n/*\n** There are many ways to create MongoClient.\n** You should refer to the driver documentation.\n*/\n\n// Database name present in the connection string will be used\napp.use(session({\n  store: MongoStore.create({ clientPromise })\n}));\n\n// Explicitly specifying database name\napp.use(session({\n  store: MongoStore.create({\n    clientPromise,\n    dbName: 'test-app'\n  })\n}));\n```\n\n## Known issues\n\n[Known issues](https://github.com/jdesboeufs/connect-mongo/issues?q=is%3Aopen+is%3Aissue+label%3Abug) in GitHub Issues page.\n\n### MongoError exports circular dependency\n\nThe following error can be safely ignore from [official reply](https://developer.mongodb.com/community/forums/t/warning-accessing-non-existent-property-mongoerror-of-module-exports-inside-circular-dependency/15411/5).\n\n```\n(node:16580) Warning: Accessing non-existent property 'MongoError' of module exports inside circular dependency\n(Use `node --trace-warnings ...` to show where the warning was created)\n```\n\n## Events\n\nA `MongoStore` instance will emit the following events:\n\n| Event name | Description | Payload\n| ----- | ----- | ----- |\n| `create` | A session has been created | `sessionId` |\n| `touch` | A session has been touched (but not modified) | `sessionId` |\n| `update` | A session has been updated | `sessionId` |\n| `set` | A session has been created OR updated _(for compatibility purpose)_ | `sessionId` |\n| `destroy` | A session has been destroyed manually | `sessionId` |\n\n## Session expiration\n\nWhen the session cookie has an expiration date, `connect-mongo` will use it.\n\nOtherwise, it will create a new one, using `ttl` option.\n\n```js\napp.use(session({\n  store: MongoStore.create({\n    mongoUrl: 'mongodb://localhost/test-app',\n    ttl: 14 * 24 * 60 * 60 // = 14 days. Default\n  })\n}));\n```\n\n__Note:__ Each time an user interacts with the server, its session expiration date is refreshed.\n\n## Remove expired sessions\n\nBy default, `connect-mongo` uses MongoDB's TTL collection feature (2.2+) to have mongod automatically remove expired sessions. But you can change this behavior.\n\n### Set MongoDB to clean expired sessions (default mode)\n\n`connect-mongo` will create a TTL index for you at startup. You MUST have MongoDB 2.2+ and administration permissions.\n\n```js\napp.use(session({\n  store: MongoStore.create({\n    mongoUrl: 'mongodb://localhost/test-app',\n    autoRemove: 'native' // Default\n  })\n}));\n```\n\n__Note:__ If you use `connect-mongo` in a very concurrent environment, you should avoid this mode and prefer setting the index yourself, once!\n\n### Set the compatibility mode\n\nIn some cases you can't or don't want to create a TTL index, e.g. Azure Cosmos DB.\n\n`connect-mongo` will take care of removing expired sessions, using defined interval.\n\n```js\napp.use(session({\n  store: MongoStore.create({\n    mongoUrl: 'mongodb://localhost/test-app',\n    autoRemove: 'interval',\n    autoRemoveInterval: 10 // In minutes. Default\n  })\n}));\n```\n\n### Disable expired sessions cleaning\n\nYou are in production environnement and/or you manage the TTL index elsewhere.\n\n```js\napp.use(session({\n  store: MongoStore.create({\n    mongoUrl: 'mongodb://localhost/test-app',\n    autoRemove: 'disabled'\n  })\n}));\n```\n\n## Lazy session update\n\nIf you are using [express-session](https://github.com/expressjs/session) >= [1.10.0](https://github.com/expressjs/session/releases/tag/v1.10.0) and don't want to resave all the session on database every single time that the user refresh the page, you can lazy update the session, by limiting a period of time.\n\n```js\napp.use(express.session({\n  secret: 'keyboard cat',\n  saveUninitialized: false, // don't create session until something stored\n  resave: false, //don't save session if unmodified\n  store: MongoStore.create({\n    mongoUrl: 'mongodb://localhost/test-app',\n    touchAfter: 24 * 3600 // time period in seconds\n  })\n}));\n```\n\nby doing this, setting `touchAfter: 24 * 3600` you are saying to the session be updated only one time in a period of 24 hours, does not matter how many request's are made (with the exception of those that change something on the session data)\n\n\n## Transparent encryption/decryption of session data\n\nWhen working with sensitive session data it is [recommended](https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Session_Management_Cheat_Sheet.md) to use encryption\n\n```js\nconst store = MongoStore.create({\n  mongoUrl: 'mongodb://localhost/test-app',\n  crypto: {\n    secret: 'squirrel'\n  }\n})\n```\n\n## Options\n\n### Connection-related options (required)\n\nOne of the following options should be provided. If more than one option are provided, each option will take precedence over others according to priority.\n\n|Priority|Option|Description|\n|:------:|------|-----------|\n|1|`mongoUrl`|A [connection string](https://docs.mongodb.com/manual/reference/connection-string/) for creating a new MongoClient connection. If database name is not present in the connection string, database name should be provided using `dbName` option. |\n|2|`clientPromise`|A Promise that is resolved with MongoClient connection. If the connection was established without database name being present in the connection string, database name should be provided using `dbName` option.|\n|3|`client`|An existing MongoClient connection. If the connection was established without database name being present in the connection string, database name should be provided using `dbName` option.|\n\n### More options\n\n|Option|Default|Description|\n|------|:-----:|-----------|\n|`mongoOptions`|`{ useUnifiedTopology: true }`|Options object for [`MongoClient.connect()`](https://mongodb.github.io/node-mongodb-native/3.3/api/MongoClient.html#.connect) method. Can be used with `mongoUrl` option.|\n|`dbName`||A name of database used for storing sessions. Can be used with `mongoUrl`, or `clientPromise` options. Takes precedence over database name present in the connection string.|\n|`collectionName`|`'sessions'`|A name of collection used for storing sessions.|\n|`ttl`|`1209600`|The maximum lifetime (in seconds) of the session which will be used to set `session.cookie.expires` if it is not yet set. Default is 14 days.|\n|`autoRemove`|`'native'`|Behavior for removing expired sessions. Possible values: `'native'`, `'interval'` and `'disabled'`.|\n|`autoRemoveInterval`|`10`|Interval (in minutes) used when `autoRemove` option is set to `interval`.|\n|`touchAfter`|`0`|Interval (in seconds) between session updates.|\n|`stringify`|`true`|If `true`, connect-mongo will serialize sessions using `JSON.stringify` before setting them, and deserialize them with `JSON.parse` when getting them. This is useful if you are using types that MongoDB doesn't support.|\n|`serialize`||Custom hook for serializing sessions to MongoDB. This is helpful if you need to modify the session before writing it out.|\n|`unserialize`||Custom hook for unserializing sessions from MongoDB. This can be used in scenarios where you need to support different types of serializations (e.g., objects and JSON strings) or need to modify the session before using it in your app.|\n|`writeOperationOptions`||Options object to pass to every MongoDB write operation call that supports it (e.g. `update`, `remove`). Useful for adjusting the write concern. Only exception: If `autoRemove` is set to `'interval'`, the write concern from the `writeOperationOptions` object will get overwritten.|\n|`transformId`||Transform original `sessionId` in whatever you want to use as storage key.|\n|`crypto`||Crypto related options. See below.|\n\n### Crypto-related options\n\n|Option|Default|Description|\n|------|:-----:|-----------|\n|`secret`|`false`|Enables transparent crypto in accordance with [OWASP session management recommendations](https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Session_Management_Cheat_Sheet.md).|\n|`algorithm`|`'aes-256-gcm'`|Allows for changes to the default symmetric encryption cipher. See [`crypto.getCiphers()`](https://nodejs.org/api/crypto.html#crypto_crypto_getciphers) for supported algorithms.|\n|`hashing`|`'sha512'`|May be used to change the default hashing algorithm. See [`crypto.getHashes()`](https://nodejs.org/api/crypto.html#crypto_crypto_gethashes) for supported hashing algorithms.|\n|`encodeas`|`'hex'`|Specify to change the session data cipher text encoding.|\n|`key_size`|`32`|When using varying algorithms the key size may be used. Default value `32` is based on the `AES` blocksize.|\n|`iv_size`|`16`|This can be used to adjust the default [IV](https://csrc.nist.gov/glossary/term/IV) size if a different algorithm requires a different size.|\n|`at_size`|`16`|When using newer `AES` modes such as the default `GCM` or `CCM` an authentication tag size can be defined.|\n\n## Development\n\n```\nyarn install\ndocker-compose up -d\n# Run these 2 lines in 2 shell\nyarn watch:build\nyarn watch:test\n```\n\n### Example application\n\n```\nyarn link\ncd example\nyarn link \"connect-mongo\"\nyarn install\nyarn start\n```\n\n### Release\n\nSince I cannot access the setting page. I can only do it manually.\n\n1. Bump version, update `CHANGELOG.md` and README. Commit and push.\n2. Run `yarn build && yarn test && npm publish`\n3. `git tag vX.Y.Z && git push --tags`\n\n## License\n\nThe MIT License\n","keywords":["connect","mongo","mongodb","session","express"],"bugs":{"url":"https://github.com/jdesboeufs/connect-mongo/issues"},"readmeFilename":"README.md","contributors":[{"name":"Casey Banner","email":"kcbanner@gmail.com"},{"name":"Jerome Desboeufs","email":"jerome.desboeufs@gmail.com"},{"name":"MC Or","email":"mingchuno@gmail.com"}],"license":"MIT","homepage":"https://github.com/jdesboeufs/connect-mongo#readme"}